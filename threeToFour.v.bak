// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.


// Generated by Quartus II 64-Bit Version 13.0 (Build Build 232 06/12/2013)
// Created on Sat Nov 02 13:33:52 2019

antfarm antfarm_inst
(
	.pop(pop_sig) ,	// input  pop_sig
	.push(push_sig) ,	// input  push_sig
	.x0(x0_sig) ,	// input  x0_sig
	.x1(x1_sig) ,	// input  x1_sig
	.x2(x2_sig) ,	// input  x2_sig
	.R0(R0_sig) ,	// input  R0_sig
	.R1(R1_sig) ,	// input  R1_sig
	.Ay0(Ay0_sig) ,	// output  Ay0_sig
	.Ay1(Ay1_sig) ,	// output  Ay1_sig
	.Ay2(Ay2_sig) ,	// output  Ay2_sig
	.Ay3(Ay3_sig) ,	// output  Ay3_sig
	.Ay4(Ay4_sig) ,	// output  Ay4_sig
	.Ay5(Ay5_sig) ,	// output  Ay5_sig
	.Ay6(Ay6_sig) 	// output  Ay6_sig
);

