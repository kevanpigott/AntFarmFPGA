TimeQuest Timing Analyzer report for antfarm
Wed Dec 04 08:58:50 2019
Quartus II 64-Bit Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition


---------------------
; Table of Contents ;
---------------------
  1. Legal Notice
  2. TimeQuest Timing Analyzer Summary
  3. Parallel Compilation
  4. Clocks
  5. Slow Model Fmax Summary
  6. Slow Model Setup Summary
  7. Slow Model Hold Summary
  8. Slow Model Recovery Summary
  9. Slow Model Removal Summary
 10. Slow Model Minimum Pulse Width Summary
 11. Slow Model Setup: 'clk'
 12. Slow Model Setup: 'clkdiv:inst8|out'
 13. Slow Model Setup: 'VGA_CLK'
 14. Slow Model Hold: 'VGA_CLK'
 15. Slow Model Hold: 'clk'
 16. Slow Model Hold: 'clkdiv:inst8|out'
 17. Slow Model Minimum Pulse Width: 'clk'
 18. Slow Model Minimum Pulse Width: 'VGA_CLK'
 19. Slow Model Minimum Pulse Width: 'clkdiv:inst8|out'
 20. Setup Times
 21. Hold Times
 22. Clock to Output Times
 23. Minimum Clock to Output Times
 24. Fast Model Setup Summary
 25. Fast Model Hold Summary
 26. Fast Model Recovery Summary
 27. Fast Model Removal Summary
 28. Fast Model Minimum Pulse Width Summary
 29. Fast Model Setup: 'clk'
 30. Fast Model Setup: 'clkdiv:inst8|out'
 31. Fast Model Setup: 'VGA_CLK'
 32. Fast Model Hold: 'VGA_CLK'
 33. Fast Model Hold: 'clk'
 34. Fast Model Hold: 'clkdiv:inst8|out'
 35. Fast Model Minimum Pulse Width: 'clk'
 36. Fast Model Minimum Pulse Width: 'VGA_CLK'
 37. Fast Model Minimum Pulse Width: 'clkdiv:inst8|out'
 38. Setup Times
 39. Hold Times
 40. Clock to Output Times
 41. Minimum Clock to Output Times
 42. Multicorner Timing Analysis Summary
 43. Setup Times
 44. Hold Times
 45. Clock to Output Times
 46. Minimum Clock to Output Times
 47. Setup Transfers
 48. Hold Transfers
 49. Report TCCS
 50. Report RSKM
 51. Unconstrained Paths
 52. TimeQuest Timing Analyzer Messages



----------------
; Legal Notice ;
----------------
Copyright (C) 1991-2013 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.



+----------------------------------------------------------------------------------------+
; TimeQuest Timing Analyzer Summary                                                      ;
+--------------------+-------------------------------------------------------------------+
; Quartus II Version ; Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition ;
; Revision Name      ; antfarm                                                           ;
; Device Family      ; Cyclone II                                                        ;
; Device Name        ; EP2C20F484C7                                                      ;
; Timing Models      ; Final                                                             ;
; Delay Model        ; Combined                                                          ;
; Rise/Fall Delays   ; Unavailable                                                       ;
+--------------------+-------------------------------------------------------------------+


Parallel compilation was disabled, but you have multiple processors available. Enable parallel compilation to reduce compilation time.
+-------------------------------------+
; Parallel Compilation                ;
+----------------------------+--------+
; Processors                 ; Number ;
+----------------------------+--------+
; Number detected on machine ; 12     ;
; Maximum allowed            ; 1      ;
+----------------------------+--------+


+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Clocks                                                                                                                                                                                             ;
+------------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+----------------------+
; Clock Name       ; Type ; Period ; Frequency  ; Rise  ; Fall  ; Duty Cycle ; Divide by ; Multiply by ; Phase ; Offset ; Edge List ; Edge Shift ; Inverted ; Master ; Source ; Targets              ;
+------------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+----------------------+
; clk              ; Base ; 1.000  ; 1000.0 MHz ; 0.000 ; 0.500 ;            ;           ;             ;       ;        ;           ;            ;          ;        ;        ; { clk }              ;
; clkdiv:inst8|out ; Base ; 1.000  ; 1000.0 MHz ; 0.000 ; 0.500 ;            ;           ;             ;       ;        ;           ;            ;          ;        ;        ; { clkdiv:inst8|out } ;
; VGA_CLK          ; Base ; 1.000  ; 1000.0 MHz ; 0.000 ; 0.500 ;            ;           ;             ;       ;        ;           ;            ;          ;        ;        ; { VGA_CLK }          ;
+------------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+----------------------+


+--------------------------------------------------------+
; Slow Model Fmax Summary                                ;
+------------+-----------------+------------------+------+
; Fmax       ; Restricted Fmax ; Clock Name       ; Note ;
+------------+-----------------+------------------+------+
; 4.23 MHz   ; 4.23 MHz        ; clk              ;      ;
; 157.33 MHz ; 157.33 MHz      ; clkdiv:inst8|out ;      ;
; 185.05 MHz ; 185.05 MHz      ; VGA_CLK          ;      ;
+------------+-----------------+------------------+------+
This panel reports FMAX for every clock in the design, regardless of the user-specified clock periods.  FMAX is only computed for paths where the source and destination registers or ports are driven by the same clock.  Paths of different clocks, including generated clocks, are ignored.  For paths between a clock and its inversion, FMAX is computed as if the rising and falling edges are scaled along with FMAX, such that the duty cycle (in terms of a percentage) is maintained. Altera recommends that you always use clock constraints and other slack reports for sign-off analysis.


+---------------------------------------------+
; Slow Model Setup Summary                    ;
+------------------+----------+---------------+
; Clock            ; Slack    ; End Point TNS ;
+------------------+----------+---------------+
; clk              ; -235.377 ; -796.275      ;
; clkdiv:inst8|out ; -5.356   ; -537.890      ;
; VGA_CLK          ; -4.404   ; -118.369      ;
+------------------+----------+---------------+


+------------------------------------------+
; Slow Model Hold Summary                  ;
+------------------+-------+---------------+
; Clock            ; Slack ; End Point TNS ;
+------------------+-------+---------------+
; VGA_CLK          ; 0.445 ; 0.000         ;
; clk              ; 0.445 ; 0.000         ;
; clkdiv:inst8|out ; 0.445 ; 0.000         ;
+------------------+-------+---------------+


-------------------------------
; Slow Model Recovery Summary ;
-------------------------------
No paths to report.


------------------------------
; Slow Model Removal Summary ;
------------------------------
No paths to report.


+-------------------------------------------+
; Slow Model Minimum Pulse Width Summary    ;
+------------------+--------+---------------+
; Clock            ; Slack  ; End Point TNS ;
+------------------+--------+---------------+
; clk              ; -1.631 ; -116.499      ;
; VGA_CLK          ; -1.631 ; -54.177       ;
; clkdiv:inst8|out ; -0.611 ; -252.954      ;
+------------------+--------+---------------+


+----------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Setup: 'clk'                                                                                                                ;
+----------+---------------------------+-----------------------+------------------+-------------+--------------+------------+------------+
; Slack    ; From Node                 ; To Node               ; Launch Clock     ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+----------+---------------------------+-----------------------+------------------+-------------+--------------+------------+------------+
; -235.377 ; clkdiv:inst8|count[50]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.011      ; 236.426    ;
; -235.297 ; clkdiv:inst8|count[51]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.011      ; 236.346    ;
; -235.218 ; clkdiv:inst8|count[52]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.011      ; 236.267    ;
; -235.179 ; clkdiv:inst8|count[53]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.011      ; 236.228    ;
; -235.059 ; clkdiv:inst8|count[54]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.011      ; 236.108    ;
; -235.019 ; clkdiv:inst8|count[55]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.011      ; 236.068    ;
; -234.939 ; clkdiv:inst8|count[56]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.011      ; 235.988    ;
; -234.826 ; clkdiv:inst8|count[57]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.011      ; 235.875    ;
; -234.684 ; clkdiv:inst8|count[58]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.011      ; 235.733    ;
; -234.564 ; clkdiv:inst8|count[59]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.011      ; 235.613    ;
; -234.525 ; clkdiv:inst8|count[60]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.011      ; 235.574    ;
; -234.405 ; clkdiv:inst8|count[61]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.011      ; 235.454    ;
; -234.365 ; clkdiv:inst8|count[62]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.011      ; 235.414    ;
; -234.241 ; clkdiv:inst8|count[63]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.011      ; 235.290    ;
; -231.657 ; clkdiv:inst8|count[49]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; -0.001     ; 232.694    ;
; -226.034 ; clkdiv:inst8|count[48]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; -0.005     ; 227.067    ;
; -220.756 ; clkdiv:inst8|count[47]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.001      ; 221.795    ;
; -216.730 ; clkdiv:inst8|count[46]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.001      ; 217.769    ;
; -214.231 ; clkdiv:inst8|count[45]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.011      ; 215.280    ;
; -207.569 ; clkdiv:inst8|count[44]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.005      ; 208.612    ;
; -201.948 ; clkdiv:inst8|count[43]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.010      ; 202.996    ;
; -198.236 ; clkdiv:inst8|count[42]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.011      ; 199.285    ;
; -193.906 ; clkdiv:inst8|count[41]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.006      ; 194.950    ;
; -188.307 ; clkdiv:inst8|count[40]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.007      ; 189.352    ;
; -183.940 ; clkdiv:inst8|count[39]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.010      ; 184.988    ;
; -180.136 ; clkdiv:inst8|count[38]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.006      ; 181.180    ;
; -175.553 ; clkdiv:inst8|count[37]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.006      ; 176.597    ;
; -170.134 ; clkdiv:inst8|count[36]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.006      ; 171.178    ;
; -165.714 ; clkdiv:inst8|count[35]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.006      ; 166.758    ;
; -160.766 ; clkdiv:inst8|count[34]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.006      ; 161.810    ;
; -156.429 ; clkdiv:inst8|count[33]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.006      ; 157.473    ;
; -151.627 ; clkdiv:inst8|count[32]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.006      ; 152.671    ;
; -148.630 ; clkdiv:inst8|count[31]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.011      ; 149.679    ;
; -139.233 ; clkdiv:inst8|count[30]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.011      ; 140.282    ;
; -132.426 ; clkdiv:inst8|count[29]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.011      ; 133.475    ;
; -127.342 ; clkdiv:inst8|count[28]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.011      ; 128.391    ;
; -122.611 ; clkdiv:inst8|count[27]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.011      ; 123.660    ;
; -114.057 ; clkdiv:inst8|count[26]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.011      ; 115.106    ;
; -109.724 ; clkdiv:inst8|count[25]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.011      ; 110.773    ;
; -105.021 ; clkdiv:inst8|count[24]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.011      ; 106.070    ;
; -99.423  ; clkdiv:inst8|count[23]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.011      ; 100.472    ;
; -95.065  ; clkdiv:inst8|count[22]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.011      ; 96.114     ;
; -89.920  ; clkdiv:inst8|count[21]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.011      ; 90.969     ;
; -85.500  ; clkdiv:inst8|count[20]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.011      ; 86.549     ;
; -79.786  ; clkdiv:inst8|count[19]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.011      ; 80.835     ;
; -74.362  ; clkdiv:inst8|count[18]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.011      ; 75.411     ;
; -72.628  ; clkdiv:inst8|count[17]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.011      ; 73.677     ;
; -64.960  ; clkdiv:inst8|count[16]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.011      ; 66.009     ;
; -59.753  ; clkdiv:inst8|count[15]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.020      ; 60.811     ;
; -54.990  ; clkdiv:inst8|count[14]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.020      ; 56.048     ;
; -51.023  ; clkdiv:inst8|count[13]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.020      ; 52.081     ;
; -46.245  ; clkdiv:inst8|count[12]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.020      ; 47.303     ;
; -41.669  ; clkdiv:inst8|count[11]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.020      ; 42.727     ;
; -37.652  ; clkdiv:inst8|count[10]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.020      ; 38.710     ;
; -31.502  ; clkdiv:inst8|count[9]     ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.020      ; 32.560     ;
; -27.447  ; clkdiv:inst8|count[8]     ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.020      ; 28.505     ;
; -23.469  ; clkdiv:inst8|count[7]     ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.020      ; 24.527     ;
; -18.936  ; clkdiv:inst8|count[6]     ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.020      ; 19.994     ;
; -16.590  ; clkdiv:inst8|count[5]     ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.020      ; 17.648     ;
; -13.860  ; blockV2:inst4|outState[5] ; probe:inst|outTens[6] ; clkdiv:inst8|out ; clk         ; 1.000        ; 0.565      ; 15.463     ;
; -13.857  ; blockV2:inst4|outState[5] ; probe:inst|outTens[5] ; clkdiv:inst8|out ; clk         ; 1.000        ; 0.565      ; 15.460     ;
; -13.826  ; blockV2:inst3|outState[5] ; probe:inst|outTens[2] ; clkdiv:inst8|out ; clk         ; 1.000        ; 0.576      ; 15.440     ;
; -13.822  ; blockV2:inst3|outState[5] ; probe:inst|outTens[4] ; clkdiv:inst8|out ; clk         ; 1.000        ; 0.576      ; 15.436     ;
; -13.821  ; blockV2:inst3|outState[7] ; probe:inst|outTens[2] ; clkdiv:inst8|out ; clk         ; 1.000        ; 0.576      ; 15.435     ;
; -13.817  ; blockV2:inst3|outState[7] ; probe:inst|outTens[4] ; clkdiv:inst8|out ; clk         ; 1.000        ; 0.576      ; 15.431     ;
; -13.787  ; blockV2:inst4|outState[6] ; probe:inst|outTens[6] ; clkdiv:inst8|out ; clk         ; 1.000        ; 0.565      ; 15.390     ;
; -13.784  ; blockV2:inst4|outState[6] ; probe:inst|outTens[5] ; clkdiv:inst8|out ; clk         ; 1.000        ; 0.565      ; 15.387     ;
; -13.718  ; blockV2:inst3|outState[6] ; probe:inst|outTens[2] ; clkdiv:inst8|out ; clk         ; 1.000        ; 0.576      ; 15.332     ;
; -13.714  ; blockV2:inst3|outState[6] ; probe:inst|outTens[4] ; clkdiv:inst8|out ; clk         ; 1.000        ; 0.576      ; 15.328     ;
; -13.709  ; blockV2:inst4|outState[5] ; probe:inst|outTens[4] ; clkdiv:inst8|out ; clk         ; 1.000        ; 0.565      ; 15.312     ;
; -13.702  ; blockV2:inst4|outState[5] ; probe:inst|outTens[2] ; clkdiv:inst8|out ; clk         ; 1.000        ; 0.565      ; 15.305     ;
; -13.692  ; blockV2:inst4|outState[7] ; probe:inst|outTens[6] ; clkdiv:inst8|out ; clk         ; 1.000        ; 0.565      ; 15.295     ;
; -13.689  ; blockV2:inst4|outState[7] ; probe:inst|outTens[5] ; clkdiv:inst8|out ; clk         ; 1.000        ; 0.565      ; 15.292     ;
; -13.670  ; blockV2:inst3|outState[5] ; probe:inst|outTens[6] ; clkdiv:inst8|out ; clk         ; 1.000        ; 0.576      ; 15.284     ;
; -13.667  ; blockV2:inst3|outState[5] ; probe:inst|outTens[5] ; clkdiv:inst8|out ; clk         ; 1.000        ; 0.576      ; 15.281     ;
; -13.665  ; blockV2:inst3|outState[7] ; probe:inst|outTens[6] ; clkdiv:inst8|out ; clk         ; 1.000        ; 0.576      ; 15.279     ;
; -13.662  ; blockV2:inst3|outState[7] ; probe:inst|outTens[5] ; clkdiv:inst8|out ; clk         ; 1.000        ; 0.576      ; 15.276     ;
; -13.640  ; blockV2:inst3|outState[5] ; probe:inst|outTens[1] ; clkdiv:inst8|out ; clk         ; 1.000        ; 0.578      ; 15.256     ;
; -13.640  ; blockV2:inst3|outState[5] ; probe:inst|outTens[0] ; clkdiv:inst8|out ; clk         ; 1.000        ; 0.578      ; 15.256     ;
; -13.636  ; blockV2:inst4|outState[6] ; probe:inst|outTens[4] ; clkdiv:inst8|out ; clk         ; 1.000        ; 0.565      ; 15.239     ;
; -13.635  ; blockV2:inst3|outState[7] ; probe:inst|outTens[1] ; clkdiv:inst8|out ; clk         ; 1.000        ; 0.578      ; 15.251     ;
; -13.635  ; blockV2:inst3|outState[7] ; probe:inst|outTens[0] ; clkdiv:inst8|out ; clk         ; 1.000        ; 0.578      ; 15.251     ;
; -13.632  ; blockV2:inst3|outState[5] ; probe:inst|outTens[3] ; clkdiv:inst8|out ; clk         ; 1.000        ; 0.578      ; 15.248     ;
; -13.629  ; blockV2:inst4|outState[6] ; probe:inst|outTens[2] ; clkdiv:inst8|out ; clk         ; 1.000        ; 0.565      ; 15.232     ;
; -13.627  ; blockV2:inst3|outState[7] ; probe:inst|outTens[3] ; clkdiv:inst8|out ; clk         ; 1.000        ; 0.578      ; 15.243     ;
; -13.562  ; blockV2:inst3|outState[6] ; probe:inst|outTens[6] ; clkdiv:inst8|out ; clk         ; 1.000        ; 0.576      ; 15.176     ;
; -13.559  ; blockV2:inst3|outState[6] ; probe:inst|outTens[5] ; clkdiv:inst8|out ; clk         ; 1.000        ; 0.576      ; 15.173     ;
; -13.541  ; blockV2:inst4|outState[7] ; probe:inst|outTens[4] ; clkdiv:inst8|out ; clk         ; 1.000        ; 0.565      ; 15.144     ;
; -13.534  ; blockV2:inst4|outState[7] ; probe:inst|outTens[2] ; clkdiv:inst8|out ; clk         ; 1.000        ; 0.565      ; 15.137     ;
; -13.532  ; blockV2:inst3|outState[6] ; probe:inst|outTens[1] ; clkdiv:inst8|out ; clk         ; 1.000        ; 0.578      ; 15.148     ;
; -13.532  ; blockV2:inst3|outState[6] ; probe:inst|outTens[0] ; clkdiv:inst8|out ; clk         ; 1.000        ; 0.578      ; 15.148     ;
; -13.524  ; blockV2:inst3|outState[6] ; probe:inst|outTens[3] ; clkdiv:inst8|out ; clk         ; 1.000        ; 0.578      ; 15.140     ;
; -13.491  ; blockV2:inst4|outState[5] ; probe:inst|outTens[1] ; clkdiv:inst8|out ; clk         ; 1.000        ; 0.567      ; 15.096     ;
; -13.490  ; blockV2:inst4|outState[5] ; probe:inst|outTens[3] ; clkdiv:inst8|out ; clk         ; 1.000        ; 0.567      ; 15.095     ;
; -13.427  ; blockV2:inst3|outState[5] ; probe:inst|outOnes[4] ; clkdiv:inst8|out ; clk         ; 1.000        ; 0.583      ; 15.048     ;
; -13.423  ; blockV2:inst4|outState[5] ; probe:inst|outOnes[6] ; clkdiv:inst8|out ; clk         ; 1.000        ; 0.572      ; 15.033     ;
; -13.422  ; blockV2:inst3|outState[7] ; probe:inst|outOnes[4] ; clkdiv:inst8|out ; clk         ; 1.000        ; 0.583      ; 15.043     ;
; -13.418  ; blockV2:inst4|outState[6] ; probe:inst|outTens[1] ; clkdiv:inst8|out ; clk         ; 1.000        ; 0.567      ; 15.023     ;
; -13.417  ; blockV2:inst4|outState[6] ; probe:inst|outTens[3] ; clkdiv:inst8|out ; clk         ; 1.000        ; 0.567      ; 15.022     ;
; -13.412  ; blockV2:inst4|outState[5] ; probe:inst|outOnes[5] ; clkdiv:inst8|out ; clk         ; 1.000        ; 0.572      ; 15.022     ;
+----------+---------------------------+-----------------------+------------------+-------------+--------------+------------+------------+


+--------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Setup: 'clkdiv:inst8|out'                                                                                                       ;
+--------+------------------------------+---------------------+------------------+------------------+--------------+------------+------------+
; Slack  ; From Node                    ; To Node             ; Launch Clock     ; Latch Clock      ; Relationship ; Clock Skew ; Data Delay ;
+--------+------------------------------+---------------------+------------------+------------------+--------------+------------+------------+
; -5.356 ; blockV2:inst2|sugarNorth     ; blockV2:inst4|NS[6] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; 0.000      ; 6.394      ;
; -5.310 ; blockV2:inst2|sugarNorth     ; blockV2:inst4|NS[5] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; -0.013     ; 6.335      ;
; -5.292 ; blockV2:inst5|antNorth       ; blockV2:inst3|NS[6] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; 0.013      ; 6.343      ;
; -5.283 ; blockV2:inst7|NS[7]          ; blockV2:inst7|NS[5] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; 0.003      ; 6.324      ;
; -5.263 ; blockV2:inst3|NS[0]          ; blockV2:inst3|NS[4] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; 0.006      ; 6.307      ;
; -5.246 ; blockV2:inst2|sugarNorth     ; blockV2:inst4|NS[7] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; 0.000      ; 6.284      ;
; -5.234 ; blockV2:inst2|NS[4]          ; blockV2:inst2|NS[3] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; -0.001     ; 6.271      ;
; -5.228 ; blockV2:inst2|Northreceiving ; blockV2:inst4|NS[5] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; -0.006     ; 6.260      ;
; -5.211 ; blockV2:inst2|antNorth       ; blockV2:inst4|NS[6] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; 0.000      ; 6.249      ;
; -5.199 ; blockV2:inst3|antEast        ; blockV2:inst7|NS[1] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; -0.018     ; 6.219      ;
; -5.185 ; blockV2:inst7|NS[4]          ; blockV2:inst7|NS[1] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; 0.000      ; 6.223      ;
; -5.178 ; blockV2:inst2|Southreceiving ; blockV2:inst4|NS[6] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; 0.001      ; 6.217      ;
; -5.165 ; blockV2:inst2|antNorth       ; blockV2:inst4|NS[5] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; -0.013     ; 6.190      ;
; -5.162 ; blockV2:inst3|antEast        ; blockV2:inst7|NS[2] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; -0.003     ; 6.197      ;
; -5.162 ; blockV2:inst6|NS[7]          ; blockV2:inst6|NS[4] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; 0.007      ; 6.207      ;
; -5.161 ; blockV2:inst3|NS[7]          ; blockV2:inst3|NS[4] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; 0.006      ; 6.205      ;
; -5.150 ; blockV2:inst3|NS[7]          ; blockV2:inst3|NS[6] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; 0.007      ; 6.195      ;
; -5.139 ; blockV2:inst2|sugarNorth     ; blockV2:inst4|NS[3] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; -0.016     ; 6.161      ;
; -5.139 ; blockV2:inst6|NS[6]          ; blockV2:inst6|NS[4] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; 0.007      ; 6.184      ;
; -5.134 ; blockV2:inst4|antNorth       ; blockV2:inst4|NS[2] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; 0.010      ; 6.182      ;
; -5.134 ; blockV2:inst6|NS[6]          ; blockV2:inst6|NS[6] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; 0.000      ; 6.172      ;
; -5.132 ; blockV2:inst6|NS[2]          ; blockV2:inst6|NS[4] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; 0.000      ; 6.170      ;
; -5.127 ; blockV2:inst3|NS[0]          ; blockV2:inst3|NS[3] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; -0.016     ; 6.149      ;
; -5.122 ; blockV2:inst4|NS[6]          ; blockV2:inst4|NS[5] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; -0.013     ; 6.147      ;
; -5.122 ; blockV2:inst7|antWest        ; blockV2:inst3|NS[4] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; 0.004      ; 6.164      ;
; -5.119 ; blockV2:inst6|NS[7]          ; blockV2:inst6|NS[3] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; -0.005     ; 6.152      ;
; -5.115 ; blockV2:inst4|NS[7]          ; blockV2:inst4|NS[1] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; -0.013     ; 6.140      ;
; -5.114 ; blockV2:inst6|antNorth       ; blockV2:inst4|NS[7] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; -0.010     ; 6.142      ;
; -5.102 ; blockV2:inst5|antNorth       ; blockV2:inst3|NS[7] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; 0.006      ; 6.146      ;
; -5.101 ; blockV2:inst2|antNorth       ; blockV2:inst4|NS[7] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; 0.000      ; 6.139      ;
; -5.100 ; blockV2:inst7|NS[6]          ; blockV2:inst7|NS[1] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; -0.013     ; 6.125      ;
; -5.090 ; blockV2:inst2|sugarNorth     ; blockV2:inst4|NS[4] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; -0.009     ; 6.119      ;
; -5.089 ; blockV2:inst7|antWest        ; blockV2:inst7|NS[6] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; 0.007      ; 6.134      ;
; -5.080 ; blockV2:inst6|antNorth       ; blockV2:inst6|NS[3] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; -0.012     ; 6.106      ;
; -5.072 ; blockV2:inst4|NS[4]          ; blockV2:inst4|NS[3] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; -0.007     ; 6.103      ;
; -5.068 ; blockV2:inst2|Southreceiving ; blockV2:inst4|NS[7] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; 0.001      ; 6.107      ;
; -5.064 ; blockV2:inst4|NS[6]          ; blockV2:inst4|NS[7] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; 0.000      ; 6.102      ;
; -5.061 ; blockV2:inst7|NS[7]          ; blockV2:inst7|NS[4] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; -0.013     ; 6.086      ;
; -5.053 ; blockV2:inst2|sugarNorth     ; blockV2:inst6|NS[7] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; 0.003      ; 6.094      ;
; -5.047 ; blockV2:inst4|NS[4]          ; blockV2:inst4|NS[1] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; -0.004     ; 6.081      ;
; -5.042 ; blockV2:inst6|antNorth       ; blockV2:inst4|NS[4] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; -0.019     ; 6.061      ;
; -5.038 ; blockV2:inst6|antNorth       ; blockV2:inst4|NS[5] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; -0.023     ; 6.053      ;
; -5.034 ; blockV2:inst7|NS[7]          ; blockV2:inst7|NS[1] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; -0.013     ; 6.059      ;
; -5.030 ; blockV2:inst4|NS[7]          ; blockV2:inst4|NS[5] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; -0.013     ; 6.055      ;
; -5.024 ; blockV2:inst4|antNorth       ; blockV2:inst4|NS[6] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; 0.010      ; 6.072      ;
; -5.024 ; blockV2:inst4|NS[4]          ; blockV2:inst4|NS[4] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; 0.000      ; 6.062      ;
; -5.016 ; blockV2:inst4|NS[4]          ; blockV2:inst4|NS[5] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; -0.004     ; 6.050      ;
; -5.000 ; blockV2:inst2|sugarNorth     ; blockV2:inst4|NS[1] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; -0.013     ; 6.025      ;
; -4.999 ; blockV2:inst2|NS[7]          ; blockV2:inst2|NS[3] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; -0.001     ; 6.036      ;
; -4.994 ; blockV2:inst2|antNorth       ; blockV2:inst4|NS[3] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; -0.016     ; 6.016      ;
; -4.993 ; blockV2:inst2|NS[4]          ; blockV2:inst2|NS[2] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; 0.002      ; 6.033      ;
; -4.991 ; blockV2:inst4|NS[6]          ; blockV2:inst4|NS[1] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; -0.013     ; 6.016      ;
; -4.990 ; blockV2:inst7|NS[6]          ; blockV2:inst7|NS[5] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; 0.003      ; 6.031      ;
; -4.986 ; blockV2:inst2|antNorth       ; blockV2:inst4|NS[4] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; -0.009     ; 6.015      ;
; -4.986 ; blockV2:inst4|antNorth       ; blockV2:inst2|NS[3] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; -0.001     ; 6.023      ;
; -4.981 ; blockV2:inst3|NS[4]          ; blockV2:inst3|NS[4] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; 0.000      ; 6.019      ;
; -4.981 ; blockV2:inst6|antNorth       ; blockV2:inst6|NS[4] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; 0.000      ; 6.019      ;
; -4.978 ; blockV2:inst6|NS[7]          ; blockV2:inst6|NS[6] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; 0.000      ; 6.016      ;
; -4.968 ; blockV2:inst3|NS[6]          ; blockV2:inst3|NS[4] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; -0.001     ; 6.005      ;
; -4.967 ; blockV2:inst2|antNorth       ; blockV2:inst6|NS[2] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; 0.010      ; 6.015      ;
; -4.965 ; blockV2:inst2|NS[7]          ; blockV2:inst2|NS[5] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; 0.001      ; 6.004      ;
; -4.960 ; blockV2:inst3|NS[7]          ; blockV2:inst3|NS[7] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; 0.000      ; 5.998      ;
; -4.958 ; blockV2:inst4|NS[7]          ; blockV2:inst4|NS[3] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; -0.016     ; 5.980      ;
; -4.957 ; blockV2:inst4|NS[6]          ; blockV2:inst4|NS[6] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; 0.000      ; 5.995      ;
; -4.954 ; blockV2:inst6|antNorth       ; blockV2:inst4|NS[6] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; -0.010     ; 5.982      ;
; -4.952 ; blockV2:inst3|NS[6]          ; blockV2:inst3|NS[6] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; 0.000      ; 5.990      ;
; -4.948 ; blockV2:inst2|Southreceiving ; blockV2:inst4|NS[2] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; 0.001      ; 5.987      ;
; -4.946 ; blockV2:inst2|NS[6]          ; blockV2:inst2|NS[2] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; 0.001      ; 5.985      ;
; -4.945 ; blockV2:inst6|NS[4]          ; blockV2:inst6|NS[6] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; -0.007     ; 5.976      ;
; -4.944 ; blockV2:inst2|NS[6]          ; blockV2:inst2|NS[3] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; -0.002     ; 5.980      ;
; -4.944 ; blockV2:inst7|NS[4]          ; blockV2:inst7|NS[6] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; 0.013      ; 5.995      ;
; -4.942 ; blockV2:inst2|Southreceiving ; blockV2:inst4|NS[5] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; -0.012     ; 5.968      ;
; -4.941 ; blockV2:inst6|antNorth       ; blockV2:inst4|NS[3] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; -0.026     ; 5.953      ;
; -4.937 ; blockV2:inst4|NS[4]          ; blockV2:inst4|NS[6] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; 0.009      ; 5.984      ;
; -4.934 ; blockV2:inst3|antEast        ; blockV2:inst3|NS[6] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; -0.007     ; 5.965      ;
; -4.932 ; blockV2:inst6|NS[4]          ; blockV2:inst6|NS[3] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; -0.012     ; 5.958      ;
; -4.932 ; blockV2:inst6|NS[7]          ; blockV2:inst6|NS[7] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; 0.000      ; 5.970      ;
; -4.924 ; blockV2:inst6|antNorth       ; blockV2:inst4|NS[0] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; -0.018     ; 5.944      ;
; -4.921 ; blockV2:inst2|NS[7]          ; blockV2:inst2|NS[2] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; 0.002      ; 5.961      ;
; -4.918 ; blockV2:inst3|NS[0]          ; blockV2:inst3|NS[6] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; 0.007      ; 5.963      ;
; -4.917 ; blockV2:inst4|antNorth       ; blockV2:inst4|NS[3] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; -0.006     ; 5.949      ;
; -4.917 ; blockV2:inst4|NS[0]          ; blockV2:inst4|NS[3] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; -0.008     ; 5.947      ;
; -4.914 ; blockV2:inst4|antNorth       ; blockV2:inst4|NS[7] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; 0.010      ; 5.962      ;
; -4.911 ; blockV2:inst7|NS[0]          ; blockV2:inst7|ant   ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; -0.016     ; 5.933      ;
; -4.909 ; blockV2:inst3|NS[7]          ; blockV2:inst3|NS[1] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; 0.010      ; 5.957      ;
; -4.909 ; blockV2:inst3|NS[6]          ; blockV2:inst3|NS[7] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; -0.007     ; 5.940      ;
; -4.908 ; blockV2:inst6|NS[4]          ; blockV2:inst6|NS[4] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; 0.000      ; 5.946      ;
; -4.908 ; blockV2:inst2|antNorth       ; blockV2:inst6|NS[7] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; 0.003      ; 5.949      ;
; -4.908 ; blockV2:inst3|NS[0]          ; blockV2:inst3|NS[1] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; 0.010      ; 5.956      ;
; -4.904 ; blockV2:inst4|NS[6]          ; blockV2:inst4|NS[4] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; -0.009     ; 5.933      ;
; -4.899 ; blockV2:inst7|NS[4]          ; blockV2:inst7|NS[2] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; 0.015      ; 5.952      ;
; -4.898 ; blockV2:inst7|antWest        ; blockV2:inst3|NS[0] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; -0.002     ; 5.934      ;
; -4.893 ; blockV2:inst5|NS[4]          ; blockV2:inst5|NS[3] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; 0.000      ; 5.931      ;
; -4.893 ; blockV2:inst2|NS[2]          ; blockV2:inst2|NS[3] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; -0.003     ; 5.928      ;
; -4.890 ; blockV2:inst4|NS[4]          ; blockV2:inst4|NS[7] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; 0.009      ; 5.937      ;
; -4.880 ; blockV2:inst2|NS[5]          ; blockV2:inst2|NS[3] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; -0.002     ; 5.916      ;
; -4.880 ; blockV2:inst4|sugar          ; blockV2:inst4|NS[0] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; 0.008      ; 5.926      ;
; -4.878 ; blockV2:inst3|NS[4]          ; blockV2:inst3|NS[2] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; 0.005      ; 5.921      ;
; -4.878 ; blockV2:inst4|NS[6]          ; blockV2:inst4|sugar ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; -0.016     ; 5.900      ;
; -4.872 ; blockV2:inst4|antNorth       ; blockV2:inst4|NS[0] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; 0.002      ; 5.912      ;
+--------+------------------------------+---------------------+------------------+------------------+--------------+------------+------------+


+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Setup: 'VGA_CLK'                                                                                                                                      ;
+--------+-----------------------------------------+-----------------------------------------+--------------+-------------+--------------+------------+------------+
; Slack  ; From Node                               ; To Node                                 ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+-----------------------------------------+-----------------------------------------+--------------+-------------+--------------+------------+------------+
; -4.404 ; vga:inst1|vga640x480:display|h_count[6] ; vga:inst1|VGA_R[1]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.018     ; 5.424      ;
; -4.398 ; vga:inst1|vga640x480:display|h_count[7] ; vga:inst1|VGA_R[1]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.018     ; 5.418      ;
; -4.350 ; vga:inst1|vga640x480:display|h_count[6] ; vga:inst1|VGA_G[2]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.018     ; 5.370      ;
; -4.344 ; vga:inst1|vga640x480:display|h_count[7] ; vga:inst1|VGA_G[2]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.018     ; 5.364      ;
; -4.317 ; vga:inst1|vga640x480:display|v_count[2] ; vga:inst1|VGA_B[2]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.007     ; 5.348      ;
; -4.265 ; vga:inst1|vga640x480:display|h_count[4] ; vga:inst1|VGA_R[1]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.018     ; 5.285      ;
; -4.257 ; vga:inst1|vga640x480:display|h_count[3] ; vga:inst1|VGA_B[2]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.018     ; 5.277      ;
; -4.227 ; vga:inst1|vga640x480:display|v_count[2] ; vga:inst1|VGA_G[3]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.007     ; 5.258      ;
; -4.218 ; vga:inst1|vga640x480:display|h_count[3] ; vga:inst1|VGA_G[3]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.018     ; 5.238      ;
; -4.211 ; vga:inst1|vga640x480:display|h_count[4] ; vga:inst1|VGA_G[2]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.018     ; 5.231      ;
; -4.187 ; vga:inst1|vga640x480:display|v_count[4] ; vga:inst1|VGA_B[2]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.007     ; 5.218      ;
; -4.179 ; vga:inst1|vga640x480:display|h_count[5] ; vga:inst1|VGA_R[1]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.018     ; 5.199      ;
; -4.163 ; vga:inst1|vga640x480:display|h_count[6] ; vga:inst1|VGA_B[1]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.018     ; 5.183      ;
; -4.162 ; vga:inst1|vga640x480:display|h_count[6] ; vga:inst1|VGA_B[3]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.018     ; 5.182      ;
; -4.157 ; vga:inst1|vga640x480:display|h_count[7] ; vga:inst1|VGA_B[1]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.018     ; 5.177      ;
; -4.156 ; vga:inst1|vga640x480:display|h_count[7] ; vga:inst1|VGA_B[3]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.018     ; 5.176      ;
; -4.149 ; vga:inst1|vga640x480:display|v_count[2] ; vga:inst1|VGA_R[1]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.007     ; 5.180      ;
; -4.125 ; vga:inst1|vga640x480:display|h_count[5] ; vga:inst1|VGA_G[2]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.018     ; 5.145      ;
; -4.114 ; vga:inst1|vga640x480:display|h_count[2] ; vga:inst1|VGA_B[2]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.018     ; 5.134      ;
; -4.097 ; vga:inst1|vga640x480:display|v_count[4] ; vga:inst1|VGA_G[3]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.007     ; 5.128      ;
; -4.096 ; vga:inst1|vga640x480:display|v_count[2] ; vga:inst1|VGA_G[2]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.007     ; 5.127      ;
; -4.086 ; vga:inst1|vga640x480:display|v_count[2] ; vga:inst1|VGA_R[3]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.007     ; 5.117      ;
; -4.085 ; vga:inst1|vga640x480:display|v_count[1] ; vga:inst1|VGA_B[2]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.007     ; 5.116      ;
; -4.081 ; vga:inst1|vga640x480:display|h_count[7] ; vga:inst1|VGA_B[2]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.018     ; 5.101      ;
; -4.078 ; vga:inst1|vga640x480:display|v_count[3] ; vga:inst1|VGA_B[2]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.007     ; 5.109      ;
; -4.076 ; vga:inst1|vga640x480:display|v_count[6] ; vga:inst1|VGA_B[2]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.002     ; 5.112      ;
; -4.075 ; vga:inst1|vga640x480:display|h_count[2] ; vga:inst1|VGA_G[3]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.018     ; 5.095      ;
; -4.059 ; vga:inst1|vga640x480:display|v_count[0] ; vga:inst1|VGA_B[2]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.007     ; 5.090      ;
; -4.042 ; vga:inst1|vga640x480:display|h_count[7] ; vga:inst1|VGA_G[3]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.018     ; 5.062      ;
; -4.040 ; vga:inst1|vga640x480:display|h_count[5] ; vga:inst1|VGA_B[2]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.018     ; 5.060      ;
; -4.024 ; vga:inst1|vga640x480:display|h_count[4] ; vga:inst1|VGA_B[1]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.018     ; 5.044      ;
; -4.023 ; vga:inst1|vga640x480:display|h_count[4] ; vga:inst1|VGA_B[3]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.018     ; 5.043      ;
; -4.021 ; vga:inst1|vga640x480:display|h_count[3] ; vga:inst1|VGA_R[3]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.018     ; 5.041      ;
; -4.020 ; vga:inst1|vga640x480:display|h_count[3] ; vga:inst1|VGA_R[1]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.018     ; 5.040      ;
; -4.018 ; vga:inst1|vga640x480:display|v_count[4] ; vga:inst1|VGA_R[1]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.007     ; 5.049      ;
; -4.013 ; vga:inst1|vga640x480:display|v_count[5] ; vga:inst1|VGA_B[2]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.007     ; 5.044      ;
; -4.001 ; vga:inst1|vga640x480:display|h_count[5] ; vga:inst1|VGA_G[3]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.018     ; 5.021      ;
; -3.995 ; vga:inst1|vga640x480:display|v_count[1] ; vga:inst1|VGA_G[3]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.007     ; 5.026      ;
; -3.988 ; vga:inst1|vga640x480:display|v_count[3] ; vga:inst1|VGA_G[3]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.007     ; 5.019      ;
; -3.987 ; vga:inst1|vga640x480:display|h_count[2] ; vga:inst1|VGA_R[1]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.018     ; 5.007      ;
; -3.986 ; vga:inst1|vga640x480:display|v_count[6] ; vga:inst1|VGA_G[3]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.002     ; 5.022      ;
; -3.979 ; vga:inst1|vga640x480:display|v_count[2] ; vga:inst1|VGA_B[3]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.007     ; 5.010      ;
; -3.976 ; vga:inst1|vga640x480:display|v_count[2] ; vga:inst1|VGA_B[1]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.007     ; 5.007      ;
; -3.969 ; vga:inst1|vga640x480:display|v_count[0] ; vga:inst1|VGA_G[3]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.007     ; 5.000      ;
; -3.966 ; vga:inst1|vga640x480:display|h_count[3] ; vga:inst1|VGA_G[2]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.018     ; 4.986      ;
; -3.965 ; vga:inst1|vga640x480:display|v_count[4] ; vga:inst1|VGA_G[2]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.007     ; 4.996      ;
; -3.956 ; vga:inst1|vga640x480:display|v_count[4] ; vga:inst1|VGA_R[3]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.007     ; 4.987      ;
; -3.950 ; vga:inst1|vga640x480:display|h_count[1] ; vga:inst1|VGA_B[2]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.018     ; 4.970      ;
; -3.944 ; vga:inst1|vga640x480:display|h_count[3] ; vga:inst1|VGA_B[3]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.018     ; 4.964      ;
; -3.941 ; vga:inst1|vga640x480:display|h_count[3] ; vga:inst1|VGA_B[1]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.018     ; 4.961      ;
; -3.938 ; vga:inst1|vga640x480:display|h_count[5] ; vga:inst1|VGA_B[1]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.018     ; 4.958      ;
; -3.937 ; vga:inst1|vga640x480:display|h_count[5] ; vga:inst1|VGA_B[3]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.018     ; 4.957      ;
; -3.933 ; vga:inst1|vga640x480:display|h_count[2] ; vga:inst1|VGA_G[2]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.018     ; 4.953      ;
; -3.923 ; vga:inst1|vga640x480:display|h_count[6] ; vga:inst1|VGA_B[2]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.018     ; 4.943      ;
; -3.923 ; vga:inst1|vga640x480:display|v_count[5] ; vga:inst1|VGA_G[3]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.007     ; 4.954      ;
; -3.916 ; vga:inst1|vga640x480:display|v_count[1] ; vga:inst1|VGA_R[1]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.007     ; 4.947      ;
; -3.911 ; vga:inst1|vga640x480:display|h_count[1] ; vga:inst1|VGA_G[3]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.018     ; 4.931      ;
; -3.909 ; vga:inst1|vga640x480:display|v_count[3] ; vga:inst1|VGA_R[1]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.007     ; 4.940      ;
; -3.907 ; vga:inst1|vga640x480:display|v_count[6] ; vga:inst1|VGA_R[1]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.002     ; 4.943      ;
; -3.891 ; vga:inst1|vga640x480:display|v_count[0] ; vga:inst1|VGA_R[1]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.007     ; 4.922      ;
; -3.884 ; vga:inst1|vga640x480:display|h_count[6] ; vga:inst1|VGA_G[3]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.018     ; 4.904      ;
; -3.878 ; vga:inst1|vga640x480:display|h_count[2] ; vga:inst1|VGA_R[3]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.018     ; 4.898      ;
; -3.875 ; vga:inst1|vga640x480:display|v_count[3] ; vga:inst1|VGA_B[3]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.007     ; 4.906      ;
; -3.874 ; vga:inst1|vga640x480:display|v_count[1] ; vga:inst1|VGA_B[3]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.007     ; 4.905      ;
; -3.872 ; vga:inst1|vga640x480:display|v_count[3] ; vga:inst1|VGA_B[1]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.007     ; 4.903      ;
; -3.871 ; vga:inst1|vga640x480:display|v_count[1] ; vga:inst1|VGA_B[1]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.007     ; 4.902      ;
; -3.869 ; vga:inst1|vga640x480:display|v_count[3] ; vga:inst1|VGA_R[3]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.007     ; 4.900      ;
; -3.868 ; vga:inst1|vga640x480:display|v_count[1] ; vga:inst1|VGA_R[3]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.007     ; 4.899      ;
; -3.868 ; vga:inst1|vga640x480:display|v_count[3] ; vga:inst1|VGA_G[2]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.007     ; 4.899      ;
; -3.867 ; vga:inst1|vga640x480:display|v_count[1] ; vga:inst1|VGA_G[2]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.007     ; 4.898      ;
; -3.854 ; vga:inst1|vga640x480:display|v_count[6] ; vga:inst1|VGA_G[2]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.002     ; 4.890      ;
; -3.845 ; vga:inst1|vga640x480:display|h_count[7] ; vga:inst1|VGA_R[3]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.018     ; 4.865      ;
; -3.845 ; vga:inst1|vga640x480:display|v_count[6] ; vga:inst1|VGA_R[3]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.002     ; 4.881      ;
; -3.844 ; vga:inst1|vga640x480:display|v_count[5] ; vga:inst1|VGA_R[1]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.007     ; 4.875      ;
; -3.838 ; vga:inst1|vga640x480:display|v_count[0] ; vga:inst1|VGA_G[2]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.007     ; 4.869      ;
; -3.829 ; vga:inst1|vga640x480:display|v_count[7] ; vga:inst1|VGA_B[2]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.007     ; 4.860      ;
; -3.828 ; vga:inst1|vga640x480:display|v_count[0] ; vga:inst1|VGA_R[3]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.007     ; 4.859      ;
; -3.827 ; vga:inst1|vga640x480:display|v_count[0] ; vga:inst1|VGA_B[3]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.007     ; 4.858      ;
; -3.824 ; vga:inst1|vga640x480:display|v_count[0] ; vga:inst1|VGA_B[1]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.007     ; 4.855      ;
; -3.817 ; vga:inst1|vga640x480:display|v_count[4] ; vga:inst1|VGA_B[3]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.007     ; 4.848      ;
; -3.814 ; vga:inst1|vga640x480:display|v_count[4] ; vga:inst1|VGA_B[1]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.007     ; 4.845      ;
; -3.805 ; vga:inst1|vga640x480:display|h_count[1] ; vga:inst1|VGA_R[1]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.018     ; 4.825      ;
; -3.804 ; vga:inst1|vga640x480:display|h_count[5] ; vga:inst1|VGA_R[3]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.018     ; 4.824      ;
; -3.801 ; vga:inst1|vga640x480:display|h_count[2] ; vga:inst1|VGA_B[3]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.018     ; 4.821      ;
; -3.798 ; vga:inst1|vga640x480:display|h_count[2] ; vga:inst1|VGA_B[1]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.018     ; 4.818      ;
; -3.791 ; vga:inst1|vga640x480:display|v_count[5] ; vga:inst1|VGA_G[2]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.007     ; 4.822      ;
; -3.784 ; vga:inst1|vga640x480:display|h_count[4] ; vga:inst1|VGA_B[2]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.018     ; 4.804      ;
; -3.783 ; vga:inst1|vga640x480:display|h_count[8] ; vga:inst1|VGA_R[1]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.018     ; 4.803      ;
; -3.782 ; vga:inst1|vga640x480:display|v_count[5] ; vga:inst1|VGA_R[3]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.007     ; 4.813      ;
; -3.751 ; vga:inst1|vga640x480:display|h_count[1] ; vga:inst1|VGA_G[2]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.018     ; 4.771      ;
; -3.745 ; vga:inst1|vga640x480:display|h_count[4] ; vga:inst1|VGA_G[3]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.018     ; 4.765      ;
; -3.739 ; vga:inst1|vga640x480:display|v_count[7] ; vga:inst1|VGA_G[3]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.007     ; 4.770      ;
; -3.729 ; vga:inst1|vga640x480:display|h_count[8] ; vga:inst1|VGA_G[2]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.018     ; 4.749      ;
; -3.717 ; vga:inst1|vga640x480:display|h_count[0] ; vga:inst1|VGA_B[2]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.018     ; 4.737      ;
; -3.714 ; vga:inst1|vga640x480:display|h_count[1] ; vga:inst1|VGA_R[3]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.018     ; 4.734      ;
; -3.687 ; vga:inst1|vga640x480:display|h_count[6] ; vga:inst1|VGA_R[3]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.018     ; 4.707      ;
; -3.678 ; vga:inst1|vga640x480:display|h_count[0] ; vga:inst1|VGA_G[3]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.018     ; 4.698      ;
; -3.666 ; vga:inst1|vga640x480:display|v_count[6] ; vga:inst1|VGA_B[1]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.002     ; 4.702      ;
; -3.666 ; vga:inst1|vga640x480:display|v_count[6] ; vga:inst1|VGA_B[3]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.002     ; 4.702      ;
; -3.665 ; vga:inst1|vga640x480:display|v_count[0] ; vga:inst1|vga640x480:display|v_count[3] ; VGA_CLK      ; VGA_CLK     ; 1.000        ; 0.000      ; 4.703      ;
+--------+-----------------------------------------+-----------------------------------------+--------------+-------------+--------------+------------+------------+


+---------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Hold: 'VGA_CLK'                                                                                                                                          ;
+-------+-----------------------------------------+-----------------------------------------+------------------+-------------+--------------+------------+------------+
; Slack ; From Node                               ; To Node                                 ; Launch Clock     ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+-------+-----------------------------------------+-----------------------------------------+------------------+-------------+--------------+------------+------------+
; 0.445 ; vga:inst1|cnt[15]                       ; vga:inst1|cnt[15]                       ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 0.731      ;
; 0.445 ; matrixEncoder:inst9|NS[0]               ; matrixEncoder:inst9|NS[0]               ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 0.731      ;
; 0.445 ; matrixEncoder:inst9|NS[1]               ; matrixEncoder:inst9|NS[1]               ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 0.731      ;
; 0.445 ; matrixEncoder:inst9|NS[2]               ; matrixEncoder:inst9|NS[2]               ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 0.731      ;
; 0.445 ; matrixEncoder:inst9|storeSel[0]         ; matrixEncoder:inst9|storeSel[0]         ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 0.731      ;
; 0.445 ; vga:inst1|vga640x480:display|v_count[0] ; vga:inst1|vga640x480:display|v_count[0] ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 0.731      ;
; 0.445 ; vga:inst1|vga640x480:display|v_count[2] ; vga:inst1|vga640x480:display|v_count[2] ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 0.731      ;
; 0.445 ; vga:inst1|vga640x480:display|v_count[3] ; vga:inst1|vga640x480:display|v_count[3] ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 0.731      ;
; 0.445 ; vga:inst1|vga640x480:display|v_count[4] ; vga:inst1|vga640x480:display|v_count[4] ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 0.731      ;
; 0.445 ; vga:inst1|vga640x480:display|v_count[5] ; vga:inst1|vga640x480:display|v_count[5] ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 0.731      ;
; 0.445 ; vga:inst1|vga640x480:display|v_count[6] ; vga:inst1|vga640x480:display|v_count[6] ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 0.731      ;
; 0.445 ; vga:inst1|vga640x480:display|v_count[7] ; vga:inst1|vga640x480:display|v_count[7] ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 0.731      ;
; 0.445 ; vga:inst1|vga640x480:display|v_count[8] ; vga:inst1|vga640x480:display|v_count[8] ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 0.731      ;
; 0.445 ; vga:inst1|vga640x480:display|v_count[9] ; vga:inst1|vga640x480:display|v_count[9] ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 0.731      ;
; 0.445 ; vga:inst1|vga640x480:display|v_count[1] ; vga:inst1|vga640x480:display|v_count[1] ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 0.731      ;
; 0.445 ; matrixEncoder:inst9|storeCol[2]         ; matrixEncoder:inst9|storeCol[2]         ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 0.731      ;
; 0.445 ; matrixEncoder:inst9|storeCol[1]         ; matrixEncoder:inst9|storeCol[1]         ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 0.731      ;
; 0.445 ; matrixEncoder:inst9|storeCol[0]         ; matrixEncoder:inst9|storeCol[0]         ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 0.731      ;
; 0.445 ; vga:inst1|VGA_B[3]                      ; vga:inst1|VGA_B[3]                      ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 0.731      ;
; 0.445 ; vga:inst1|VGA_B[2]                      ; vga:inst1|VGA_B[2]                      ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 0.731      ;
; 0.445 ; vga:inst1|VGA_B[1]                      ; vga:inst1|VGA_B[1]                      ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 0.731      ;
; 0.445 ; vga:inst1|VGA_G[3]                      ; vga:inst1|VGA_G[3]                      ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 0.731      ;
; 0.445 ; vga:inst1|VGA_G[2]                      ; vga:inst1|VGA_G[2]                      ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 0.731      ;
; 0.445 ; vga:inst1|VGA_R[3]                      ; vga:inst1|VGA_R[3]                      ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 0.731      ;
; 0.445 ; vga:inst1|VGA_R[1]                      ; vga:inst1|VGA_R[1]                      ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 0.731      ;
; 0.621 ; matrixEncoder:inst9|storeSel[2]         ; matrixEncoder:inst9|outSel[2]           ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 0.907      ;
; 0.641 ; vga:inst1|vga640x480:display|h_count[9] ; vga:inst1|vga640x480:display|h_count[9] ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 0.927      ;
; 0.688 ; matrixEncoder:inst9|NS[2]               ; matrixEncoder:inst9|NS[1]               ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 0.974      ;
; 0.690 ; matrixEncoder:inst9|NS[2]               ; matrixEncoder:inst9|storeSel[1]         ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 0.976      ;
; 0.692 ; matrixEncoder:inst9|NS[1]               ; matrixEncoder:inst9|NS[2]               ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 0.978      ;
; 0.694 ; matrixEncoder:inst9|NS[1]               ; matrixEncoder:inst9|storeSel[0]         ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 0.980      ;
; 0.695 ; matrixEncoder:inst9|NS[2]               ; matrixEncoder:inst9|NS[0]               ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 0.981      ;
; 0.696 ; matrixEncoder:inst9|NS[2]               ; matrixEncoder:inst9|storeSel[2]         ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 0.982      ;
; 0.969 ; matrixEncoder:inst9|NS[0]               ; matrixEncoder:inst9|NS[2]               ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 1.255      ;
; 0.974 ; vga:inst1|vga640x480:display|h_count[0] ; vga:inst1|vga640x480:display|h_count[0] ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 1.260      ;
; 1.007 ; matrixEncoder:inst9|NS[0]               ; matrixEncoder:inst9|NS[1]               ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 1.293      ;
; 1.008 ; matrixEncoder:inst9|NS[0]               ; matrixEncoder:inst9|storeSel[0]         ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 1.294      ;
; 1.031 ; vga:inst1|vga640x480:display|h_count[8] ; vga:inst1|vga640x480:display|h_count[8] ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 1.317      ;
; 1.040 ; matrixEncoder:inst9|NS[1]               ; matrixEncoder:inst9|storeCol[0]         ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 1.326      ;
; 1.041 ; matrixEncoder:inst9|NS[1]               ; matrixEncoder:inst9|storeSel[1]         ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 1.327      ;
; 1.044 ; matrixEncoder:inst9|NS[1]               ; matrixEncoder:inst9|NS[0]               ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 1.330      ;
; 1.130 ; matrixEncoder:inst9|NS[2]               ; matrixEncoder:inst9|storeCol[0]         ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 1.416      ;
; 1.192 ; vga:inst1|vga640x480:display|h_count[7] ; vga:inst1|vga640x480:display|h_count[7] ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 1.478      ;
; 1.194 ; vga:inst1|vga640x480:display|h_count[2] ; vga:inst1|vga640x480:display|h_count[2] ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 1.480      ;
; 1.206 ; vga:inst1|vga640x480:display|h_count[1] ; vga:inst1|vga640x480:display|h_count[1] ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 1.492      ;
; 1.206 ; vga:inst1|vga640x480:display|h_count[3] ; vga:inst1|vga640x480:display|h_count[3] ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 1.492      ;
; 1.213 ; vga:inst1|vga640x480:display|h_count[5] ; vga:inst1|vga640x480:display|h_count[5] ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 1.499      ;
; 1.215 ; vga:inst1|vga640x480:display|h_count[6] ; vga:inst1|vga640x480:display|h_count[6] ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 1.501      ;
; 1.230 ; matrixEncoder:inst9|NS[1]               ; matrixEncoder:inst9|storeCol[2]         ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.001      ; 1.517      ;
; 1.230 ; matrixEncoder:inst9|NS[1]               ; matrixEncoder:inst9|storeCol[1]         ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.001      ; 1.517      ;
; 1.243 ; matrixEncoder:inst9|NS[2]               ; matrixEncoder:inst9|storeSel[0]         ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 1.529      ;
; 1.248 ; vga:inst1|vga640x480:display|h_count[4] ; vga:inst1|vga640x480:display|h_count[4] ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 1.534      ;
; 1.315 ; matrixEncoder:inst9|NS[2]               ; matrixEncoder:inst9|storeCol[2]         ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.001      ; 1.602      ;
; 1.315 ; matrixEncoder:inst9|NS[2]               ; matrixEncoder:inst9|storeCol[1]         ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.001      ; 1.602      ;
; 1.406 ; vga:inst1|vga640x480:display|h_count[0] ; vga:inst1|vga640x480:display|h_count[1] ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 1.692      ;
; 1.416 ; blockV2:inst4|blocktype[0]              ; matrixEncoder:inst9|storeCol[1]         ; clkdiv:inst8|out ; VGA_CLK     ; 0.000        ; 0.619      ; 2.321      ;
; 1.447 ; blockV2:inst7|blocktype[0]              ; matrixEncoder:inst9|storeCol[2]         ; clkdiv:inst8|out ; VGA_CLK     ; 0.000        ; 0.597      ; 2.330      ;
; 1.451 ; blockV2:inst6|ant                       ; matrixEncoder:inst9|storeCol[0]         ; clkdiv:inst8|out ; VGA_CLK     ; 0.000        ; 0.620      ; 2.357      ;
; 1.464 ; vga:inst1|vga640x480:display|h_count[8] ; vga:inst1|vga640x480:display|h_count[9] ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 1.750      ;
; 1.469 ; blockV2:inst4|sugar                     ; matrixEncoder:inst9|storeCol[2]         ; clkdiv:inst8|out ; VGA_CLK     ; 0.000        ; 0.619      ; 2.374      ;
; 1.474 ; matrixEncoder:inst9|NS[0]               ; matrixEncoder:inst9|storeCol[0]         ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 1.760      ;
; 1.486 ; vga:inst1|vga640x480:display|h_count[0] ; vga:inst1|vga640x480:display|h_count[2] ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 1.772      ;
; 1.488 ; blockV2:inst7|sugar                     ; matrixEncoder:inst9|storeCol[0]         ; clkdiv:inst8|out ; VGA_CLK     ; 0.000        ; 0.608      ; 2.382      ;
; 1.489 ; blockV2:inst3|blocktype[0]              ; matrixEncoder:inst9|storeCol[1]         ; clkdiv:inst8|out ; VGA_CLK     ; 0.000        ; 0.620      ; 2.395      ;
; 1.527 ; blockV2:inst6|blocktype[2]              ; matrixEncoder:inst9|storeCol[2]         ; clkdiv:inst8|out ; VGA_CLK     ; 0.000        ; 0.621      ; 2.434      ;
; 1.529 ; blockV2:inst6|blocktype[0]              ; matrixEncoder:inst9|storeCol[2]         ; clkdiv:inst8|out ; VGA_CLK     ; 0.000        ; 0.621      ; 2.436      ;
; 1.566 ; vga:inst1|vga640x480:display|h_count[0] ; vga:inst1|vga640x480:display|h_count[3] ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 1.852      ;
; 1.567 ; blockV2:inst7|blocktype[2]              ; matrixEncoder:inst9|storeCol[1]         ; clkdiv:inst8|out ; VGA_CLK     ; 0.000        ; 0.597      ; 2.450      ;
; 1.604 ; blockV2:inst6|ant                       ; matrixEncoder:inst9|storeCol[1]         ; clkdiv:inst8|out ; VGA_CLK     ; 0.000        ; 0.621      ; 2.511      ;
; 1.607 ; blockV2:inst6|sugar                     ; matrixEncoder:inst9|storeCol[0]         ; clkdiv:inst8|out ; VGA_CLK     ; 0.000        ; 0.620      ; 2.513      ;
; 1.607 ; blockV2:inst4|ant                       ; matrixEncoder:inst9|storeCol[2]         ; clkdiv:inst8|out ; VGA_CLK     ; 0.000        ; 0.619      ; 2.512      ;
; 1.608 ; blockV2:inst4|ant                       ; matrixEncoder:inst9|storeCol[0]         ; clkdiv:inst8|out ; VGA_CLK     ; 0.000        ; 0.618      ; 2.512      ;
; 1.615 ; blockV2:inst6|ant                       ; matrixEncoder:inst9|storeCol[2]         ; clkdiv:inst8|out ; VGA_CLK     ; 0.000        ; 0.621      ; 2.522      ;
; 1.626 ; vga:inst1|vga640x480:display|h_count[2] ; vga:inst1|vga640x480:display|h_count[3] ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 1.912      ;
; 1.629 ; matrixEncoder:inst9|NS[2]               ; matrixEncoder:inst9|outSel[2]           ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 1.915      ;
; 1.638 ; vga:inst1|vga640x480:display|h_count[3] ; vga:inst1|vga640x480:display|h_count[4] ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 1.924      ;
; 1.638 ; vga:inst1|vga640x480:display|h_count[1] ; vga:inst1|vga640x480:display|h_count[2] ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 1.924      ;
; 1.642 ; blockV2:inst7|ant                       ; matrixEncoder:inst9|storeCol[2]         ; clkdiv:inst8|out ; VGA_CLK     ; 0.000        ; 0.610      ; 2.538      ;
; 1.645 ; vga:inst1|vga640x480:display|h_count[5] ; vga:inst1|vga640x480:display|h_count[6] ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 1.931      ;
; 1.646 ; vga:inst1|vga640x480:display|h_count[0] ; vga:inst1|vga640x480:display|h_count[4] ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 1.932      ;
; 1.647 ; vga:inst1|vga640x480:display|h_count[6] ; vga:inst1|vga640x480:display|h_count[7] ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 1.933      ;
; 1.652 ; blockV2:inst7|ant                       ; matrixEncoder:inst9|storeCol[1]         ; clkdiv:inst8|out ; VGA_CLK     ; 0.000        ; 0.610      ; 2.548      ;
; 1.668 ; blockV2:inst3|blocktype[0]              ; matrixEncoder:inst9|storeCol[0]         ; clkdiv:inst8|out ; VGA_CLK     ; 0.000        ; 0.619      ; 2.573      ;
; 1.681 ; vga:inst1|vga640x480:display|h_count[4] ; vga:inst1|vga640x480:display|h_count[5] ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 1.967      ;
; 1.682 ; blockV2:inst7|sugar                     ; matrixEncoder:inst9|storeCol[2]         ; clkdiv:inst8|out ; VGA_CLK     ; 0.000        ; 0.609      ; 2.577      ;
; 1.692 ; blockV2:inst7|sugar                     ; matrixEncoder:inst9|storeCol[1]         ; clkdiv:inst8|out ; VGA_CLK     ; 0.000        ; 0.609      ; 2.587      ;
; 1.706 ; vga:inst1|vga640x480:display|h_count[2] ; vga:inst1|vga640x480:display|h_count[4] ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 1.992      ;
; 1.715 ; blockV2:inst4|blocktype[0]              ; matrixEncoder:inst9|storeCol[0]         ; clkdiv:inst8|out ; VGA_CLK     ; 0.000        ; 0.618      ; 2.619      ;
; 1.716 ; blockV2:inst7|blocktype[0]              ; matrixEncoder:inst9|storeCol[1]         ; clkdiv:inst8|out ; VGA_CLK     ; 0.000        ; 0.597      ; 2.599      ;
; 1.718 ; vga:inst1|vga640x480:display|h_count[1] ; vga:inst1|vga640x480:display|h_count[3] ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 2.004      ;
; 1.718 ; vga:inst1|vga640x480:display|h_count[3] ; vga:inst1|vga640x480:display|h_count[5] ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 2.004      ;
; 1.725 ; vga:inst1|vga640x480:display|h_count[5] ; vga:inst1|vga640x480:display|h_count[7] ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 2.011      ;
; 1.725 ; blockV2:inst3|sugar                     ; matrixEncoder:inst9|storeCol[0]         ; clkdiv:inst8|out ; VGA_CLK     ; 0.000        ; 0.602      ; 2.613      ;
; 1.726 ; vga:inst1|vga640x480:display|h_count[0] ; vga:inst1|vga640x480:display|h_count[5] ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 2.012      ;
; 1.728 ; vga:inst1|vga640x480:display|h_count[7] ; vga:inst1|vga640x480:display|h_count[8] ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 2.014      ;
; 1.761 ; vga:inst1|vga640x480:display|h_count[4] ; vga:inst1|vga640x480:display|h_count[6] ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 2.047      ;
; 1.767 ; blockV2:inst6|sugar                     ; matrixEncoder:inst9|storeCol[1]         ; clkdiv:inst8|out ; VGA_CLK     ; 0.000        ; 0.621      ; 2.674      ;
; 1.778 ; blockV2:inst6|sugar                     ; matrixEncoder:inst9|storeCol[2]         ; clkdiv:inst8|out ; VGA_CLK     ; 0.000        ; 0.621      ; 2.685      ;
; 1.781 ; blockV2:inst3|ant                       ; matrixEncoder:inst9|storeCol[1]         ; clkdiv:inst8|out ; VGA_CLK     ; 0.000        ; 0.603      ; 2.670      ;
; 1.786 ; vga:inst1|vga640x480:display|h_count[2] ; vga:inst1|vga640x480:display|h_count[5] ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 2.072      ;
+-------+-----------------------------------------+-----------------------------------------+------------------+-------------+--------------+------------+------------+


+-------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Hold: 'clk'                                                                                                        ;
+-------+------------------------+------------------------+--------------+-------------+--------------+------------+------------+
; Slack ; From Node              ; To Node                ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+-------+------------------------+------------------------+--------------+-------------+--------------+------------+------------+
; 0.445 ; clkdiv:inst8|count[0]  ; clkdiv:inst8|count[0]  ; clk          ; clk         ; 0.000        ; 0.000      ; 0.731      ;
; 0.445 ; clkdiv:inst8|store     ; clkdiv:inst8|store     ; clk          ; clk         ; 0.000        ; 0.000      ; 0.731      ;
; 0.968 ; clkdiv:inst8|count[16] ; clkdiv:inst8|count[16] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.254      ;
; 0.971 ; clkdiv:inst8|count[33] ; clkdiv:inst8|count[33] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.257      ;
; 0.972 ; clkdiv:inst8|count[32] ; clkdiv:inst8|count[32] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.258      ;
; 0.972 ; clkdiv:inst8|count[34] ; clkdiv:inst8|count[34] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.258      ;
; 0.972 ; clkdiv:inst8|count[36] ; clkdiv:inst8|count[36] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.258      ;
; 0.972 ; clkdiv:inst8|count[41] ; clkdiv:inst8|count[41] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.258      ;
; 0.975 ; clkdiv:inst8|count[1]  ; clkdiv:inst8|count[1]  ; clk          ; clk         ; 0.000        ; 0.000      ; 1.261      ;
; 0.975 ; clkdiv:inst8|count[17] ; clkdiv:inst8|count[17] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.261      ;
; 0.976 ; clkdiv:inst8|count[2]  ; clkdiv:inst8|count[2]  ; clk          ; clk         ; 0.000        ; 0.000      ; 1.262      ;
; 0.976 ; clkdiv:inst8|count[9]  ; clkdiv:inst8|count[9]  ; clk          ; clk         ; 0.000        ; 0.000      ; 1.262      ;
; 0.976 ; clkdiv:inst8|count[18] ; clkdiv:inst8|count[18] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.262      ;
; 0.976 ; clkdiv:inst8|count[25] ; clkdiv:inst8|count[25] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.262      ;
; 0.977 ; clkdiv:inst8|count[4]  ; clkdiv:inst8|count[4]  ; clk          ; clk         ; 0.000        ; 0.000      ; 1.263      ;
; 0.977 ; clkdiv:inst8|count[7]  ; clkdiv:inst8|count[7]  ; clk          ; clk         ; 0.000        ; 0.000      ; 1.263      ;
; 0.977 ; clkdiv:inst8|count[11] ; clkdiv:inst8|count[11] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.263      ;
; 0.977 ; clkdiv:inst8|count[13] ; clkdiv:inst8|count[13] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.263      ;
; 0.977 ; clkdiv:inst8|count[14] ; clkdiv:inst8|count[14] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.263      ;
; 0.977 ; clkdiv:inst8|count[15] ; clkdiv:inst8|count[15] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.263      ;
; 0.977 ; clkdiv:inst8|count[20] ; clkdiv:inst8|count[20] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.263      ;
; 0.977 ; clkdiv:inst8|count[23] ; clkdiv:inst8|count[23] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.263      ;
; 0.977 ; clkdiv:inst8|count[27] ; clkdiv:inst8|count[27] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.263      ;
; 0.977 ; clkdiv:inst8|count[29] ; clkdiv:inst8|count[29] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.263      ;
; 0.977 ; clkdiv:inst8|count[30] ; clkdiv:inst8|count[30] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.263      ;
; 0.977 ; clkdiv:inst8|count[31] ; clkdiv:inst8|count[31] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.263      ;
; 1.015 ; clkdiv:inst8|count[8]  ; clkdiv:inst8|count[8]  ; clk          ; clk         ; 0.000        ; 0.000      ; 1.301      ;
; 1.015 ; clkdiv:inst8|count[24] ; clkdiv:inst8|count[24] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.301      ;
; 1.016 ; clkdiv:inst8|count[3]  ; clkdiv:inst8|count[3]  ; clk          ; clk         ; 0.000        ; 0.000      ; 1.302      ;
; 1.016 ; clkdiv:inst8|count[5]  ; clkdiv:inst8|count[5]  ; clk          ; clk         ; 0.000        ; 0.000      ; 1.302      ;
; 1.016 ; clkdiv:inst8|count[6]  ; clkdiv:inst8|count[6]  ; clk          ; clk         ; 0.000        ; 0.000      ; 1.302      ;
; 1.016 ; clkdiv:inst8|count[10] ; clkdiv:inst8|count[10] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.302      ;
; 1.016 ; clkdiv:inst8|count[12] ; clkdiv:inst8|count[12] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.302      ;
; 1.016 ; clkdiv:inst8|count[19] ; clkdiv:inst8|count[19] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.302      ;
; 1.016 ; clkdiv:inst8|count[21] ; clkdiv:inst8|count[21] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.302      ;
; 1.016 ; clkdiv:inst8|count[22] ; clkdiv:inst8|count[22] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.302      ;
; 1.016 ; clkdiv:inst8|count[26] ; clkdiv:inst8|count[26] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.302      ;
; 1.016 ; clkdiv:inst8|count[28] ; clkdiv:inst8|count[28] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.302      ;
; 1.016 ; clkdiv:inst8|count[35] ; clkdiv:inst8|count[35] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.302      ;
; 1.016 ; clkdiv:inst8|count[37] ; clkdiv:inst8|count[37] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.302      ;
; 1.016 ; clkdiv:inst8|count[38] ; clkdiv:inst8|count[38] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.302      ;
; 1.234 ; clkdiv:inst8|count[0]  ; clkdiv:inst8|count[1]  ; clk          ; clk         ; 0.000        ; 0.000      ; 1.520      ;
; 1.400 ; clkdiv:inst8|count[16] ; clkdiv:inst8|count[17] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.686      ;
; 1.403 ; clkdiv:inst8|count[33] ; clkdiv:inst8|count[34] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.689      ;
; 1.404 ; clkdiv:inst8|count[32] ; clkdiv:inst8|count[33] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.690      ;
; 1.404 ; clkdiv:inst8|count[34] ; clkdiv:inst8|count[35] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.690      ;
; 1.404 ; clkdiv:inst8|count[36] ; clkdiv:inst8|count[37] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.690      ;
; 1.407 ; clkdiv:inst8|count[1]  ; clkdiv:inst8|count[2]  ; clk          ; clk         ; 0.000        ; 0.000      ; 1.693      ;
; 1.407 ; clkdiv:inst8|count[17] ; clkdiv:inst8|count[18] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.693      ;
; 1.408 ; clkdiv:inst8|count[2]  ; clkdiv:inst8|count[3]  ; clk          ; clk         ; 0.000        ; 0.000      ; 1.694      ;
; 1.408 ; clkdiv:inst8|count[9]  ; clkdiv:inst8|count[10] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.694      ;
; 1.408 ; clkdiv:inst8|count[18] ; clkdiv:inst8|count[19] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.694      ;
; 1.408 ; clkdiv:inst8|count[25] ; clkdiv:inst8|count[26] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.694      ;
; 1.409 ; clkdiv:inst8|count[13] ; clkdiv:inst8|count[14] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.695      ;
; 1.409 ; clkdiv:inst8|count[14] ; clkdiv:inst8|count[15] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.695      ;
; 1.409 ; clkdiv:inst8|count[29] ; clkdiv:inst8|count[30] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.695      ;
; 1.409 ; clkdiv:inst8|count[30] ; clkdiv:inst8|count[31] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.695      ;
; 1.409 ; clkdiv:inst8|count[4]  ; clkdiv:inst8|count[5]  ; clk          ; clk         ; 0.000        ; 0.000      ; 1.695      ;
; 1.409 ; clkdiv:inst8|count[11] ; clkdiv:inst8|count[12] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.695      ;
; 1.409 ; clkdiv:inst8|count[20] ; clkdiv:inst8|count[21] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.695      ;
; 1.409 ; clkdiv:inst8|count[27] ; clkdiv:inst8|count[28] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.695      ;
; 1.448 ; clkdiv:inst8|count[8]  ; clkdiv:inst8|count[9]  ; clk          ; clk         ; 0.000        ; 0.000      ; 1.734      ;
; 1.448 ; clkdiv:inst8|count[24] ; clkdiv:inst8|count[25] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.734      ;
; 1.449 ; clkdiv:inst8|count[35] ; clkdiv:inst8|count[36] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.735      ;
; 1.449 ; clkdiv:inst8|count[3]  ; clkdiv:inst8|count[4]  ; clk          ; clk         ; 0.000        ; 0.000      ; 1.735      ;
; 1.449 ; clkdiv:inst8|count[6]  ; clkdiv:inst8|count[7]  ; clk          ; clk         ; 0.000        ; 0.000      ; 1.735      ;
; 1.449 ; clkdiv:inst8|count[10] ; clkdiv:inst8|count[11] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.735      ;
; 1.449 ; clkdiv:inst8|count[12] ; clkdiv:inst8|count[13] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.735      ;
; 1.449 ; clkdiv:inst8|count[19] ; clkdiv:inst8|count[20] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.735      ;
; 1.449 ; clkdiv:inst8|count[22] ; clkdiv:inst8|count[23] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.735      ;
; 1.449 ; clkdiv:inst8|count[26] ; clkdiv:inst8|count[27] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.735      ;
; 1.449 ; clkdiv:inst8|count[28] ; clkdiv:inst8|count[29] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.735      ;
; 1.449 ; clkdiv:inst8|count[5]  ; clkdiv:inst8|count[6]  ; clk          ; clk         ; 0.000        ; 0.000      ; 1.735      ;
; 1.449 ; clkdiv:inst8|count[21] ; clkdiv:inst8|count[22] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.735      ;
; 1.449 ; clkdiv:inst8|count[37] ; clkdiv:inst8|count[38] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.735      ;
; 1.480 ; clkdiv:inst8|count[16] ; clkdiv:inst8|count[18] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.766      ;
; 1.483 ; clkdiv:inst8|count[33] ; clkdiv:inst8|count[35] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.769      ;
; 1.484 ; clkdiv:inst8|count[32] ; clkdiv:inst8|count[34] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.770      ;
; 1.484 ; clkdiv:inst8|count[34] ; clkdiv:inst8|count[36] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.770      ;
; 1.484 ; clkdiv:inst8|count[36] ; clkdiv:inst8|count[38] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.770      ;
; 1.487 ; clkdiv:inst8|count[1]  ; clkdiv:inst8|count[3]  ; clk          ; clk         ; 0.000        ; 0.000      ; 1.773      ;
; 1.487 ; clkdiv:inst8|count[17] ; clkdiv:inst8|count[19] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.773      ;
; 1.488 ; clkdiv:inst8|count[2]  ; clkdiv:inst8|count[4]  ; clk          ; clk         ; 0.000        ; 0.000      ; 1.774      ;
; 1.488 ; clkdiv:inst8|count[9]  ; clkdiv:inst8|count[11] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.774      ;
; 1.488 ; clkdiv:inst8|count[18] ; clkdiv:inst8|count[20] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.774      ;
; 1.488 ; clkdiv:inst8|count[25] ; clkdiv:inst8|count[27] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.774      ;
; 1.489 ; clkdiv:inst8|count[13] ; clkdiv:inst8|count[15] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.775      ;
; 1.489 ; clkdiv:inst8|count[29] ; clkdiv:inst8|count[31] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.775      ;
; 1.489 ; clkdiv:inst8|count[11] ; clkdiv:inst8|count[13] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.775      ;
; 1.489 ; clkdiv:inst8|count[27] ; clkdiv:inst8|count[29] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.775      ;
; 1.489 ; clkdiv:inst8|count[4]  ; clkdiv:inst8|count[6]  ; clk          ; clk         ; 0.000        ; 0.000      ; 1.775      ;
; 1.489 ; clkdiv:inst8|count[20] ; clkdiv:inst8|count[22] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.775      ;
; 1.500 ; clkdiv:inst8|count[15] ; clkdiv:inst8|count[16] ; clk          ; clk         ; 0.000        ; 0.009      ; 1.795      ;
; 1.504 ; clkdiv:inst8|count[31] ; clkdiv:inst8|count[32] ; clk          ; clk         ; 0.000        ; 0.005      ; 1.795      ;
; 1.510 ; clkdiv:inst8|count[7]  ; clkdiv:inst8|count[8]  ; clk          ; clk         ; 0.000        ; 0.000      ; 1.796      ;
; 1.510 ; clkdiv:inst8|count[23] ; clkdiv:inst8|count[24] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.796      ;
; 1.528 ; clkdiv:inst8|count[8]  ; clkdiv:inst8|count[10] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.814      ;
; 1.528 ; clkdiv:inst8|count[24] ; clkdiv:inst8|count[26] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.814      ;
; 1.529 ; clkdiv:inst8|count[35] ; clkdiv:inst8|count[37] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.815      ;
; 1.529 ; clkdiv:inst8|count[12] ; clkdiv:inst8|count[14] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.815      ;
+-------+------------------------+------------------------+--------------+-------------+--------------+------------+------------+


+---------------------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Hold: 'clkdiv:inst8|out'                                                                                                                     ;
+-------+------------------------------+-----------------------------------+------------------+------------------+--------------+------------+------------+
; Slack ; From Node                    ; To Node                           ; Launch Clock     ; Latch Clock      ; Relationship ; Clock Skew ; Data Delay ;
+-------+------------------------------+-----------------------------------+------------------+------------------+--------------+------------+------------+
; 0.445 ; blockV2:inst3|blocktype[0]   ; blockV2:inst3|blocktype[0]        ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.731      ;
; 0.445 ; blockV2:inst7|blocktype[2]   ; blockV2:inst7|blocktype[2]        ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.731      ;
; 0.445 ; blockV2:inst7|outSouthVerify ; blockV2:inst7|outSouthVerify      ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.731      ;
; 0.445 ; blockV2:inst5|sendingNorth   ; blockV2:inst5|sendingNorth        ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.731      ;
; 0.445 ; blockV2:inst5|outNorthVerify ; blockV2:inst5|outNorthVerify      ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.731      ;
; 0.445 ; blockV2:inst2|sugar          ; blockV2:inst2|sugar               ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.731      ;
; 0.445 ; blockV2:inst3|sendingSouth   ; blockV2:inst3|sendingSouth        ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.731      ;
; 0.445 ; blockV2:inst3|outSouthVerify ; blockV2:inst3|outSouthVerify      ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.731      ;
; 0.445 ; blockV2:inst2|sendingSouth   ; blockV2:inst2|sendingSouth        ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.731      ;
; 0.445 ; blockV2:inst2|outSouthVerify ; blockV2:inst2|outSouthVerify      ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.731      ;
; 0.445 ; blockV2:inst5|sendingSouth   ; blockV2:inst5|sendingSouth        ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.731      ;
; 0.445 ; blockV2:inst4|NS[5]          ; blockV2:inst4|NS[5]               ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.731      ;
; 0.445 ; blockV2:inst4|sendingNorth   ; blockV2:inst4|sendingNorth        ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.731      ;
; 0.445 ; blockV2:inst4|outNorthVerify ; blockV2:inst4|outNorthVerify      ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.731      ;
; 0.445 ; blockV2:inst4|blocktype[0]   ; blockV2:inst4|blocktype[0]        ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.731      ;
; 0.445 ; blockV2:inst5|blocktype[0]   ; blockV2:inst5|blocktype[0]        ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.731      ;
; 0.445 ; blockV2:inst2|NS[3]          ; blockV2:inst2|NS[3]               ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.731      ;
; 0.445 ; blockV2:inst2|blocktype[0]   ; blockV2:inst2|blocktype[0]        ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.731      ;
; 0.445 ; blockV2:inst2|outNorthVerify ; blockV2:inst2|outNorthVerify      ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.731      ;
; 0.445 ; blockV2:inst3|outNorthVerify ; blockV2:inst3|outNorthVerify      ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.731      ;
; 0.445 ; blockV2:inst7|outWestVerify  ; blockV2:inst7|outWestVerify       ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.731      ;
; 0.445 ; blockV2:inst5|outSouthVerify ; blockV2:inst5|outSouthVerify      ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.731      ;
; 0.445 ; blockV2:inst7|sendingWest    ; blockV2:inst7|sendingWest         ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.731      ;
; 0.445 ; blockV2:inst7|sendingSouth   ; blockV2:inst7|sendingSouth        ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.731      ;
; 0.445 ; blockV2:inst6|sendingWest    ; blockV2:inst6|sendingWest         ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.731      ;
; 0.445 ; blockV2:inst6|outWestVerify  ; blockV2:inst6|outWestVerify       ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.731      ;
; 0.445 ; blockV2:inst3|NS[5]          ; blockV2:inst3|NS[5]               ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.731      ;
; 0.445 ; blockV2:inst3|sugar          ; blockV2:inst3|sugar               ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.731      ;
; 0.445 ; blockV2:inst3|outEastVerify  ; blockV2:inst3|outEastVerify       ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.731      ;
; 0.445 ; blockV2:inst3|sendingEast    ; blockV2:inst3|sendingEast         ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.731      ;
; 0.445 ; blockV2:inst6|blocktype[2]   ; blockV2:inst6|blocktype[2]        ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.731      ;
; 0.445 ; blockV2:inst6|NS[3]          ; blockV2:inst6|NS[3]               ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.731      ;
; 0.445 ; blockV2:inst4|outEastVerify  ; blockV2:inst4|outEastVerify       ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.731      ;
; 0.445 ; blockV2:inst6|outNorthVerify ; blockV2:inst6|outNorthVerify      ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.731      ;
; 0.445 ; blockV2:inst6|sendingNorth   ; blockV2:inst6|sendingNorth        ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.731      ;
; 0.445 ; blockV2:inst7|NS[5]          ; blockV2:inst7|NS[5]               ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.731      ;
; 0.445 ; blockV2:inst6|sugar          ; blockV2:inst6|sugar               ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.731      ;
; 0.445 ; blockV2:inst2|sendingNorth   ; blockV2:inst2|sendingNorth        ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.731      ;
; 0.445 ; blockV2:inst6|blocktype[0]   ; blockV2:inst6|blocktype[0]        ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.731      ;
; 0.445 ; blockV2:inst7|ant            ; blockV2:inst7|ant                 ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.731      ;
; 0.445 ; blockV2:inst4|sendingEast    ; blockV2:inst4|sendingEast         ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.731      ;
; 0.445 ; blockV2:inst7|blocktype[0]   ; blockV2:inst7|blocktype[0]        ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.731      ;
; 0.445 ; blockV2:inst3|sendingNorth   ; blockV2:inst3|sendingNorth        ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.731      ;
; 0.445 ; blockV2:inst4|sugar          ; blockV2:inst4|sugar               ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.731      ;
; 0.445 ; blockV2:inst5|NS[3]          ; blockV2:inst5|NS[3]               ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.731      ;
; 0.445 ; blockV2:inst5|sugar          ; blockV2:inst5|sugar               ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.731      ;
; 0.445 ; blockV2:inst5|receivingNorth ; blockV2:inst5|receivingNorth      ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.731      ;
; 0.445 ; blockV2:inst2|ant            ; blockV2:inst2|ant                 ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.731      ;
; 0.445 ; blockV2:inst5|ant            ; blockV2:inst5|ant                 ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.731      ;
; 0.445 ; blockV2:inst2|receivingNorth ; blockV2:inst2|receivingNorth      ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.731      ;
; 0.445 ; blockV2:inst3|ant            ; blockV2:inst3|ant                 ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.731      ;
; 0.445 ; blockV2:inst4|ant            ; blockV2:inst4|ant                 ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.731      ;
; 0.445 ; blockV2:inst6|ant            ; blockV2:inst6|ant                 ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.731      ;
; 0.617 ; blockV2:inst5|outSouth[0]    ; blockV2:inst4|Northsending        ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.903      ;
; 0.626 ; blockV2:inst4|sendingSouth   ; blockV2:inst4|outSouth[0]         ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.912      ;
; 0.628 ; blockV2:inst2|sendingSouth   ; blockV2:inst2|outSouth[0]         ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.914      ;
; 0.632 ; blockV2:inst4|blocktype[0]   ; blockV2:inst4|outEast[6]          ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.918      ;
; 0.637 ; blockV2:inst4|receivingEast  ; blockV2:inst4|outEast[1]          ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.923      ;
; 0.642 ; blockV2:inst2|ant            ; blockV2:inst2|outSouth[5]         ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.928      ;
; 0.752 ; blockV2:inst6|receivingNorth ; blockV2:inst6|outNorth[1]         ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 1.038      ;
; 0.769 ; blockV2:inst6|sendingWest    ; blockV2:inst6|outWest[0]          ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 1.055      ;
; 0.778 ; blockV2:inst3|receivingEast  ; blockV2:inst3|receivingEast       ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 1.064      ;
; 0.782 ; blockV2:inst7|receivingSouth ; blockV2:inst7|receivingSouth      ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 1.068      ;
; 0.784 ; blockV2:inst6|receivingNorth ; blockV2:inst6|receivingNorth      ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 1.070      ;
; 0.850 ; blockV2:inst4|outEast[4]     ; blockV2:inst7|sugarWest           ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 1.136      ;
; 0.951 ; blockV2:inst7|NS[5]          ; blockV2:inst7|NS[3]               ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 1.237      ;
; 0.989 ; blockV2:inst5|NS[3]          ; blockV2:inst5|NS[4]               ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 1.275      ;
; 0.996 ; blockV2:inst5|outSouth[4]    ; blockV2:inst4|sugarNorth          ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 1.282      ;
; 0.999 ; blockV2:inst4|outEast[5]     ; blockV2:inst7|antWest             ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 1.285      ;
; 1.000 ; blockV2:inst2|receivingNorth ; blockV2:inst2|outNorth[1]         ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; -0.004     ; 1.282      ;
; 1.008 ; blockV2:inst4|receivingEast  ; blockV2:inst4|receivingEast       ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 1.294      ;
; 1.097 ; blockV2:inst4|sendingSouth   ; blockV2:inst4|sendingSouth        ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 1.383      ;
; 1.123 ; blockV2:inst3|sendingEast    ; blockV2:inst3|outEast[0]          ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; -0.002     ; 1.407      ;
; 1.182 ; blockV2:inst6|blocktype[0]   ; blockV2:inst6|outWest[6]          ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.001      ; 1.469      ;
; 1.194 ; blockV2:inst7|receivingSouth ; blockV2:inst7|outSouth[1]         ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; -0.006     ; 1.474      ;
; 1.202 ; blockV2:inst6|ant            ; blockV2:inst6|outWest[5]          ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.017      ; 1.505      ;
; 1.203 ; blockV2:inst4|NS[3]          ; blockV2:inst4|sendingEast         ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.002      ; 1.491      ;
; 1.220 ; blockV2:inst4|NS[1]          ; blockV2:inst4|outNorthVerify      ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; -0.001     ; 1.505      ;
; 1.233 ; blockV2:inst3|NS[5]          ; blockV2:inst3|sendingSouth        ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.022      ; 1.541      ;
; 1.236 ; blockV2:inst7|sendingWest    ; blockV2:inst7|outWest[0]          ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; -0.015     ; 1.507      ;
; 1.267 ; blockV2:inst5|outSouth[6]    ; blockV2:inst4|inNorthBlocktype[0] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 1.553      ;
; 1.282 ; blockV2:inst5|outSouth[5]    ; blockV2:inst4|antNorth            ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 1.568      ;
; 1.287 ; blockV2:inst3|outEast[0]     ; blockV2:inst6|Westsending         ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.011      ; 1.584      ;
; 1.289 ; blockV2:inst6|blocktype[2]   ; blockV2:inst6|outWest[8]          ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.001      ; 1.576      ;
; 1.295 ; blockV2:inst7|outWest[5]     ; blockV2:inst6|antNorth            ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.011      ; 1.592      ;
; 1.296 ; blockV2:inst7|outWest[8]     ; blockV2:inst6|inNorthBlocktype[2] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.016      ; 1.598      ;
; 1.303 ; blockV2:inst4|sendingEast    ; blockV2:inst4|outEast[0]          ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; -0.003     ; 1.586      ;
; 1.306 ; blockV2:inst3|receivingEast  ; blockV2:inst3|outEast[1]          ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 1.592      ;
; 1.330 ; blockV2:inst4|outEast[0]     ; blockV2:inst7|Westsending         ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.016      ; 1.632      ;
; 1.336 ; blockV2:inst3|NS[5]          ; blockV2:inst3|NS[3]               ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 1.622      ;
; 1.339 ; blockV2:inst4|outNorthVerify ; blockV2:inst4|outNorth[2]         ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.011      ; 1.636      ;
; 1.340 ; blockV2:inst4|NS[0]          ; blockV2:inst4|outState[0]         ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; -0.001     ; 1.625      ;
; 1.465 ; blockV2:inst4|outEast[1]     ; blockV2:inst3|Northreceiving      ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.021      ; 1.772      ;
; 1.471 ; blockV2:inst6|outWest[8]     ; blockV2:inst3|inEastBlocktype[2]  ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.024      ; 1.781      ;
; 1.478 ; blockV2:inst2|NS[3]          ; blockV2:inst2|NS[6]               ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.002      ; 1.766      ;
; 1.489 ; blockV2:inst5|sendingSouth   ; blockV2:inst5|outSouth[0]         ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; -0.013     ; 1.762      ;
; 1.491 ; blockV2:inst7|NS[5]          ; blockV2:inst7|NS[2]               ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; -0.001     ; 1.776      ;
; 1.491 ; blockV2:inst7|ant            ; blockV2:inst7|outWest[5]          ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.006      ; 1.783      ;
; 1.491 ; blockV2:inst7|outSouth[1]    ; blockV2:inst4|Eastreceiving       ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; -0.014     ; 1.763      ;
; 1.501 ; blockV2:inst5|receivingNorth ; blockV2:inst5|outNorth[1]         ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; -0.013     ; 1.774      ;
+-------+------------------------------+-----------------------------------+------------------+------------------+--------------+------------+------------+


+---------------------------------------------------------------------------------------------------------+
; Slow Model Minimum Pulse Width: 'clk'                                                                   ;
+--------+--------------+----------------+------------------+-------+------------+------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock ; Clock Edge ; Target                 ;
+--------+--------------+----------------+------------------+-------+------------+------------------------+
; -1.631 ; 1.000        ; 2.631          ; Port Rate        ; clk   ; Rise       ; clk                    ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clk   ; Rise       ; clkdiv:inst8|count[0]  ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clk   ; Rise       ; clkdiv:inst8|count[0]  ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clk   ; Rise       ; clkdiv:inst8|count[10] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clk   ; Rise       ; clkdiv:inst8|count[10] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clk   ; Rise       ; clkdiv:inst8|count[11] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clk   ; Rise       ; clkdiv:inst8|count[11] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clk   ; Rise       ; clkdiv:inst8|count[12] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clk   ; Rise       ; clkdiv:inst8|count[12] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clk   ; Rise       ; clkdiv:inst8|count[13] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clk   ; Rise       ; clkdiv:inst8|count[13] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clk   ; Rise       ; clkdiv:inst8|count[14] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clk   ; Rise       ; clkdiv:inst8|count[14] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clk   ; Rise       ; clkdiv:inst8|count[15] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clk   ; Rise       ; clkdiv:inst8|count[15] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clk   ; Rise       ; clkdiv:inst8|count[16] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clk   ; Rise       ; clkdiv:inst8|count[16] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clk   ; Rise       ; clkdiv:inst8|count[17] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clk   ; Rise       ; clkdiv:inst8|count[17] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clk   ; Rise       ; clkdiv:inst8|count[18] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clk   ; Rise       ; clkdiv:inst8|count[18] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clk   ; Rise       ; clkdiv:inst8|count[19] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clk   ; Rise       ; clkdiv:inst8|count[19] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clk   ; Rise       ; clkdiv:inst8|count[1]  ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clk   ; Rise       ; clkdiv:inst8|count[1]  ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clk   ; Rise       ; clkdiv:inst8|count[20] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clk   ; Rise       ; clkdiv:inst8|count[20] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clk   ; Rise       ; clkdiv:inst8|count[21] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clk   ; Rise       ; clkdiv:inst8|count[21] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clk   ; Rise       ; clkdiv:inst8|count[22] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clk   ; Rise       ; clkdiv:inst8|count[22] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clk   ; Rise       ; clkdiv:inst8|count[23] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clk   ; Rise       ; clkdiv:inst8|count[23] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clk   ; Rise       ; clkdiv:inst8|count[24] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clk   ; Rise       ; clkdiv:inst8|count[24] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clk   ; Rise       ; clkdiv:inst8|count[25] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clk   ; Rise       ; clkdiv:inst8|count[25] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clk   ; Rise       ; clkdiv:inst8|count[26] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clk   ; Rise       ; clkdiv:inst8|count[26] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clk   ; Rise       ; clkdiv:inst8|count[27] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clk   ; Rise       ; clkdiv:inst8|count[27] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clk   ; Rise       ; clkdiv:inst8|count[28] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clk   ; Rise       ; clkdiv:inst8|count[28] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clk   ; Rise       ; clkdiv:inst8|count[29] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clk   ; Rise       ; clkdiv:inst8|count[29] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clk   ; Rise       ; clkdiv:inst8|count[2]  ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clk   ; Rise       ; clkdiv:inst8|count[2]  ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clk   ; Rise       ; clkdiv:inst8|count[30] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clk   ; Rise       ; clkdiv:inst8|count[30] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clk   ; Rise       ; clkdiv:inst8|count[31] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clk   ; Rise       ; clkdiv:inst8|count[31] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clk   ; Rise       ; clkdiv:inst8|count[32] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clk   ; Rise       ; clkdiv:inst8|count[32] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clk   ; Rise       ; clkdiv:inst8|count[33] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clk   ; Rise       ; clkdiv:inst8|count[33] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clk   ; Rise       ; clkdiv:inst8|count[34] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clk   ; Rise       ; clkdiv:inst8|count[34] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clk   ; Rise       ; clkdiv:inst8|count[35] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clk   ; Rise       ; clkdiv:inst8|count[35] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clk   ; Rise       ; clkdiv:inst8|count[36] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clk   ; Rise       ; clkdiv:inst8|count[36] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clk   ; Rise       ; clkdiv:inst8|count[37] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clk   ; Rise       ; clkdiv:inst8|count[37] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clk   ; Rise       ; clkdiv:inst8|count[38] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clk   ; Rise       ; clkdiv:inst8|count[38] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clk   ; Rise       ; clkdiv:inst8|count[39] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clk   ; Rise       ; clkdiv:inst8|count[39] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clk   ; Rise       ; clkdiv:inst8|count[3]  ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clk   ; Rise       ; clkdiv:inst8|count[3]  ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clk   ; Rise       ; clkdiv:inst8|count[40] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clk   ; Rise       ; clkdiv:inst8|count[40] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clk   ; Rise       ; clkdiv:inst8|count[41] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clk   ; Rise       ; clkdiv:inst8|count[41] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clk   ; Rise       ; clkdiv:inst8|count[42] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clk   ; Rise       ; clkdiv:inst8|count[42] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clk   ; Rise       ; clkdiv:inst8|count[43] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clk   ; Rise       ; clkdiv:inst8|count[43] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clk   ; Rise       ; clkdiv:inst8|count[44] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clk   ; Rise       ; clkdiv:inst8|count[44] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clk   ; Rise       ; clkdiv:inst8|count[45] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clk   ; Rise       ; clkdiv:inst8|count[45] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clk   ; Rise       ; clkdiv:inst8|count[46] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clk   ; Rise       ; clkdiv:inst8|count[46] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clk   ; Rise       ; clkdiv:inst8|count[47] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clk   ; Rise       ; clkdiv:inst8|count[47] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clk   ; Rise       ; clkdiv:inst8|count[48] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clk   ; Rise       ; clkdiv:inst8|count[48] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clk   ; Rise       ; clkdiv:inst8|count[49] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clk   ; Rise       ; clkdiv:inst8|count[49] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clk   ; Rise       ; clkdiv:inst8|count[4]  ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clk   ; Rise       ; clkdiv:inst8|count[4]  ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clk   ; Rise       ; clkdiv:inst8|count[50] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clk   ; Rise       ; clkdiv:inst8|count[50] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clk   ; Rise       ; clkdiv:inst8|count[51] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clk   ; Rise       ; clkdiv:inst8|count[51] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clk   ; Rise       ; clkdiv:inst8|count[52] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clk   ; Rise       ; clkdiv:inst8|count[52] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clk   ; Rise       ; clkdiv:inst8|count[53] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clk   ; Rise       ; clkdiv:inst8|count[53] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clk   ; Rise       ; clkdiv:inst8|count[54] ;
+--------+--------------+----------------+------------------+-------+------------+------------------------+


+----------------------------------------------------------------------------------------------------------------------------+
; Slow Model Minimum Pulse Width: 'VGA_CLK'                                                                                  ;
+--------+--------------+----------------+------------------+---------+------------+-----------------------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock   ; Clock Edge ; Target                                  ;
+--------+--------------+----------------+------------------+---------+------------+-----------------------------------------+
; -1.631 ; 1.000        ; 2.631          ; Port Rate        ; VGA_CLK ; Rise       ; VGA_CLK                                 ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; VGA_CLK ; Rise       ; matrixEncoder:inst9|NS[0]               ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; VGA_CLK ; Rise       ; matrixEncoder:inst9|NS[0]               ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; VGA_CLK ; Rise       ; matrixEncoder:inst9|NS[1]               ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; VGA_CLK ; Rise       ; matrixEncoder:inst9|NS[1]               ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; VGA_CLK ; Rise       ; matrixEncoder:inst9|NS[2]               ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; VGA_CLK ; Rise       ; matrixEncoder:inst9|NS[2]               ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; VGA_CLK ; Rise       ; matrixEncoder:inst9|outCol[0]           ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; VGA_CLK ; Rise       ; matrixEncoder:inst9|outCol[0]           ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; VGA_CLK ; Rise       ; matrixEncoder:inst9|outCol[1]           ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; VGA_CLK ; Rise       ; matrixEncoder:inst9|outCol[1]           ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; VGA_CLK ; Rise       ; matrixEncoder:inst9|outCol[2]           ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; VGA_CLK ; Rise       ; matrixEncoder:inst9|outCol[2]           ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; VGA_CLK ; Rise       ; matrixEncoder:inst9|outSel[0]           ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; VGA_CLK ; Rise       ; matrixEncoder:inst9|outSel[0]           ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; VGA_CLK ; Rise       ; matrixEncoder:inst9|outSel[1]           ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; VGA_CLK ; Rise       ; matrixEncoder:inst9|outSel[1]           ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; VGA_CLK ; Rise       ; matrixEncoder:inst9|outSel[2]           ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; VGA_CLK ; Rise       ; matrixEncoder:inst9|outSel[2]           ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; VGA_CLK ; Rise       ; matrixEncoder:inst9|storeCol[0]         ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; VGA_CLK ; Rise       ; matrixEncoder:inst9|storeCol[0]         ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; VGA_CLK ; Rise       ; matrixEncoder:inst9|storeCol[1]         ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; VGA_CLK ; Rise       ; matrixEncoder:inst9|storeCol[1]         ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; VGA_CLK ; Rise       ; matrixEncoder:inst9|storeCol[2]         ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; VGA_CLK ; Rise       ; matrixEncoder:inst9|storeCol[2]         ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; VGA_CLK ; Rise       ; matrixEncoder:inst9|storeSel[0]         ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; VGA_CLK ; Rise       ; matrixEncoder:inst9|storeSel[0]         ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; VGA_CLK ; Rise       ; matrixEncoder:inst9|storeSel[1]         ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; VGA_CLK ; Rise       ; matrixEncoder:inst9|storeSel[1]         ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; VGA_CLK ; Rise       ; matrixEncoder:inst9|storeSel[2]         ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; VGA_CLK ; Rise       ; matrixEncoder:inst9|storeSel[2]         ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; VGA_CLK ; Rise       ; vga:inst1|VGA_B[1]                      ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; VGA_CLK ; Rise       ; vga:inst1|VGA_B[1]                      ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; VGA_CLK ; Rise       ; vga:inst1|VGA_B[2]                      ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; VGA_CLK ; Rise       ; vga:inst1|VGA_B[2]                      ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; VGA_CLK ; Rise       ; vga:inst1|VGA_B[3]                      ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; VGA_CLK ; Rise       ; vga:inst1|VGA_B[3]                      ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; VGA_CLK ; Rise       ; vga:inst1|VGA_G[2]                      ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; VGA_CLK ; Rise       ; vga:inst1|VGA_G[2]                      ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; VGA_CLK ; Rise       ; vga:inst1|VGA_G[3]                      ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; VGA_CLK ; Rise       ; vga:inst1|VGA_G[3]                      ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; VGA_CLK ; Rise       ; vga:inst1|VGA_R[1]                      ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; VGA_CLK ; Rise       ; vga:inst1|VGA_R[1]                      ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; VGA_CLK ; Rise       ; vga:inst1|VGA_R[3]                      ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; VGA_CLK ; Rise       ; vga:inst1|VGA_R[3]                      ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; VGA_CLK ; Rise       ; vga:inst1|cnt[15]                       ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; VGA_CLK ; Rise       ; vga:inst1|cnt[15]                       ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; VGA_CLK ; Rise       ; vga:inst1|vga640x480:display|h_count[0] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; VGA_CLK ; Rise       ; vga:inst1|vga640x480:display|h_count[0] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; VGA_CLK ; Rise       ; vga:inst1|vga640x480:display|h_count[1] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; VGA_CLK ; Rise       ; vga:inst1|vga640x480:display|h_count[1] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; VGA_CLK ; Rise       ; vga:inst1|vga640x480:display|h_count[2] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; VGA_CLK ; Rise       ; vga:inst1|vga640x480:display|h_count[2] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; VGA_CLK ; Rise       ; vga:inst1|vga640x480:display|h_count[3] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; VGA_CLK ; Rise       ; vga:inst1|vga640x480:display|h_count[3] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; VGA_CLK ; Rise       ; vga:inst1|vga640x480:display|h_count[4] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; VGA_CLK ; Rise       ; vga:inst1|vga640x480:display|h_count[4] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; VGA_CLK ; Rise       ; vga:inst1|vga640x480:display|h_count[5] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; VGA_CLK ; Rise       ; vga:inst1|vga640x480:display|h_count[5] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; VGA_CLK ; Rise       ; vga:inst1|vga640x480:display|h_count[6] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; VGA_CLK ; Rise       ; vga:inst1|vga640x480:display|h_count[6] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; VGA_CLK ; Rise       ; vga:inst1|vga640x480:display|h_count[7] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; VGA_CLK ; Rise       ; vga:inst1|vga640x480:display|h_count[7] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; VGA_CLK ; Rise       ; vga:inst1|vga640x480:display|h_count[8] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; VGA_CLK ; Rise       ; vga:inst1|vga640x480:display|h_count[8] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; VGA_CLK ; Rise       ; vga:inst1|vga640x480:display|h_count[9] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; VGA_CLK ; Rise       ; vga:inst1|vga640x480:display|h_count[9] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; VGA_CLK ; Rise       ; vga:inst1|vga640x480:display|v_count[0] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; VGA_CLK ; Rise       ; vga:inst1|vga640x480:display|v_count[0] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; VGA_CLK ; Rise       ; vga:inst1|vga640x480:display|v_count[1] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; VGA_CLK ; Rise       ; vga:inst1|vga640x480:display|v_count[1] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; VGA_CLK ; Rise       ; vga:inst1|vga640x480:display|v_count[2] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; VGA_CLK ; Rise       ; vga:inst1|vga640x480:display|v_count[2] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; VGA_CLK ; Rise       ; vga:inst1|vga640x480:display|v_count[3] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; VGA_CLK ; Rise       ; vga:inst1|vga640x480:display|v_count[3] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; VGA_CLK ; Rise       ; vga:inst1|vga640x480:display|v_count[4] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; VGA_CLK ; Rise       ; vga:inst1|vga640x480:display|v_count[4] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; VGA_CLK ; Rise       ; vga:inst1|vga640x480:display|v_count[5] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; VGA_CLK ; Rise       ; vga:inst1|vga640x480:display|v_count[5] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; VGA_CLK ; Rise       ; vga:inst1|vga640x480:display|v_count[6] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; VGA_CLK ; Rise       ; vga:inst1|vga640x480:display|v_count[6] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; VGA_CLK ; Rise       ; vga:inst1|vga640x480:display|v_count[7] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; VGA_CLK ; Rise       ; vga:inst1|vga640x480:display|v_count[7] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; VGA_CLK ; Rise       ; vga:inst1|vga640x480:display|v_count[8] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; VGA_CLK ; Rise       ; vga:inst1|vga640x480:display|v_count[8] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; VGA_CLK ; Rise       ; vga:inst1|vga640x480:display|v_count[9] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; VGA_CLK ; Rise       ; vga:inst1|vga640x480:display|v_count[9] ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; VGA_CLK ; Rise       ; VGA_CLK|combout                         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; VGA_CLK ; Rise       ; VGA_CLK|combout                         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; VGA_CLK ; Rise       ; VGA_CLK~clkctrl|inclk[0]                ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; VGA_CLK ; Rise       ; VGA_CLK~clkctrl|inclk[0]                ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; VGA_CLK ; Rise       ; VGA_CLK~clkctrl|outclk                  ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; VGA_CLK ; Rise       ; VGA_CLK~clkctrl|outclk                  ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; VGA_CLK ; Rise       ; inst1|VGA_B[1]|clk                      ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; VGA_CLK ; Rise       ; inst1|VGA_B[1]|clk                      ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; VGA_CLK ; Rise       ; inst1|VGA_B[2]|clk                      ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; VGA_CLK ; Rise       ; inst1|VGA_B[2]|clk                      ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; VGA_CLK ; Rise       ; inst1|VGA_B[3]|clk                      ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; VGA_CLK ; Rise       ; inst1|VGA_B[3]|clk                      ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; VGA_CLK ; Rise       ; inst1|VGA_G[2]|clk                      ;
+--------+--------------+----------------+------------------+---------+------------+-----------------------------------------+


+-------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Minimum Pulse Width: 'clkdiv:inst8|out'                                                                            ;
+--------+--------------+----------------+------------------+------------------+------------+-----------------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock            ; Clock Edge ; Target                            ;
+--------+--------------+----------------+------------------+------------------+------------+-----------------------------------+
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|NS[0]               ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|NS[0]               ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|NS[1]               ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|NS[1]               ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|NS[2]               ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|NS[2]               ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|NS[3]               ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|NS[3]               ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|NS[4]               ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|NS[4]               ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|NS[5]               ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|NS[5]               ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|NS[6]               ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|NS[6]               ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|NS[7]               ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|NS[7]               ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|Northreceiving      ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|Northreceiving      ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|Northsending        ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|Northsending        ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|Southreceiving      ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|Southreceiving      ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|ant                 ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|ant                 ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|antNorth            ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|antNorth            ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|blocktype[0]        ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|blocktype[0]        ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|inNorthBlocktype[0] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|inNorthBlocktype[0] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|outNorthVerify      ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|outNorthVerify      ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|outNorth[0]         ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|outNorth[0]         ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|outNorth[1]         ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|outNorth[1]         ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|outNorth[2]         ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|outNorth[2]         ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|outSouthVerify      ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|outSouthVerify      ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|outSouth[0]         ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|outSouth[0]         ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|outSouth[2]         ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|outSouth[2]         ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|outSouth[4]         ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|outSouth[4]         ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|outSouth[5]         ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|outSouth[5]         ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|outSouth[6]         ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|outSouth[6]         ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|receivingNorth      ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|receivingNorth      ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|sendingNorth        ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|sendingNorth        ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|sendingSouth        ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|sendingSouth        ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|sugar               ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|sugar               ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|sugarNorth          ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|sugarNorth          ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clkdiv:inst8|out ; Rise       ; blockV2:inst3|Eastreceiving       ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clkdiv:inst8|out ; Rise       ; blockV2:inst3|Eastreceiving       ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clkdiv:inst8|out ; Rise       ; blockV2:inst3|Eastsending         ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clkdiv:inst8|out ; Rise       ; blockV2:inst3|Eastsending         ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clkdiv:inst8|out ; Rise       ; blockV2:inst3|NS[0]               ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clkdiv:inst8|out ; Rise       ; blockV2:inst3|NS[0]               ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clkdiv:inst8|out ; Rise       ; blockV2:inst3|NS[1]               ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clkdiv:inst8|out ; Rise       ; blockV2:inst3|NS[1]               ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clkdiv:inst8|out ; Rise       ; blockV2:inst3|NS[2]               ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clkdiv:inst8|out ; Rise       ; blockV2:inst3|NS[2]               ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clkdiv:inst8|out ; Rise       ; blockV2:inst3|NS[3]               ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clkdiv:inst8|out ; Rise       ; blockV2:inst3|NS[3]               ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clkdiv:inst8|out ; Rise       ; blockV2:inst3|NS[4]               ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clkdiv:inst8|out ; Rise       ; blockV2:inst3|NS[4]               ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clkdiv:inst8|out ; Rise       ; blockV2:inst3|NS[5]               ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clkdiv:inst8|out ; Rise       ; blockV2:inst3|NS[5]               ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clkdiv:inst8|out ; Rise       ; blockV2:inst3|NS[6]               ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clkdiv:inst8|out ; Rise       ; blockV2:inst3|NS[6]               ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clkdiv:inst8|out ; Rise       ; blockV2:inst3|NS[7]               ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clkdiv:inst8|out ; Rise       ; blockV2:inst3|NS[7]               ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clkdiv:inst8|out ; Rise       ; blockV2:inst3|Northreceiving      ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clkdiv:inst8|out ; Rise       ; blockV2:inst3|Northreceiving      ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clkdiv:inst8|out ; Rise       ; blockV2:inst3|Northsending        ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clkdiv:inst8|out ; Rise       ; blockV2:inst3|Northsending        ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clkdiv:inst8|out ; Rise       ; blockV2:inst3|Southreceiving      ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clkdiv:inst8|out ; Rise       ; blockV2:inst3|Southreceiving      ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clkdiv:inst8|out ; Rise       ; blockV2:inst3|ant                 ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clkdiv:inst8|out ; Rise       ; blockV2:inst3|ant                 ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clkdiv:inst8|out ; Rise       ; blockV2:inst3|antEast             ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clkdiv:inst8|out ; Rise       ; blockV2:inst3|antEast             ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clkdiv:inst8|out ; Rise       ; blockV2:inst3|blocktype[0]        ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clkdiv:inst8|out ; Rise       ; blockV2:inst3|blocktype[0]        ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clkdiv:inst8|out ; Rise       ; blockV2:inst3|inEastBlocktype[0]  ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clkdiv:inst8|out ; Rise       ; blockV2:inst3|inEastBlocktype[0]  ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clkdiv:inst8|out ; Rise       ; blockV2:inst3|inEastBlocktype[2]  ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clkdiv:inst8|out ; Rise       ; blockV2:inst3|inEastBlocktype[2]  ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clkdiv:inst8|out ; Rise       ; blockV2:inst3|outEastVerify       ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clkdiv:inst8|out ; Rise       ; blockV2:inst3|outEastVerify       ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clkdiv:inst8|out ; Rise       ; blockV2:inst3|outEast[0]          ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clkdiv:inst8|out ; Rise       ; blockV2:inst3|outEast[0]          ;
+--------+--------------+----------------+------------------+------------------+------------+-----------------------------------+


+----------------------------------------------------------------------------------+
; Setup Times                                                                      ;
+---------------+------------------+-------+-------+------------+------------------+
; Data Port     ; Clock Port       ; Rise  ; Fall  ; Clock Edge ; Clock Reference  ;
+---------------+------------------+-------+-------+------------+------------------+
; VGA_RST       ; VGA_CLK          ; 6.808 ; 6.808 ; Rise       ; VGA_CLK          ;
; setinputs[*]  ; clk              ; 5.089 ; 5.089 ; Rise       ; clk              ;
;  setinputs[0] ; clk              ; 4.098 ; 4.098 ; Rise       ; clk              ;
;  setinputs[1] ; clk              ; 5.089 ; 5.089 ; Rise       ; clk              ;
;  setinputs[2] ; clk              ; 4.288 ; 4.288 ; Rise       ; clk              ;
;  setinputs[3] ; clk              ; 4.378 ; 4.378 ; Rise       ; clk              ;
; en            ; clkdiv:inst8|out ; 6.080 ; 6.080 ; Rise       ; clkdiv:inst8|out ;
+---------------+------------------+-------+-------+------------+------------------+


+------------------------------------------------------------------------------------+
; Hold Times                                                                         ;
+---------------+------------------+--------+--------+------------+------------------+
; Data Port     ; Clock Port       ; Rise   ; Fall   ; Clock Edge ; Clock Reference  ;
+---------------+------------------+--------+--------+------------+------------------+
; VGA_RST       ; VGA_CLK          ; -5.980 ; -5.980 ; Rise       ; VGA_CLK          ;
; setinputs[*]  ; clk              ; -0.643 ; -0.643 ; Rise       ; clk              ;
;  setinputs[0] ; clk              ; -0.996 ; -0.996 ; Rise       ; clk              ;
;  setinputs[1] ; clk              ; -0.816 ; -0.816 ; Rise       ; clk              ;
;  setinputs[2] ; clk              ; -0.918 ; -0.918 ; Rise       ; clk              ;
;  setinputs[3] ; clk              ; -0.643 ; -0.643 ; Rise       ; clk              ;
; en            ; clkdiv:inst8|out ; -3.163 ; -3.163 ; Rise       ; clkdiv:inst8|out ;
+---------------+------------------+--------+--------+------------+------------------+


+------------------------------------------------------------------------------------+
; Clock to Output Times                                                              ;
+---------------+------------------+--------+--------+------------+------------------+
; Data Port     ; Clock Port       ; Rise   ; Fall   ; Clock Edge ; Clock Reference  ;
+---------------+------------------+--------+--------+------------+------------------+
; VGA_BLUE[*]   ; VGA_CLK          ; 7.533  ; 7.533  ; Rise       ; VGA_CLK          ;
;  VGA_BLUE[1]  ; VGA_CLK          ; 7.533  ; 7.533  ; Rise       ; VGA_CLK          ;
;  VGA_BLUE[2]  ; VGA_CLK          ; 7.484  ; 7.484  ; Rise       ; VGA_CLK          ;
;  VGA_BLUE[3]  ; VGA_CLK          ; 7.421  ; 7.421  ; Rise       ; VGA_CLK          ;
; VGA_GREEN[*]  ; VGA_CLK          ; 7.554  ; 7.554  ; Rise       ; VGA_CLK          ;
;  VGA_GREEN[1] ; VGA_CLK          ; 7.554  ; 7.554  ; Rise       ; VGA_CLK          ;
;  VGA_GREEN[2] ; VGA_CLK          ; 6.920  ; 6.920  ; Rise       ; VGA_CLK          ;
;  VGA_GREEN[3] ; VGA_CLK          ; 7.192  ; 7.192  ; Rise       ; VGA_CLK          ;
; VGA_Hsync     ; VGA_CLK          ; 10.595 ; 10.595 ; Rise       ; VGA_CLK          ;
; VGA_RED[*]    ; VGA_CLK          ; 7.183  ; 7.183  ; Rise       ; VGA_CLK          ;
;  VGA_RED[1]   ; VGA_CLK          ; 7.183  ; 7.183  ; Rise       ; VGA_CLK          ;
;  VGA_RED[3]   ; VGA_CLK          ; 7.166  ; 7.166  ; Rise       ; VGA_CLK          ;
; VGA_Vsync     ; VGA_CLK          ; 9.567  ; 9.567  ; Rise       ; VGA_CLK          ;
; hexoutA[*]    ; clk              ; 7.391  ; 7.391  ; Rise       ; clk              ;
;  hexoutA[0]   ; clk              ; 6.999  ; 6.999  ; Rise       ; clk              ;
;  hexoutA[1]   ; clk              ; 7.043  ; 7.043  ; Rise       ; clk              ;
;  hexoutA[2]   ; clk              ; 7.047  ; 7.047  ; Rise       ; clk              ;
;  hexoutA[3]   ; clk              ; 7.391  ; 7.391  ; Rise       ; clk              ;
;  hexoutA[4]   ; clk              ; 7.380  ; 7.380  ; Rise       ; clk              ;
;  hexoutA[5]   ; clk              ; 7.371  ; 7.371  ; Rise       ; clk              ;
;  hexoutA[6]   ; clk              ; 7.369  ; 7.369  ; Rise       ; clk              ;
; hexoutB[*]    ; clk              ; 7.648  ; 7.648  ; Rise       ; clk              ;
;  hexoutB[0]   ; clk              ; 7.323  ; 7.323  ; Rise       ; clk              ;
;  hexoutB[1]   ; clk              ; 7.633  ; 7.633  ; Rise       ; clk              ;
;  hexoutB[2]   ; clk              ; 7.382  ; 7.382  ; Rise       ; clk              ;
;  hexoutB[3]   ; clk              ; 7.648  ; 7.648  ; Rise       ; clk              ;
;  hexoutB[4]   ; clk              ; 7.464  ; 7.464  ; Rise       ; clk              ;
;  hexoutB[5]   ; clk              ; 7.415  ; 7.415  ; Rise       ; clk              ;
;  hexoutB[6]   ; clk              ; 7.429  ; 7.429  ; Rise       ; clk              ;
; hexoutC[*]    ; clk              ; 7.987  ; 7.987  ; Rise       ; clk              ;
;  hexoutC[0]   ; clk              ; 7.716  ; 7.716  ; Rise       ; clk              ;
;  hexoutC[1]   ; clk              ; 7.656  ; 7.656  ; Rise       ; clk              ;
;  hexoutC[2]   ; clk              ; 7.728  ; 7.728  ; Rise       ; clk              ;
;  hexoutC[3]   ; clk              ; 7.816  ; 7.816  ; Rise       ; clk              ;
;  hexoutC[4]   ; clk              ; 7.698  ; 7.698  ; Rise       ; clk              ;
;  hexoutC[5]   ; clk              ; 7.680  ; 7.680  ; Rise       ; clk              ;
;  hexoutC[6]   ; clk              ; 7.987  ; 7.987  ; Rise       ; clk              ;
; hexoutD[*]    ; clk              ; 7.875  ; 7.875  ; Rise       ; clk              ;
;  hexoutD[0]   ; clk              ; 7.386  ; 7.386  ; Rise       ; clk              ;
;  hexoutD[1]   ; clk              ; 7.875  ; 7.875  ; Rise       ; clk              ;
;  hexoutD[2]   ; clk              ; 7.597  ; 7.597  ; Rise       ; clk              ;
;  hexoutD[3]   ; clk              ; 7.316  ; 7.316  ; Rise       ; clk              ;
;  hexoutD[4]   ; clk              ; 7.303  ; 7.303  ; Rise       ; clk              ;
;  hexoutD[5]   ; clk              ; 7.403  ; 7.403  ; Rise       ; clk              ;
;  hexoutD[6]   ; clk              ; 7.430  ; 7.430  ; Rise       ; clk              ;
; GLED[*]       ; clkdiv:inst8|out ; 8.842  ; 8.842  ; Rise       ; clkdiv:inst8|out ;
;  GLED[0]      ; clkdiv:inst8|out ; 7.391  ; 7.391  ; Rise       ; clkdiv:inst8|out ;
;  GLED[1]      ; clkdiv:inst8|out ; 7.404  ; 7.404  ; Rise       ; clkdiv:inst8|out ;
;  GLED[2]      ; clkdiv:inst8|out ; 8.842  ; 8.842  ; Rise       ; clkdiv:inst8|out ;
;  GLED[4]      ; clkdiv:inst8|out ; 7.601  ; 7.601  ; Rise       ; clkdiv:inst8|out ;
;  GLED[5]      ; clkdiv:inst8|out ; 7.620  ; 7.620  ; Rise       ; clkdiv:inst8|out ;
;  GLED[6]      ; clkdiv:inst8|out ; 7.424  ; 7.424  ; Rise       ; clkdiv:inst8|out ;
; RLED[*]       ; clkdiv:inst8|out ; 8.873  ; 8.873  ; Rise       ; clkdiv:inst8|out ;
;  RLED[0]      ; clkdiv:inst8|out ; 7.640  ; 7.640  ; Rise       ; clkdiv:inst8|out ;
;  RLED[1]      ; clkdiv:inst8|out ; 7.336  ; 7.336  ; Rise       ; clkdiv:inst8|out ;
;  RLED[2]      ; clkdiv:inst8|out ; 7.962  ; 7.962  ; Rise       ; clkdiv:inst8|out ;
;  RLED[4]      ; clkdiv:inst8|out ; 8.589  ; 8.589  ; Rise       ; clkdiv:inst8|out ;
;  RLED[5]      ; clkdiv:inst8|out ; 8.873  ; 8.873  ; Rise       ; clkdiv:inst8|out ;
;  RLED[6]      ; clkdiv:inst8|out ; 8.644  ; 8.644  ; Rise       ; clkdiv:inst8|out ;
+---------------+------------------+--------+--------+------------+------------------+


+----------------------------------------------------------------------------------+
; Minimum Clock to Output Times                                                    ;
+---------------+------------------+-------+-------+------------+------------------+
; Data Port     ; Clock Port       ; Rise  ; Fall  ; Clock Edge ; Clock Reference  ;
+---------------+------------------+-------+-------+------------+------------------+
; VGA_BLUE[*]   ; VGA_CLK          ; 7.421 ; 7.421 ; Rise       ; VGA_CLK          ;
;  VGA_BLUE[1]  ; VGA_CLK          ; 7.533 ; 7.533 ; Rise       ; VGA_CLK          ;
;  VGA_BLUE[2]  ; VGA_CLK          ; 7.484 ; 7.484 ; Rise       ; VGA_CLK          ;
;  VGA_BLUE[3]  ; VGA_CLK          ; 7.421 ; 7.421 ; Rise       ; VGA_CLK          ;
; VGA_GREEN[*]  ; VGA_CLK          ; 6.920 ; 6.920 ; Rise       ; VGA_CLK          ;
;  VGA_GREEN[1] ; VGA_CLK          ; 7.554 ; 7.554 ; Rise       ; VGA_CLK          ;
;  VGA_GREEN[2] ; VGA_CLK          ; 6.920 ; 6.920 ; Rise       ; VGA_CLK          ;
;  VGA_GREEN[3] ; VGA_CLK          ; 7.192 ; 7.192 ; Rise       ; VGA_CLK          ;
; VGA_Hsync     ; VGA_CLK          ; 8.575 ; 8.575 ; Rise       ; VGA_CLK          ;
; VGA_RED[*]    ; VGA_CLK          ; 7.166 ; 7.166 ; Rise       ; VGA_CLK          ;
;  VGA_RED[1]   ; VGA_CLK          ; 7.183 ; 7.183 ; Rise       ; VGA_CLK          ;
;  VGA_RED[3]   ; VGA_CLK          ; 7.166 ; 7.166 ; Rise       ; VGA_CLK          ;
; VGA_Vsync     ; VGA_CLK          ; 7.899 ; 7.899 ; Rise       ; VGA_CLK          ;
; hexoutA[*]    ; clk              ; 6.999 ; 6.999 ; Rise       ; clk              ;
;  hexoutA[0]   ; clk              ; 6.999 ; 6.999 ; Rise       ; clk              ;
;  hexoutA[1]   ; clk              ; 7.043 ; 7.043 ; Rise       ; clk              ;
;  hexoutA[2]   ; clk              ; 7.047 ; 7.047 ; Rise       ; clk              ;
;  hexoutA[3]   ; clk              ; 7.391 ; 7.391 ; Rise       ; clk              ;
;  hexoutA[4]   ; clk              ; 7.380 ; 7.380 ; Rise       ; clk              ;
;  hexoutA[5]   ; clk              ; 7.371 ; 7.371 ; Rise       ; clk              ;
;  hexoutA[6]   ; clk              ; 7.369 ; 7.369 ; Rise       ; clk              ;
; hexoutB[*]    ; clk              ; 7.323 ; 7.323 ; Rise       ; clk              ;
;  hexoutB[0]   ; clk              ; 7.323 ; 7.323 ; Rise       ; clk              ;
;  hexoutB[1]   ; clk              ; 7.633 ; 7.633 ; Rise       ; clk              ;
;  hexoutB[2]   ; clk              ; 7.382 ; 7.382 ; Rise       ; clk              ;
;  hexoutB[3]   ; clk              ; 7.648 ; 7.648 ; Rise       ; clk              ;
;  hexoutB[4]   ; clk              ; 7.464 ; 7.464 ; Rise       ; clk              ;
;  hexoutB[5]   ; clk              ; 7.415 ; 7.415 ; Rise       ; clk              ;
;  hexoutB[6]   ; clk              ; 7.429 ; 7.429 ; Rise       ; clk              ;
; hexoutC[*]    ; clk              ; 7.656 ; 7.656 ; Rise       ; clk              ;
;  hexoutC[0]   ; clk              ; 7.716 ; 7.716 ; Rise       ; clk              ;
;  hexoutC[1]   ; clk              ; 7.656 ; 7.656 ; Rise       ; clk              ;
;  hexoutC[2]   ; clk              ; 7.728 ; 7.728 ; Rise       ; clk              ;
;  hexoutC[3]   ; clk              ; 7.816 ; 7.816 ; Rise       ; clk              ;
;  hexoutC[4]   ; clk              ; 7.698 ; 7.698 ; Rise       ; clk              ;
;  hexoutC[5]   ; clk              ; 7.680 ; 7.680 ; Rise       ; clk              ;
;  hexoutC[6]   ; clk              ; 7.987 ; 7.987 ; Rise       ; clk              ;
; hexoutD[*]    ; clk              ; 7.303 ; 7.303 ; Rise       ; clk              ;
;  hexoutD[0]   ; clk              ; 7.386 ; 7.386 ; Rise       ; clk              ;
;  hexoutD[1]   ; clk              ; 7.875 ; 7.875 ; Rise       ; clk              ;
;  hexoutD[2]   ; clk              ; 7.597 ; 7.597 ; Rise       ; clk              ;
;  hexoutD[3]   ; clk              ; 7.316 ; 7.316 ; Rise       ; clk              ;
;  hexoutD[4]   ; clk              ; 7.303 ; 7.303 ; Rise       ; clk              ;
;  hexoutD[5]   ; clk              ; 7.403 ; 7.403 ; Rise       ; clk              ;
;  hexoutD[6]   ; clk              ; 7.430 ; 7.430 ; Rise       ; clk              ;
; GLED[*]       ; clkdiv:inst8|out ; 7.391 ; 7.391 ; Rise       ; clkdiv:inst8|out ;
;  GLED[0]      ; clkdiv:inst8|out ; 7.391 ; 7.391 ; Rise       ; clkdiv:inst8|out ;
;  GLED[1]      ; clkdiv:inst8|out ; 7.404 ; 7.404 ; Rise       ; clkdiv:inst8|out ;
;  GLED[2]      ; clkdiv:inst8|out ; 8.842 ; 8.842 ; Rise       ; clkdiv:inst8|out ;
;  GLED[4]      ; clkdiv:inst8|out ; 7.601 ; 7.601 ; Rise       ; clkdiv:inst8|out ;
;  GLED[5]      ; clkdiv:inst8|out ; 7.620 ; 7.620 ; Rise       ; clkdiv:inst8|out ;
;  GLED[6]      ; clkdiv:inst8|out ; 7.424 ; 7.424 ; Rise       ; clkdiv:inst8|out ;
; RLED[*]       ; clkdiv:inst8|out ; 7.336 ; 7.336 ; Rise       ; clkdiv:inst8|out ;
;  RLED[0]      ; clkdiv:inst8|out ; 7.640 ; 7.640 ; Rise       ; clkdiv:inst8|out ;
;  RLED[1]      ; clkdiv:inst8|out ; 7.336 ; 7.336 ; Rise       ; clkdiv:inst8|out ;
;  RLED[2]      ; clkdiv:inst8|out ; 7.962 ; 7.962 ; Rise       ; clkdiv:inst8|out ;
;  RLED[4]      ; clkdiv:inst8|out ; 8.589 ; 8.589 ; Rise       ; clkdiv:inst8|out ;
;  RLED[5]      ; clkdiv:inst8|out ; 8.873 ; 8.873 ; Rise       ; clkdiv:inst8|out ;
;  RLED[6]      ; clkdiv:inst8|out ; 8.644 ; 8.644 ; Rise       ; clkdiv:inst8|out ;
+---------------+------------------+-------+-------+------------+------------------+


+--------------------------------------------+
; Fast Model Setup Summary                   ;
+------------------+---------+---------------+
; Clock            ; Slack   ; End Point TNS ;
+------------------+---------+---------------+
; clk              ; -90.782 ; -254.627      ;
; clkdiv:inst8|out ; -1.481  ; -102.887      ;
; VGA_CLK          ; -1.055  ; -23.563       ;
+------------------+---------+---------------+


+------------------------------------------+
; Fast Model Hold Summary                  ;
+------------------+-------+---------------+
; Clock            ; Slack ; End Point TNS ;
+------------------+-------+---------------+
; VGA_CLK          ; 0.215 ; 0.000         ;
; clk              ; 0.215 ; 0.000         ;
; clkdiv:inst8|out ; 0.215 ; 0.000         ;
+------------------+-------+---------------+


-------------------------------
; Fast Model Recovery Summary ;
-------------------------------
No paths to report.


------------------------------
; Fast Model Removal Summary ;
------------------------------
No paths to report.


+-------------------------------------------+
; Fast Model Minimum Pulse Width Summary    ;
+------------------+--------+---------------+
; Clock            ; Slack  ; End Point TNS ;
+------------------+--------+---------------+
; clk              ; -1.380 ; -95.380       ;
; VGA_CLK          ; -1.380 ; -44.380       ;
; clkdiv:inst8|out ; -0.500 ; -207.000      ;
+------------------+--------+---------------+


+---------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Setup: 'clk'                                                                                                               ;
+---------+---------------------------+-----------------------+------------------+-------------+--------------+------------+------------+
; Slack   ; From Node                 ; To Node               ; Launch Clock     ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+---------+---------------------------+-----------------------+------------------+-------------+--------------+------------+------------+
; -90.782 ; clkdiv:inst8|count[50]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.009      ; 91.823     ;
; -90.747 ; clkdiv:inst8|count[51]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.009      ; 91.788     ;
; -90.713 ; clkdiv:inst8|count[52]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.009      ; 91.754     ;
; -90.691 ; clkdiv:inst8|count[53]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.009      ; 91.732     ;
; -90.644 ; clkdiv:inst8|count[54]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.009      ; 91.685     ;
; -90.622 ; clkdiv:inst8|count[55]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.009      ; 91.663     ;
; -90.587 ; clkdiv:inst8|count[56]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.009      ; 91.628     ;
; -90.535 ; clkdiv:inst8|count[57]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.009      ; 91.576     ;
; -90.457 ; clkdiv:inst8|count[58]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.009      ; 91.498     ;
; -90.409 ; clkdiv:inst8|count[59]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.009      ; 91.450     ;
; -90.387 ; clkdiv:inst8|count[60]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.009      ; 91.428     ;
; -90.339 ; clkdiv:inst8|count[61]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.009      ; 91.380     ;
; -90.318 ; clkdiv:inst8|count[62]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.009      ; 91.359     ;
; -90.268 ; clkdiv:inst8|count[63]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.009      ; 91.309     ;
; -89.360 ; clkdiv:inst8|count[49]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; -0.001     ; 90.391     ;
; -87.179 ; clkdiv:inst8|count[48]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; -0.004     ; 88.207     ;
; -85.115 ; clkdiv:inst8|count[47]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.000      ; 86.147     ;
; -83.481 ; clkdiv:inst8|count[46]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.000      ; 84.513     ;
; -82.470 ; clkdiv:inst8|count[45]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.010      ; 83.512     ;
; -79.940 ; clkdiv:inst8|count[44]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.004      ; 80.976     ;
; -77.737 ; clkdiv:inst8|count[43]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.009      ; 78.778     ;
; -76.336 ; clkdiv:inst8|count[42]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.009      ; 77.377     ;
; -74.636 ; clkdiv:inst8|count[41]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.005      ; 75.673     ;
; -72.445 ; clkdiv:inst8|count[40]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.006      ; 73.483     ;
; -70.785 ; clkdiv:inst8|count[39]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.009      ; 71.826     ;
; -69.379 ; clkdiv:inst8|count[38]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.005      ; 70.416     ;
; -67.589 ; clkdiv:inst8|count[37]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.005      ; 68.626     ;
; -65.503 ; clkdiv:inst8|count[36]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.005      ; 66.540     ;
; -63.890 ; clkdiv:inst8|count[35]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.005      ; 64.927     ;
; -61.954 ; clkdiv:inst8|count[34]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.005      ; 62.991     ;
; -60.224 ; clkdiv:inst8|count[33]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.005      ; 61.261     ;
; -58.393 ; clkdiv:inst8|count[32]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.005      ; 59.430     ;
; -57.238 ; clkdiv:inst8|count[31]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.010      ; 58.280     ;
; -53.429 ; clkdiv:inst8|count[30]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.010      ; 54.471     ;
; -50.731 ; clkdiv:inst8|count[29]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.010      ; 51.773     ;
; -48.580 ; clkdiv:inst8|count[28]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.010      ; 49.622     ;
; -46.822 ; clkdiv:inst8|count[27]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.010      ; 47.864     ;
; -43.490 ; clkdiv:inst8|count[26]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.010      ; 44.532     ;
; -41.798 ; clkdiv:inst8|count[25]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.010      ; 42.840     ;
; -39.982 ; clkdiv:inst8|count[24]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.010      ; 41.024     ;
; -37.890 ; clkdiv:inst8|count[23]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.010      ; 38.932     ;
; -36.272 ; clkdiv:inst8|count[22]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.010      ; 37.314     ;
; -34.175 ; clkdiv:inst8|count[21]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.010      ; 35.217     ;
; -32.433 ; clkdiv:inst8|count[20]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.010      ; 33.475     ;
; -30.153 ; clkdiv:inst8|count[19]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.010      ; 31.195     ;
; -28.053 ; clkdiv:inst8|count[18]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.010      ; 29.095     ;
; -27.379 ; clkdiv:inst8|count[17]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.010      ; 28.421     ;
; -24.389 ; clkdiv:inst8|count[16]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.010      ; 25.431     ;
; -22.362 ; clkdiv:inst8|count[15]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.016      ; 23.410     ;
; -20.512 ; clkdiv:inst8|count[14]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.016      ; 21.560     ;
; -18.994 ; clkdiv:inst8|count[13]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.016      ; 20.042     ;
; -17.168 ; clkdiv:inst8|count[12]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.016      ; 18.216     ;
; -15.315 ; clkdiv:inst8|count[11]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.016      ; 16.363     ;
; -13.800 ; clkdiv:inst8|count[10]    ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.016      ; 14.848     ;
; -11.499 ; clkdiv:inst8|count[9]     ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.016      ; 12.547     ;
; -9.905  ; clkdiv:inst8|count[8]     ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.016      ; 10.953     ;
; -8.392  ; clkdiv:inst8|count[7]     ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.016      ; 9.440      ;
; -6.571  ; clkdiv:inst8|count[6]     ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.016      ; 7.619      ;
; -5.801  ; clkdiv:inst8|count[5]     ; clkdiv:inst8|store    ; clk              ; clk         ; 1.000        ; 0.016      ; 6.849      ;
; -4.288  ; blockV2:inst4|outState[5] ; probe:inst|outTens[5] ; clkdiv:inst8|out ; clk         ; 1.000        ; 0.302      ; 5.622      ;
; -4.285  ; blockV2:inst4|outState[5] ; probe:inst|outTens[6] ; clkdiv:inst8|out ; clk         ; 1.000        ; 0.302      ; 5.619      ;
; -4.258  ; blockV2:inst3|outState[5] ; probe:inst|outTens[2] ; clkdiv:inst8|out ; clk         ; 1.000        ; 0.312      ; 5.602      ;
; -4.256  ; blockV2:inst4|outState[6] ; probe:inst|outTens[5] ; clkdiv:inst8|out ; clk         ; 1.000        ; 0.302      ; 5.590      ;
; -4.255  ; blockV2:inst3|outState[5] ; probe:inst|outTens[4] ; clkdiv:inst8|out ; clk         ; 1.000        ; 0.312      ; 5.599      ;
; -4.253  ; blockV2:inst4|outState[6] ; probe:inst|outTens[6] ; clkdiv:inst8|out ; clk         ; 1.000        ; 0.302      ; 5.587      ;
; -4.239  ; blockV2:inst4|outState[5] ; probe:inst|outTens[4] ; clkdiv:inst8|out ; clk         ; 1.000        ; 0.302      ; 5.573      ;
; -4.230  ; blockV2:inst4|outState[5] ; probe:inst|outTens[2] ; clkdiv:inst8|out ; clk         ; 1.000        ; 0.302      ; 5.564      ;
; -4.216  ; blockV2:inst4|outState[7] ; probe:inst|outTens[5] ; clkdiv:inst8|out ; clk         ; 1.000        ; 0.302      ; 5.550      ;
; -4.214  ; blockV2:inst3|outState[7] ; probe:inst|outTens[2] ; clkdiv:inst8|out ; clk         ; 1.000        ; 0.312      ; 5.558      ;
; -4.213  ; blockV2:inst4|outState[7] ; probe:inst|outTens[6] ; clkdiv:inst8|out ; clk         ; 1.000        ; 0.302      ; 5.547      ;
; -4.211  ; blockV2:inst3|outState[7] ; probe:inst|outTens[4] ; clkdiv:inst8|out ; clk         ; 1.000        ; 0.312      ; 5.555      ;
; -4.207  ; blockV2:inst3|outState[5] ; probe:inst|outTens[6] ; clkdiv:inst8|out ; clk         ; 1.000        ; 0.312      ; 5.551      ;
; -4.207  ; blockV2:inst4|outState[6] ; probe:inst|outTens[4] ; clkdiv:inst8|out ; clk         ; 1.000        ; 0.302      ; 5.541      ;
; -4.203  ; blockV2:inst3|outState[5] ; probe:inst|outTens[5] ; clkdiv:inst8|out ; clk         ; 1.000        ; 0.312      ; 5.547      ;
; -4.199  ; blockV2:inst3|outState[6] ; probe:inst|outTens[2] ; clkdiv:inst8|out ; clk         ; 1.000        ; 0.312      ; 5.543      ;
; -4.198  ; blockV2:inst4|outState[6] ; probe:inst|outTens[2] ; clkdiv:inst8|out ; clk         ; 1.000        ; 0.302      ; 5.532      ;
; -4.196  ; blockV2:inst3|outState[6] ; probe:inst|outTens[4] ; clkdiv:inst8|out ; clk         ; 1.000        ; 0.312      ; 5.540      ;
; -4.188  ; blockV2:inst3|outState[5] ; probe:inst|outTens[1] ; clkdiv:inst8|out ; clk         ; 1.000        ; 0.313      ; 5.533      ;
; -4.187  ; blockV2:inst3|outState[5] ; probe:inst|outTens[0] ; clkdiv:inst8|out ; clk         ; 1.000        ; 0.313      ; 5.532      ;
; -4.184  ; blockV2:inst3|outState[5] ; probe:inst|outTens[3] ; clkdiv:inst8|out ; clk         ; 1.000        ; 0.313      ; 5.529      ;
; -4.167  ; blockV2:inst4|outState[7] ; probe:inst|outTens[4] ; clkdiv:inst8|out ; clk         ; 1.000        ; 0.302      ; 5.501      ;
; -4.163  ; blockV2:inst3|outState[7] ; probe:inst|outTens[6] ; clkdiv:inst8|out ; clk         ; 1.000        ; 0.312      ; 5.507      ;
; -4.159  ; blockV2:inst3|outState[7] ; probe:inst|outTens[5] ; clkdiv:inst8|out ; clk         ; 1.000        ; 0.312      ; 5.503      ;
; -4.158  ; blockV2:inst4|outState[7] ; probe:inst|outTens[2] ; clkdiv:inst8|out ; clk         ; 1.000        ; 0.302      ; 5.492      ;
; -4.154  ; blockV2:inst4|outState[5] ; probe:inst|outTens[1] ; clkdiv:inst8|out ; clk         ; 1.000        ; 0.303      ; 5.489      ;
; -4.154  ; blockV2:inst4|outState[5] ; probe:inst|outTens[3] ; clkdiv:inst8|out ; clk         ; 1.000        ; 0.303      ; 5.489      ;
; -4.148  ; blockV2:inst3|outState[6] ; probe:inst|outTens[6] ; clkdiv:inst8|out ; clk         ; 1.000        ; 0.312      ; 5.492      ;
; -4.144  ; blockV2:inst3|outState[6] ; probe:inst|outTens[5] ; clkdiv:inst8|out ; clk         ; 1.000        ; 0.312      ; 5.488      ;
; -4.144  ; blockV2:inst3|outState[7] ; probe:inst|outTens[1] ; clkdiv:inst8|out ; clk         ; 1.000        ; 0.313      ; 5.489      ;
; -4.143  ; blockV2:inst3|outState[7] ; probe:inst|outTens[0] ; clkdiv:inst8|out ; clk         ; 1.000        ; 0.313      ; 5.488      ;
; -4.140  ; blockV2:inst3|outState[7] ; probe:inst|outTens[3] ; clkdiv:inst8|out ; clk         ; 1.000        ; 0.313      ; 5.485      ;
; -4.129  ; blockV2:inst3|outState[5] ; probe:inst|outOnes[4] ; clkdiv:inst8|out ; clk         ; 1.000        ; 0.317      ; 5.478      ;
; -4.129  ; blockV2:inst3|outState[6] ; probe:inst|outTens[1] ; clkdiv:inst8|out ; clk         ; 1.000        ; 0.313      ; 5.474      ;
; -4.128  ; blockV2:inst3|outState[6] ; probe:inst|outTens[0] ; clkdiv:inst8|out ; clk         ; 1.000        ; 0.313      ; 5.473      ;
; -4.126  ; blockV2:inst4|outState[5] ; probe:inst|outOnes[6] ; clkdiv:inst8|out ; clk         ; 1.000        ; 0.307      ; 5.465      ;
; -4.125  ; blockV2:inst3|outState[6] ; probe:inst|outTens[3] ; clkdiv:inst8|out ; clk         ; 1.000        ; 0.313      ; 5.470      ;
; -4.122  ; blockV2:inst4|outState[6] ; probe:inst|outTens[1] ; clkdiv:inst8|out ; clk         ; 1.000        ; 0.303      ; 5.457      ;
; -4.122  ; blockV2:inst4|outState[6] ; probe:inst|outTens[3] ; clkdiv:inst8|out ; clk         ; 1.000        ; 0.303      ; 5.457      ;
; -4.121  ; blockV2:inst4|outState[5] ; probe:inst|outOnes[5] ; clkdiv:inst8|out ; clk         ; 1.000        ; 0.307      ; 5.460      ;
; -4.114  ; blockV2:inst4|outState[5] ; probe:inst|outOnes[1] ; clkdiv:inst8|out ; clk         ; 1.000        ; 0.312      ; 5.458      ;
+---------+---------------------------+-----------------------+------------------+-------------+--------------+------------+------------+


+--------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Setup: 'clkdiv:inst8|out'                                                                                                       ;
+--------+------------------------------+---------------------+------------------+------------------+--------------+------------+------------+
; Slack  ; From Node                    ; To Node             ; Launch Clock     ; Latch Clock      ; Relationship ; Clock Skew ; Data Delay ;
+--------+------------------------------+---------------------+------------------+------------------+--------------+------------+------------+
; -1.481 ; blockV2:inst2|sugarNorth     ; blockV2:inst4|NS[6] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; 0.003      ; 2.516      ;
; -1.454 ; blockV2:inst2|antNorth       ; blockV2:inst4|NS[6] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; 0.003      ; 2.489      ;
; -1.434 ; blockV2:inst2|sugarNorth     ; blockV2:inst4|NS[7] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; 0.003      ; 2.469      ;
; -1.422 ; blockV2:inst2|sugarNorth     ; blockV2:inst4|NS[5] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; -0.007     ; 2.447      ;
; -1.417 ; blockV2:inst7|NS[7]          ; blockV2:inst7|NS[5] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; 0.003      ; 2.452      ;
; -1.407 ; blockV2:inst2|antNorth       ; blockV2:inst4|NS[7] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; 0.003      ; 2.442      ;
; -1.395 ; blockV2:inst2|antNorth       ; blockV2:inst4|NS[5] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; -0.007     ; 2.420      ;
; -1.389 ; blockV2:inst6|antNorth       ; blockV2:inst4|NS[7] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; -0.006     ; 2.415      ;
; -1.352 ; blockV2:inst2|Northreceiving ; blockV2:inst4|NS[5] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; -0.002     ; 2.382      ;
; -1.350 ; blockV2:inst3|NS[0]          ; blockV2:inst3|NS[4] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; 0.006      ; 2.388      ;
; -1.345 ; blockV2:inst2|Southreceiving ; blockV2:inst4|NS[6] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; 0.004      ; 2.381      ;
; -1.342 ; blockV2:inst7|NS[7]          ; blockV2:inst7|NS[4] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; -0.013     ; 2.361      ;
; -1.339 ; blockV2:inst3|antEast        ; blockV2:inst7|NS[1] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; -0.018     ; 2.353      ;
; -1.333 ; blockV2:inst4|antNorth       ; blockV2:inst4|NS[2] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; 0.010      ; 2.375      ;
; -1.331 ; blockV2:inst5|antNorth       ; blockV2:inst3|NS[6] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; 0.012      ; 2.375      ;
; -1.330 ; blockV2:inst2|NS[4]          ; blockV2:inst2|NS[3] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; -0.001     ; 2.361      ;
; -1.325 ; blockV2:inst7|NS[4]          ; blockV2:inst7|NS[1] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; 0.000      ; 2.357      ;
; -1.324 ; blockV2:inst3|NS[7]          ; blockV2:inst3|NS[4] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; 0.006      ; 2.362      ;
; -1.322 ; blockV2:inst6|antNorth       ; blockV2:inst4|NS[5] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; -0.016     ; 2.338      ;
; -1.318 ; blockV2:inst6|antNorth       ; blockV2:inst4|NS[3] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; -0.020     ; 2.330      ;
; -1.317 ; blockV2:inst6|antNorth       ; blockV2:inst4|NS[4] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; -0.015     ; 2.334      ;
; -1.315 ; blockV2:inst6|antNorth       ; blockV2:inst4|NS[6] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; -0.006     ; 2.341      ;
; -1.313 ; blockV2:inst4|NS[6]          ; blockV2:inst4|NS[7] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; 0.000      ; 2.345      ;
; -1.313 ; blockV2:inst7|NS[7]          ; blockV2:inst7|NS[1] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; -0.013     ; 2.332      ;
; -1.311 ; blockV2:inst4|antNorth       ; blockV2:inst4|NS[6] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; 0.010      ; 2.353      ;
; -1.310 ; blockV2:inst7|NS[6]          ; blockV2:inst7|NS[1] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; -0.013     ; 2.329      ;
; -1.307 ; blockV2:inst2|sugarNorth     ; blockV2:inst4|NS[1] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; -0.008     ; 2.331      ;
; -1.306 ; blockV2:inst6|NS[2]          ; blockV2:inst6|NS[4] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; 0.000      ; 2.338      ;
; -1.304 ; blockV2:inst4|NS[4]          ; blockV2:inst4|NS[3] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; -0.005     ; 2.331      ;
; -1.303 ; blockV2:inst6|NS[7]          ; blockV2:inst6|NS[4] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; 0.006      ; 2.341      ;
; -1.301 ; blockV2:inst3|NS[0]          ; blockV2:inst3|NS[3] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; -0.013     ; 2.320      ;
; -1.298 ; blockV2:inst2|Southreceiving ; blockV2:inst4|NS[7] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; 0.004      ; 2.334      ;
; -1.296 ; blockV2:inst3|NS[7]          ; blockV2:inst3|NS[6] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; 0.006      ; 2.334      ;
; -1.293 ; blockV2:inst7|antWest        ; blockV2:inst3|NS[4] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; 0.006      ; 2.331      ;
; -1.292 ; blockV2:inst2|antNorth       ; blockV2:inst4|NS[4] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; -0.006     ; 2.318      ;
; -1.292 ; blockV2:inst6|NS[6]          ; blockV2:inst6|NS[4] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; 0.006      ; 2.330      ;
; -1.286 ; blockV2:inst6|antNorth       ; blockV2:inst6|NS[3] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; -0.008     ; 2.310      ;
; -1.284 ; blockV2:inst6|NS[6]          ; blockV2:inst6|NS[6] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; 0.000      ; 2.316      ;
; -1.284 ; blockV2:inst4|antNorth       ; blockV2:inst4|NS[3] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; -0.004     ; 2.312      ;
; -1.280 ; blockV2:inst2|antNorth       ; blockV2:inst4|NS[1] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; -0.008     ; 2.304      ;
; -1.279 ; blockV2:inst3|antEast        ; blockV2:inst7|NS[2] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; -0.002     ; 2.309      ;
; -1.275 ; blockV2:inst2|NS[4]          ; blockV2:inst2|NS[2] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; 0.002      ; 2.309      ;
; -1.274 ; blockV2:inst5|antNorth       ; blockV2:inst3|NS[7] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; 0.006      ; 2.312      ;
; -1.273 ; blockV2:inst4|NS[7]          ; blockV2:inst4|NS[1] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; -0.011     ; 2.294      ;
; -1.270 ; blockV2:inst6|antNorth       ; blockV2:inst4|NS[0] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; -0.015     ; 2.287      ;
; -1.267 ; blockV2:inst4|antNorth       ; blockV2:inst4|NS[0] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; 0.001      ; 2.300      ;
; -1.265 ; blockV2:inst7|NS[7]          ; blockV2:inst7|NS[6] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; 0.000      ; 2.297      ;
; -1.265 ; blockV2:inst2|sugarNorth     ; blockV2:inst4|NS[3] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; -0.011     ; 2.286      ;
; -1.264 ; blockV2:inst6|antNorth       ; blockV2:inst6|NS[4] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; 0.000      ; 2.296      ;
; -1.264 ; blockV2:inst4|antNorth       ; blockV2:inst4|NS[7] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; 0.010      ; 2.306      ;
; -1.263 ; blockV2:inst4|NS[4]          ; blockV2:inst4|NS[4] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; 0.000      ; 2.295      ;
; -1.262 ; blockV2:inst4|NS[6]          ; blockV2:inst4|NS[5] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; -0.010     ; 2.284      ;
; -1.259 ; blockV2:inst7|NS[7]          ; blockV2:inst7|NS[7] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; 0.000      ; 2.291      ;
; -1.259 ; blockV2:inst6|NS[7]          ; blockV2:inst6|NS[3] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; -0.002     ; 2.289      ;
; -1.258 ; blockV2:inst2|Southreceiving ; blockV2:inst4|NS[2] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; 0.004      ; 2.294      ;
; -1.257 ; blockV2:inst6|NS[4]          ; blockV2:inst6|NS[6] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; -0.006     ; 2.283      ;
; -1.257 ; blockV2:inst4|NS[4]          ; blockV2:inst4|NS[1] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; -0.002     ; 2.287      ;
; -1.255 ; blockV2:inst4|NS[7]          ; blockV2:inst4|NS[5] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; -0.010     ; 2.277      ;
; -1.254 ; blockV2:inst4|NS[7]          ; blockV2:inst4|NS[3] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; -0.014     ; 2.272      ;
; -1.253 ; blockV2:inst2|antNorth       ; blockV2:inst4|NS[3] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; -0.011     ; 2.274      ;
; -1.252 ; blockV2:inst3|NS[7]          ; blockV2:inst3|NS[1] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; 0.009      ; 2.293      ;
; -1.252 ; blockV2:inst4|NS[6]          ; blockV2:inst4|NS[1] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; -0.011     ; 2.273      ;
; -1.251 ; blockV2:inst3|NS[6]          ; blockV2:inst3|NS[4] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; 0.000      ; 2.283      ;
; -1.251 ; blockV2:inst3|NS[0]          ; blockV2:inst3|NS[1] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; 0.009      ; 2.292      ;
; -1.250 ; blockV2:inst7|antWest        ; blockV2:inst7|NS[6] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; 0.008      ; 2.290      ;
; -1.246 ; blockV2:inst4|NS[6]          ; blockV2:inst4|NS[6] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; 0.000      ; 2.278      ;
; -1.243 ; blockV2:inst7|NS[6]          ; blockV2:inst7|NS[5] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; 0.003      ; 2.278      ;
; -1.241 ; blockV2:inst2|sugarNorth     ; blockV2:inst4|NS[4] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; -0.006     ; 2.267      ;
; -1.239 ; blockV2:inst3|NS[7]          ; blockV2:inst3|NS[7] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; 0.000      ; 2.271      ;
; -1.238 ; blockV2:inst7|NS[0]          ; blockV2:inst7|ant   ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; -0.014     ; 2.256      ;
; -1.238 ; blockV2:inst6|NS[7]          ; blockV2:inst6|NS[6] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; 0.000      ; 2.270      ;
; -1.237 ; blockV2:inst2|Southreceiving ; blockV2:inst4|NS[5] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; -0.006     ; 2.263      ;
; -1.234 ; blockV2:inst6|NS[4]          ; blockV2:inst6|NS[4] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; 0.000      ; 2.266      ;
; -1.232 ; blockV2:inst4|NS[6]          ; blockV2:inst4|sugar ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; -0.012     ; 2.252      ;
; -1.230 ; blockV2:inst2|antNorth       ; blockV2:inst6|NS[2] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; 0.009      ; 2.271      ;
; -1.230 ; blockV2:inst3|NS[4]          ; blockV2:inst3|NS[4] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; 0.000      ; 2.262      ;
; -1.229 ; blockV2:inst4|NS[4]          ; blockV2:inst4|NS[7] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; 0.009      ; 2.270      ;
; -1.225 ; blockV2:inst2|Northreceiving ; blockV2:inst4|NS[6] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; 0.008      ; 2.265      ;
; -1.224 ; blockV2:inst6|NS[4]          ; blockV2:inst6|NS[3] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; -0.008     ; 2.248      ;
; -1.223 ; blockV2:inst3|antEast        ; blockV2:inst3|NS[6] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; -0.007     ; 2.248      ;
; -1.223 ; blockV2:inst4|NS[6]          ; blockV2:inst4|NS[4] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; -0.009     ; 2.246      ;
; -1.221 ; blockV2:inst3|NS[6]          ; blockV2:inst3|NS[6] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; 0.000      ; 2.253      ;
; -1.220 ; blockV2:inst2|NS[6]          ; blockV2:inst2|NS[3] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; -0.002     ; 2.250      ;
; -1.219 ; blockV2:inst7|NS[4]          ; blockV2:inst7|NS[6] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; 0.013      ; 2.264      ;
; -1.217 ; blockV2:inst2|sugarNorth     ; blockV2:inst6|NS[7] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; 0.003      ; 2.252      ;
; -1.214 ; blockV2:inst3|NS[1]          ; blockV2:inst3|NS[4] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; -0.003     ; 2.243      ;
; -1.214 ; blockV2:inst3|NS[1]          ; blockV2:inst3|NS[6] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; -0.003     ; 2.243      ;
; -1.214 ; blockV2:inst4|NS[0]          ; blockV2:inst4|NS[3] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; -0.005     ; 2.241      ;
; -1.213 ; blockV2:inst5|antNorth       ; blockV2:inst5|NS[3] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; 0.008      ; 2.253      ;
; -1.213 ; blockV2:inst4|NS[7]          ; blockV2:inst4|NS[7] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; 0.000      ; 2.245      ;
; -1.212 ; blockV2:inst6|antNorth       ; blockV2:inst4|NS[1] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; -0.017     ; 2.227      ;
; -1.212 ; blockV2:inst3|NS[6]          ; blockV2:inst3|NS[7] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; -0.006     ; 2.238      ;
; -1.211 ; blockV2:inst4|NS[6]          ; blockV2:inst4|NS[3] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; -0.014     ; 2.229      ;
; -1.211 ; blockV2:inst2|Southreceiving ; blockV2:inst4|NS[3] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; -0.010     ; 2.233      ;
; -1.210 ; blockV2:inst4|NS[4]          ; blockV2:inst4|NS[6] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; 0.009      ; 2.251      ;
; -1.204 ; blockV2:inst4|NS[6]          ; blockV2:inst4|ant   ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; -0.012     ; 2.224      ;
; -1.203 ; blockV2:inst4|antNorth       ; blockV2:inst4|NS[5] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; 0.000      ; 2.235      ;
; -1.201 ; blockV2:inst3|NS[0]          ; blockV2:inst3|NS[6] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; 0.006      ; 2.239      ;
; -1.201 ; blockV2:inst4|antNorth       ; blockV2:inst4|NS[4] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; 0.001      ; 2.234      ;
; -1.200 ; blockV2:inst2|NS[7]          ; blockV2:inst2|NS[3] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 1.000        ; -0.001     ; 2.231      ;
+--------+------------------------------+---------------------+------------------+------------------+--------------+------------+------------+


+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Setup: 'VGA_CLK'                                                                                                                                      ;
+--------+-----------------------------------------+-----------------------------------------+--------------+-------------+--------------+------------+------------+
; Slack  ; From Node                               ; To Node                                 ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+-----------------------------------------+-----------------------------------------+--------------+-------------+--------------+------------+------------+
; -1.055 ; vga:inst1|vga640x480:display|h_count[6] ; vga:inst1|VGA_R[1]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.013     ; 2.074      ;
; -1.050 ; vga:inst1|vga640x480:display|h_count[7] ; vga:inst1|VGA_R[1]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.013     ; 2.069      ;
; -1.043 ; vga:inst1|vga640x480:display|h_count[6] ; vga:inst1|VGA_G[2]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.013     ; 2.062      ;
; -1.038 ; vga:inst1|vga640x480:display|h_count[7] ; vga:inst1|VGA_G[2]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.013     ; 2.057      ;
; -1.022 ; vga:inst1|vga640x480:display|v_count[2] ; vga:inst1|VGA_B[2]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.006     ; 2.048      ;
; -0.999 ; vga:inst1|vga640x480:display|v_count[4] ; vga:inst1|VGA_B[2]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.006     ; 2.025      ;
; -0.998 ; vga:inst1|vga640x480:display|v_count[2] ; vga:inst1|VGA_G[3]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.006     ; 2.024      ;
; -0.997 ; vga:inst1|vga640x480:display|h_count[3] ; vga:inst1|VGA_B[2]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.013     ; 2.016      ;
; -0.979 ; vga:inst1|vga640x480:display|h_count[4] ; vga:inst1|VGA_R[1]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.013     ; 1.998      ;
; -0.975 ; vga:inst1|vga640x480:display|v_count[4] ; vga:inst1|VGA_G[3]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.006     ; 2.001      ;
; -0.974 ; vga:inst1|vga640x480:display|v_count[2] ; vga:inst1|VGA_R[1]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.006     ; 2.000      ;
; -0.967 ; vga:inst1|vga640x480:display|h_count[4] ; vga:inst1|VGA_G[2]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.013     ; 1.986      ;
; -0.966 ; vga:inst1|vga640x480:display|h_count[3] ; vga:inst1|VGA_G[3]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.013     ; 1.985      ;
; -0.963 ; vga:inst1|vga640x480:display|h_count[6] ; vga:inst1|VGA_B[3]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.013     ; 1.982      ;
; -0.963 ; vga:inst1|vga640x480:display|h_count[6] ; vga:inst1|VGA_B[1]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.013     ; 1.982      ;
; -0.962 ; vga:inst1|vga640x480:display|v_count[2] ; vga:inst1|VGA_G[2]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.006     ; 1.988      ;
; -0.958 ; vga:inst1|vga640x480:display|h_count[7] ; vga:inst1|VGA_B[3]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.013     ; 1.977      ;
; -0.958 ; vga:inst1|vga640x480:display|h_count[7] ; vga:inst1|VGA_B[1]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.013     ; 1.977      ;
; -0.950 ; vga:inst1|vga640x480:display|v_count[4] ; vga:inst1|VGA_R[1]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.006     ; 1.976      ;
; -0.939 ; vga:inst1|vga640x480:display|v_count[2] ; vga:inst1|VGA_R[3]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.006     ; 1.965      ;
; -0.939 ; vga:inst1|vga640x480:display|h_count[5] ; vga:inst1|VGA_R[1]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.013     ; 1.958      ;
; -0.938 ; vga:inst1|vga640x480:display|v_count[4] ; vga:inst1|VGA_G[2]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.006     ; 1.964      ;
; -0.931 ; vga:inst1|vga640x480:display|v_count[6] ; vga:inst1|VGA_B[2]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.001     ; 1.962      ;
; -0.927 ; vga:inst1|vga640x480:display|h_count[5] ; vga:inst1|VGA_G[2]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.013     ; 1.946      ;
; -0.923 ; vga:inst1|vga640x480:display|v_count[3] ; vga:inst1|VGA_B[2]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.006     ; 1.949      ;
; -0.916 ; vga:inst1|vga640x480:display|h_count[2] ; vga:inst1|VGA_B[2]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.013     ; 1.935      ;
; -0.916 ; vga:inst1|vga640x480:display|v_count[4] ; vga:inst1|VGA_R[3]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.006     ; 1.942      ;
; -0.915 ; vga:inst1|vga640x480:display|h_count[7] ; vga:inst1|VGA_B[2]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.013     ; 1.934      ;
; -0.914 ; vga:inst1|vga640x480:display|v_count[0] ; vga:inst1|VGA_B[2]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.006     ; 1.940      ;
; -0.911 ; vga:inst1|vga640x480:display|h_count[3] ; vga:inst1|VGA_R[3]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.013     ; 1.930      ;
; -0.907 ; vga:inst1|vga640x480:display|h_count[3] ; vga:inst1|VGA_R[1]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.013     ; 1.926      ;
; -0.907 ; vga:inst1|vga640x480:display|v_count[6] ; vga:inst1|VGA_G[3]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.001     ; 1.938      ;
; -0.899 ; vga:inst1|vga640x480:display|v_count[5] ; vga:inst1|VGA_B[2]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.006     ; 1.925      ;
; -0.899 ; vga:inst1|vga640x480:display|v_count[3] ; vga:inst1|VGA_G[3]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.006     ; 1.925      ;
; -0.895 ; vga:inst1|vga640x480:display|h_count[3] ; vga:inst1|VGA_G[2]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.013     ; 1.914      ;
; -0.895 ; vga:inst1|vga640x480:display|v_count[1] ; vga:inst1|VGA_B[2]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.006     ; 1.921      ;
; -0.894 ; vga:inst1|vga640x480:display|h_count[5] ; vga:inst1|VGA_B[2]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.013     ; 1.913      ;
; -0.891 ; vga:inst1|vga640x480:display|h_count[6] ; vga:inst1|VGA_B[2]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.013     ; 1.910      ;
; -0.890 ; vga:inst1|vga640x480:display|v_count[0] ; vga:inst1|VGA_G[3]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.006     ; 1.916      ;
; -0.887 ; vga:inst1|vga640x480:display|h_count[4] ; vga:inst1|VGA_B[3]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.013     ; 1.906      ;
; -0.887 ; vga:inst1|vga640x480:display|h_count[4] ; vga:inst1|VGA_B[1]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.013     ; 1.906      ;
; -0.885 ; vga:inst1|vga640x480:display|h_count[2] ; vga:inst1|VGA_G[3]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.013     ; 1.904      ;
; -0.884 ; vga:inst1|vga640x480:display|h_count[7] ; vga:inst1|VGA_G[3]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.013     ; 1.903      ;
; -0.882 ; vga:inst1|vga640x480:display|v_count[2] ; vga:inst1|VGA_B[3]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.006     ; 1.908      ;
; -0.882 ; vga:inst1|vga640x480:display|v_count[2] ; vga:inst1|VGA_B[1]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.006     ; 1.908      ;
; -0.882 ; vga:inst1|vga640x480:display|v_count[6] ; vga:inst1|VGA_R[1]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.001     ; 1.913      ;
; -0.878 ; vga:inst1|vga640x480:display|h_count[2] ; vga:inst1|VGA_R[1]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.013     ; 1.897      ;
; -0.875 ; vga:inst1|vga640x480:display|v_count[5] ; vga:inst1|VGA_G[3]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.006     ; 1.901      ;
; -0.874 ; vga:inst1|vga640x480:display|v_count[3] ; vga:inst1|VGA_R[1]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.006     ; 1.900      ;
; -0.871 ; vga:inst1|vga640x480:display|v_count[1] ; vga:inst1|VGA_G[3]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.006     ; 1.897      ;
; -0.870 ; vga:inst1|vga640x480:display|v_count[6] ; vga:inst1|VGA_G[2]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.001     ; 1.901      ;
; -0.866 ; vga:inst1|vga640x480:display|h_count[2] ; vga:inst1|VGA_G[2]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.013     ; 1.885      ;
; -0.866 ; vga:inst1|vga640x480:display|v_count[0] ; vga:inst1|VGA_R[1]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.006     ; 1.892      ;
; -0.863 ; vga:inst1|vga640x480:display|h_count[5] ; vga:inst1|VGA_G[3]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.013     ; 1.882      ;
; -0.862 ; vga:inst1|vga640x480:display|v_count[3] ; vga:inst1|VGA_G[2]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.006     ; 1.888      ;
; -0.860 ; vga:inst1|vga640x480:display|h_count[6] ; vga:inst1|VGA_G[3]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.013     ; 1.879      ;
; -0.858 ; vga:inst1|vga640x480:display|v_count[4] ; vga:inst1|VGA_B[3]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.006     ; 1.884      ;
; -0.858 ; vga:inst1|vga640x480:display|v_count[4] ; vga:inst1|VGA_B[1]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.006     ; 1.884      ;
; -0.857 ; vga:inst1|vga640x480:display|h_count[1] ; vga:inst1|VGA_B[2]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.013     ; 1.876      ;
; -0.854 ; vga:inst1|vga640x480:display|v_count[0] ; vga:inst1|VGA_G[2]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.006     ; 1.880      ;
; -0.850 ; vga:inst1|vga640x480:display|v_count[5] ; vga:inst1|VGA_R[1]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.006     ; 1.876      ;
; -0.848 ; vga:inst1|vga640x480:display|v_count[6] ; vga:inst1|VGA_R[3]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.001     ; 1.879      ;
; -0.847 ; vga:inst1|vga640x480:display|h_count[5] ; vga:inst1|VGA_B[3]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.013     ; 1.866      ;
; -0.847 ; vga:inst1|vga640x480:display|h_count[5] ; vga:inst1|VGA_B[1]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.013     ; 1.866      ;
; -0.846 ; vga:inst1|vga640x480:display|v_count[1] ; vga:inst1|VGA_R[1]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.006     ; 1.872      ;
; -0.845 ; vga:inst1|vga640x480:display|h_count[3] ; vga:inst1|VGA_B[3]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.013     ; 1.864      ;
; -0.844 ; vga:inst1|vga640x480:display|h_count[3] ; vga:inst1|VGA_B[1]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.013     ; 1.863      ;
; -0.840 ; vga:inst1|vga640x480:display|v_count[3] ; vga:inst1|VGA_R[3]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.006     ; 1.866      ;
; -0.838 ; vga:inst1|vga640x480:display|v_count[5] ; vga:inst1|VGA_G[2]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.006     ; 1.864      ;
; -0.834 ; vga:inst1|vga640x480:display|v_count[1] ; vga:inst1|VGA_G[2]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.006     ; 1.860      ;
; -0.831 ; vga:inst1|vga640x480:display|v_count[0] ; vga:inst1|VGA_R[3]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.006     ; 1.857      ;
; -0.830 ; vga:inst1|vga640x480:display|h_count[2] ; vga:inst1|VGA_R[3]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.013     ; 1.849      ;
; -0.829 ; vga:inst1|vga640x480:display|h_count[7] ; vga:inst1|VGA_R[3]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.013     ; 1.848      ;
; -0.826 ; vga:inst1|vga640x480:display|h_count[1] ; vga:inst1|VGA_G[3]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.013     ; 1.845      ;
; -0.820 ; vga:inst1|vga640x480:display|h_count[8] ; vga:inst1|VGA_R[1]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.013     ; 1.839      ;
; -0.816 ; vga:inst1|vga640x480:display|v_count[0] ; vga:inst1|vga640x480:display|v_count[3] ; VGA_CLK      ; VGA_CLK     ; 1.000        ; 0.000      ; 1.848      ;
; -0.816 ; vga:inst1|vga640x480:display|v_count[5] ; vga:inst1|VGA_R[3]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.006     ; 1.842      ;
; -0.815 ; vga:inst1|vga640x480:display|h_count[4] ; vga:inst1|VGA_B[2]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.013     ; 1.834      ;
; -0.814 ; vga:inst1|vga640x480:display|h_count[1] ; vga:inst1|VGA_R[1]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.013     ; 1.833      ;
; -0.813 ; vga:inst1|vga640x480:display|v_count[0] ; vga:inst1|vga640x480:display|v_count[2] ; VGA_CLK      ; VGA_CLK     ; 1.000        ; 0.000      ; 1.845      ;
; -0.812 ; vga:inst1|vga640x480:display|h_count[0] ; vga:inst1|VGA_B[2]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.013     ; 1.831      ;
; -0.812 ; vga:inst1|vga640x480:display|v_count[1] ; vga:inst1|VGA_R[3]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.006     ; 1.838      ;
; -0.808 ; vga:inst1|vga640x480:display|h_count[8] ; vga:inst1|VGA_G[2]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.013     ; 1.827      ;
; -0.808 ; vga:inst1|vga640x480:display|h_count[5] ; vga:inst1|VGA_R[3]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.013     ; 1.827      ;
; -0.805 ; vga:inst1|vga640x480:display|h_count[6] ; vga:inst1|VGA_R[3]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.013     ; 1.824      ;
; -0.803 ; vga:inst1|vga640x480:display|v_count[7] ; vga:inst1|VGA_B[2]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.006     ; 1.829      ;
; -0.802 ; vga:inst1|vga640x480:display|v_count[3] ; vga:inst1|VGA_B[3]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.006     ; 1.828      ;
; -0.802 ; vga:inst1|vga640x480:display|h_count[1] ; vga:inst1|VGA_G[2]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.013     ; 1.821      ;
; -0.801 ; vga:inst1|vga640x480:display|v_count[3] ; vga:inst1|VGA_B[1]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.006     ; 1.827      ;
; -0.798 ; vga:inst1|vga640x480:display|v_count[1] ; vga:inst1|VGA_B[3]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.006     ; 1.824      ;
; -0.797 ; vga:inst1|vga640x480:display|v_count[1] ; vga:inst1|VGA_B[1]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.006     ; 1.823      ;
; -0.791 ; vga:inst1|vga640x480:display|v_count[1] ; vga:inst1|vga640x480:display|v_count[3] ; VGA_CLK      ; VGA_CLK     ; 1.000        ; 0.000      ; 1.823      ;
; -0.790 ; vga:inst1|vga640x480:display|v_count[6] ; vga:inst1|VGA_B[3]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.001     ; 1.821      ;
; -0.790 ; vga:inst1|vga640x480:display|v_count[6] ; vga:inst1|VGA_B[1]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.001     ; 1.821      ;
; -0.788 ; vga:inst1|vga640x480:display|v_count[1] ; vga:inst1|vga640x480:display|v_count[2] ; VGA_CLK      ; VGA_CLK     ; 1.000        ; 0.000      ; 1.820      ;
; -0.786 ; vga:inst1|vga640x480:display|h_count[2] ; vga:inst1|VGA_B[3]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.013     ; 1.805      ;
; -0.786 ; vga:inst1|vga640x480:display|h_count[2] ; vga:inst1|VGA_B[1]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.013     ; 1.805      ;
; -0.785 ; vga:inst1|vga640x480:display|v_count[7] ; vga:inst1|vga640x480:display|v_count[3] ; VGA_CLK      ; VGA_CLK     ; 1.000        ; 0.000      ; 1.817      ;
; -0.784 ; vga:inst1|vga640x480:display|h_count[8] ; vga:inst1|VGA_B[2]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.013     ; 1.803      ;
; -0.784 ; vga:inst1|vga640x480:display|h_count[4] ; vga:inst1|VGA_G[3]                      ; VGA_CLK      ; VGA_CLK     ; 1.000        ; -0.013     ; 1.803      ;
+--------+-----------------------------------------+-----------------------------------------+--------------+-------------+--------------+------------+------------+


+---------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Hold: 'VGA_CLK'                                                                                                                                          ;
+-------+-----------------------------------------+-----------------------------------------+------------------+-------------+--------------+------------+------------+
; Slack ; From Node                               ; To Node                                 ; Launch Clock     ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+-------+-----------------------------------------+-----------------------------------------+------------------+-------------+--------------+------------+------------+
; 0.215 ; vga:inst1|cnt[15]                       ; vga:inst1|cnt[15]                       ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; matrixEncoder:inst9|NS[0]               ; matrixEncoder:inst9|NS[0]               ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; matrixEncoder:inst9|NS[1]               ; matrixEncoder:inst9|NS[1]               ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; matrixEncoder:inst9|NS[2]               ; matrixEncoder:inst9|NS[2]               ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; matrixEncoder:inst9|storeSel[0]         ; matrixEncoder:inst9|storeSel[0]         ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; vga:inst1|vga640x480:display|v_count[0] ; vga:inst1|vga640x480:display|v_count[0] ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; vga:inst1|vga640x480:display|v_count[2] ; vga:inst1|vga640x480:display|v_count[2] ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; vga:inst1|vga640x480:display|v_count[3] ; vga:inst1|vga640x480:display|v_count[3] ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; vga:inst1|vga640x480:display|v_count[4] ; vga:inst1|vga640x480:display|v_count[4] ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; vga:inst1|vga640x480:display|v_count[5] ; vga:inst1|vga640x480:display|v_count[5] ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; vga:inst1|vga640x480:display|v_count[6] ; vga:inst1|vga640x480:display|v_count[6] ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; vga:inst1|vga640x480:display|v_count[7] ; vga:inst1|vga640x480:display|v_count[7] ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; vga:inst1|vga640x480:display|v_count[8] ; vga:inst1|vga640x480:display|v_count[8] ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; vga:inst1|vga640x480:display|v_count[9] ; vga:inst1|vga640x480:display|v_count[9] ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; vga:inst1|vga640x480:display|v_count[1] ; vga:inst1|vga640x480:display|v_count[1] ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; matrixEncoder:inst9|storeCol[2]         ; matrixEncoder:inst9|storeCol[2]         ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; matrixEncoder:inst9|storeCol[1]         ; matrixEncoder:inst9|storeCol[1]         ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; matrixEncoder:inst9|storeCol[0]         ; matrixEncoder:inst9|storeCol[0]         ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; vga:inst1|VGA_B[3]                      ; vga:inst1|VGA_B[3]                      ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; vga:inst1|VGA_B[2]                      ; vga:inst1|VGA_B[2]                      ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; vga:inst1|VGA_B[1]                      ; vga:inst1|VGA_B[1]                      ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; vga:inst1|VGA_G[3]                      ; vga:inst1|VGA_G[3]                      ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; vga:inst1|VGA_G[2]                      ; vga:inst1|VGA_G[2]                      ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; vga:inst1|VGA_R[3]                      ; vga:inst1|VGA_R[3]                      ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; vga:inst1|VGA_R[1]                      ; vga:inst1|VGA_R[1]                      ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 0.367      ;
; 0.243 ; matrixEncoder:inst9|storeSel[2]         ; matrixEncoder:inst9|outSel[2]           ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 0.395      ;
; 0.249 ; vga:inst1|vga640x480:display|h_count[9] ; vga:inst1|vga640x480:display|h_count[9] ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 0.401      ;
; 0.275 ; matrixEncoder:inst9|NS[2]               ; matrixEncoder:inst9|NS[1]               ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 0.427      ;
; 0.275 ; matrixEncoder:inst9|NS[1]               ; matrixEncoder:inst9|NS[2]               ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 0.427      ;
; 0.277 ; matrixEncoder:inst9|NS[2]               ; matrixEncoder:inst9|storeSel[1]         ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 0.429      ;
; 0.277 ; matrixEncoder:inst9|NS[1]               ; matrixEncoder:inst9|storeSel[0]         ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 0.429      ;
; 0.280 ; matrixEncoder:inst9|NS[2]               ; matrixEncoder:inst9|storeSel[2]         ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 0.432      ;
; 0.280 ; matrixEncoder:inst9|NS[2]               ; matrixEncoder:inst9|NS[0]               ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 0.432      ;
; 0.360 ; vga:inst1|vga640x480:display|h_count[0] ; vga:inst1|vga640x480:display|h_count[0] ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 0.512      ;
; 0.378 ; vga:inst1|vga640x480:display|h_count[8] ; vga:inst1|vga640x480:display|h_count[8] ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 0.530      ;
; 0.381 ; matrixEncoder:inst9|NS[0]               ; matrixEncoder:inst9|storeSel[0]         ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 0.533      ;
; 0.382 ; matrixEncoder:inst9|NS[0]               ; matrixEncoder:inst9|NS[1]               ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 0.534      ;
; 0.382 ; matrixEncoder:inst9|NS[0]               ; matrixEncoder:inst9|NS[2]               ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 0.534      ;
; 0.394 ; matrixEncoder:inst9|NS[1]               ; matrixEncoder:inst9|storeCol[0]         ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 0.546      ;
; 0.395 ; blockV2:inst4|blocktype[0]              ; matrixEncoder:inst9|storeCol[1]         ; clkdiv:inst8|out ; VGA_CLK     ; 0.000        ; 0.348      ; 0.895      ;
; 0.398 ; matrixEncoder:inst9|NS[1]               ; matrixEncoder:inst9|NS[0]               ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 0.550      ;
; 0.400 ; matrixEncoder:inst9|NS[1]               ; matrixEncoder:inst9|storeSel[1]         ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 0.552      ;
; 0.414 ; blockV2:inst4|sugar                     ; matrixEncoder:inst9|storeCol[2]         ; clkdiv:inst8|out ; VGA_CLK     ; 0.000        ; 0.348      ; 0.914      ;
; 0.431 ; blockV2:inst7|sugar                     ; matrixEncoder:inst9|storeCol[0]         ; clkdiv:inst8|out ; VGA_CLK     ; 0.000        ; 0.341      ; 0.924      ;
; 0.432 ; blockV2:inst7|blocktype[0]              ; matrixEncoder:inst9|storeCol[2]         ; clkdiv:inst8|out ; VGA_CLK     ; 0.000        ; 0.330      ; 0.914      ;
; 0.436 ; vga:inst1|vga640x480:display|h_count[2] ; vga:inst1|vga640x480:display|h_count[2] ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 0.588      ;
; 0.443 ; vga:inst1|vga640x480:display|h_count[1] ; vga:inst1|vga640x480:display|h_count[1] ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 0.595      ;
; 0.443 ; vga:inst1|vga640x480:display|h_count[3] ; vga:inst1|vga640x480:display|h_count[3] ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 0.595      ;
; 0.443 ; vga:inst1|vga640x480:display|h_count[7] ; vga:inst1|vga640x480:display|h_count[7] ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 0.595      ;
; 0.446 ; vga:inst1|vga640x480:display|h_count[5] ; vga:inst1|vga640x480:display|h_count[5] ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 0.598      ;
; 0.449 ; vga:inst1|vga640x480:display|h_count[6] ; vga:inst1|vga640x480:display|h_count[6] ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 0.601      ;
; 0.452 ; matrixEncoder:inst9|NS[2]               ; matrixEncoder:inst9|storeSel[0]         ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 0.604      ;
; 0.452 ; blockV2:inst6|ant                       ; matrixEncoder:inst9|storeCol[0]         ; clkdiv:inst8|out ; VGA_CLK     ; 0.000        ; 0.350      ; 0.954      ;
; 0.455 ; vga:inst1|vga640x480:display|h_count[4] ; vga:inst1|vga640x480:display|h_count[4] ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 0.607      ;
; 0.455 ; matrixEncoder:inst9|NS[1]               ; matrixEncoder:inst9|storeCol[2]         ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.001      ; 0.608      ;
; 0.456 ; matrixEncoder:inst9|NS[1]               ; matrixEncoder:inst9|storeCol[1]         ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.001      ; 0.609      ;
; 0.460 ; blockV2:inst6|blocktype[2]              ; matrixEncoder:inst9|storeCol[2]         ; clkdiv:inst8|out ; VGA_CLK     ; 0.000        ; 0.351      ; 0.963      ;
; 0.463 ; blockV2:inst4|ant                       ; matrixEncoder:inst9|storeCol[2]         ; clkdiv:inst8|out ; VGA_CLK     ; 0.000        ; 0.348      ; 0.963      ;
; 0.463 ; blockV2:inst4|ant                       ; matrixEncoder:inst9|storeCol[0]         ; clkdiv:inst8|out ; VGA_CLK     ; 0.000        ; 0.347      ; 0.962      ;
; 0.471 ; blockV2:inst6|blocktype[0]              ; matrixEncoder:inst9|storeCol[2]         ; clkdiv:inst8|out ; VGA_CLK     ; 0.000        ; 0.351      ; 0.974      ;
; 0.473 ; blockV2:inst7|blocktype[2]              ; matrixEncoder:inst9|storeCol[1]         ; clkdiv:inst8|out ; VGA_CLK     ; 0.000        ; 0.330      ; 0.955      ;
; 0.484 ; blockV2:inst3|blocktype[0]              ; matrixEncoder:inst9|storeCol[1]         ; clkdiv:inst8|out ; VGA_CLK     ; 0.000        ; 0.350      ; 0.986      ;
; 0.492 ; blockV2:inst6|ant                       ; matrixEncoder:inst9|storeCol[1]         ; clkdiv:inst8|out ; VGA_CLK     ; 0.000        ; 0.351      ; 0.995      ;
; 0.497 ; blockV2:inst7|sugar                     ; matrixEncoder:inst9|storeCol[1]         ; clkdiv:inst8|out ; VGA_CLK     ; 0.000        ; 0.342      ; 0.991      ;
; 0.497 ; blockV2:inst7|sugar                     ; matrixEncoder:inst9|storeCol[2]         ; clkdiv:inst8|out ; VGA_CLK     ; 0.000        ; 0.342      ; 0.991      ;
; 0.498 ; vga:inst1|vga640x480:display|h_count[0] ; vga:inst1|vga640x480:display|h_count[1] ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 0.650      ;
; 0.498 ; blockV2:inst4|blocktype[0]              ; matrixEncoder:inst9|storeCol[0]         ; clkdiv:inst8|out ; VGA_CLK     ; 0.000        ; 0.347      ; 0.997      ;
; 0.498 ; blockV2:inst7|ant                       ; matrixEncoder:inst9|storeCol[1]         ; clkdiv:inst8|out ; VGA_CLK     ; 0.000        ; 0.342      ; 0.992      ;
; 0.498 ; blockV2:inst7|ant                       ; matrixEncoder:inst9|storeCol[2]         ; clkdiv:inst8|out ; VGA_CLK     ; 0.000        ; 0.342      ; 0.992      ;
; 0.499 ; blockV2:inst6|ant                       ; matrixEncoder:inst9|storeCol[2]         ; clkdiv:inst8|out ; VGA_CLK     ; 0.000        ; 0.351      ; 1.002      ;
; 0.505 ; blockV2:inst6|sugar                     ; matrixEncoder:inst9|storeCol[0]         ; clkdiv:inst8|out ; VGA_CLK     ; 0.000        ; 0.350      ; 1.007      ;
; 0.513 ; matrixEncoder:inst9|NS[2]               ; matrixEncoder:inst9|storeCol[0]         ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 0.665      ;
; 0.518 ; vga:inst1|vga640x480:display|h_count[8] ; vga:inst1|vga640x480:display|h_count[9] ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 0.670      ;
; 0.524 ; blockV2:inst3|blocktype[0]              ; matrixEncoder:inst9|storeCol[0]         ; clkdiv:inst8|out ; VGA_CLK     ; 0.000        ; 0.349      ; 1.025      ;
; 0.530 ; blockV2:inst4|sugar                     ; matrixEncoder:inst9|storeCol[0]         ; clkdiv:inst8|out ; VGA_CLK     ; 0.000        ; 0.347      ; 1.029      ;
; 0.533 ; vga:inst1|vga640x480:display|h_count[0] ; vga:inst1|vga640x480:display|h_count[2] ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 0.685      ;
; 0.540 ; matrixEncoder:inst9|NS[0]               ; matrixEncoder:inst9|storeCol[0]         ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 0.692      ;
; 0.544 ; blockV2:inst4|sugar                     ; matrixEncoder:inst9|storeCol[1]         ; clkdiv:inst8|out ; VGA_CLK     ; 0.000        ; 0.348      ; 1.044      ;
; 0.550 ; blockV2:inst7|blocktype[0]              ; matrixEncoder:inst9|storeCol[1]         ; clkdiv:inst8|out ; VGA_CLK     ; 0.000        ; 0.330      ; 1.032      ;
; 0.551 ; blockV2:inst7|blocktype[2]              ; matrixEncoder:inst9|storeCol[2]         ; clkdiv:inst8|out ; VGA_CLK     ; 0.000        ; 0.330      ; 1.033      ;
; 0.551 ; blockV2:inst6|sugar                     ; matrixEncoder:inst9|storeCol[1]         ; clkdiv:inst8|out ; VGA_CLK     ; 0.000        ; 0.351      ; 1.054      ;
; 0.558 ; blockV2:inst6|sugar                     ; matrixEncoder:inst9|storeCol[2]         ; clkdiv:inst8|out ; VGA_CLK     ; 0.000        ; 0.351      ; 1.061      ;
; 0.561 ; blockV2:inst3|sugar                     ; matrixEncoder:inst9|storeCol[0]         ; clkdiv:inst8|out ; VGA_CLK     ; 0.000        ; 0.335      ; 1.048      ;
; 0.568 ; vga:inst1|vga640x480:display|h_count[0] ; vga:inst1|vga640x480:display|h_count[3] ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 0.720      ;
; 0.569 ; matrixEncoder:inst9|NS[2]               ; matrixEncoder:inst9|storeCol[2]         ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.001      ; 0.722      ;
; 0.569 ; matrixEncoder:inst9|NS[2]               ; matrixEncoder:inst9|storeCol[1]         ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.001      ; 0.722      ;
; 0.570 ; blockV2:inst6|blocktype[0]              ; matrixEncoder:inst9|storeCol[0]         ; clkdiv:inst8|out ; VGA_CLK     ; 0.000        ; 0.350      ; 1.072      ;
; 0.574 ; vga:inst1|vga640x480:display|h_count[2] ; vga:inst1|vga640x480:display|h_count[3] ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 0.726      ;
; 0.581 ; vga:inst1|vga640x480:display|h_count[3] ; vga:inst1|vga640x480:display|h_count[4] ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 0.733      ;
; 0.581 ; vga:inst1|vga640x480:display|h_count[1] ; vga:inst1|vga640x480:display|h_count[2] ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 0.733      ;
; 0.584 ; vga:inst1|vga640x480:display|h_count[5] ; vga:inst1|vga640x480:display|h_count[6] ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 0.736      ;
; 0.587 ; vga:inst1|vga640x480:display|h_count[6] ; vga:inst1|vga640x480:display|h_count[7] ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 0.739      ;
; 0.593 ; blockV2:inst4|ant                       ; matrixEncoder:inst9|storeCol[1]         ; clkdiv:inst8|out ; VGA_CLK     ; 0.000        ; 0.348      ; 1.093      ;
; 0.595 ; vga:inst1|vga640x480:display|h_count[4] ; vga:inst1|vga640x480:display|h_count[5] ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 0.747      ;
; 0.601 ; blockV2:inst3|ant                       ; matrixEncoder:inst9|storeCol[1]         ; clkdiv:inst8|out ; VGA_CLK     ; 0.000        ; 0.336      ; 1.089      ;
; 0.603 ; vga:inst1|vga640x480:display|h_count[0] ; vga:inst1|vga640x480:display|h_count[4] ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 0.755      ;
; 0.606 ; blockV2:inst3|ant                       ; matrixEncoder:inst9|storeCol[0]         ; clkdiv:inst8|out ; VGA_CLK     ; 0.000        ; 0.335      ; 1.093      ;
; 0.609 ; vga:inst1|vga640x480:display|h_count[2] ; vga:inst1|vga640x480:display|h_count[4] ; VGA_CLK          ; VGA_CLK     ; 0.000        ; 0.000      ; 0.761      ;
; 0.613 ; blockV2:inst3|ant                       ; matrixEncoder:inst9|storeCol[2]         ; clkdiv:inst8|out ; VGA_CLK     ; 0.000        ; 0.336      ; 1.101      ;
; 0.614 ; blockV2:inst6|blocktype[2]              ; matrixEncoder:inst9|storeCol[1]         ; clkdiv:inst8|out ; VGA_CLK     ; 0.000        ; 0.351      ; 1.117      ;
+-------+-----------------------------------------+-----------------------------------------+------------------+-------------+--------------+------------+------------+


+-------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Hold: 'clk'                                                                                                        ;
+-------+------------------------+------------------------+--------------+-------------+--------------+------------+------------+
; Slack ; From Node              ; To Node                ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+-------+------------------------+------------------------+--------------+-------------+--------------+------------+------------+
; 0.215 ; clkdiv:inst8|count[0]  ; clkdiv:inst8|count[0]  ; clk          ; clk         ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; clkdiv:inst8|store     ; clkdiv:inst8|store     ; clk          ; clk         ; 0.000        ; 0.000      ; 0.367      ;
; 0.355 ; clkdiv:inst8|count[16] ; clkdiv:inst8|count[16] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.507      ;
; 0.357 ; clkdiv:inst8|count[32] ; clkdiv:inst8|count[32] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.509      ;
; 0.357 ; clkdiv:inst8|count[33] ; clkdiv:inst8|count[33] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.509      ;
; 0.357 ; clkdiv:inst8|count[41] ; clkdiv:inst8|count[41] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.509      ;
; 0.358 ; clkdiv:inst8|count[34] ; clkdiv:inst8|count[34] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.510      ;
; 0.358 ; clkdiv:inst8|count[36] ; clkdiv:inst8|count[36] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.510      ;
; 0.359 ; clkdiv:inst8|count[17] ; clkdiv:inst8|count[17] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.511      ;
; 0.360 ; clkdiv:inst8|count[2]  ; clkdiv:inst8|count[2]  ; clk          ; clk         ; 0.000        ; 0.000      ; 0.512      ;
; 0.360 ; clkdiv:inst8|count[9]  ; clkdiv:inst8|count[9]  ; clk          ; clk         ; 0.000        ; 0.000      ; 0.512      ;
; 0.360 ; clkdiv:inst8|count[11] ; clkdiv:inst8|count[11] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.512      ;
; 0.360 ; clkdiv:inst8|count[18] ; clkdiv:inst8|count[18] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.512      ;
; 0.360 ; clkdiv:inst8|count[25] ; clkdiv:inst8|count[25] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.512      ;
; 0.360 ; clkdiv:inst8|count[27] ; clkdiv:inst8|count[27] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.512      ;
; 0.361 ; clkdiv:inst8|count[4]  ; clkdiv:inst8|count[4]  ; clk          ; clk         ; 0.000        ; 0.000      ; 0.513      ;
; 0.361 ; clkdiv:inst8|count[7]  ; clkdiv:inst8|count[7]  ; clk          ; clk         ; 0.000        ; 0.000      ; 0.513      ;
; 0.361 ; clkdiv:inst8|count[13] ; clkdiv:inst8|count[13] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.513      ;
; 0.361 ; clkdiv:inst8|count[14] ; clkdiv:inst8|count[14] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.513      ;
; 0.361 ; clkdiv:inst8|count[15] ; clkdiv:inst8|count[15] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.513      ;
; 0.361 ; clkdiv:inst8|count[20] ; clkdiv:inst8|count[20] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.513      ;
; 0.361 ; clkdiv:inst8|count[23] ; clkdiv:inst8|count[23] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.513      ;
; 0.361 ; clkdiv:inst8|count[29] ; clkdiv:inst8|count[29] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.513      ;
; 0.361 ; clkdiv:inst8|count[30] ; clkdiv:inst8|count[30] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.513      ;
; 0.361 ; clkdiv:inst8|count[31] ; clkdiv:inst8|count[31] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.513      ;
; 0.362 ; clkdiv:inst8|count[1]  ; clkdiv:inst8|count[1]  ; clk          ; clk         ; 0.000        ; 0.000      ; 0.514      ;
; 0.371 ; clkdiv:inst8|count[3]  ; clkdiv:inst8|count[3]  ; clk          ; clk         ; 0.000        ; 0.000      ; 0.523      ;
; 0.371 ; clkdiv:inst8|count[8]  ; clkdiv:inst8|count[8]  ; clk          ; clk         ; 0.000        ; 0.000      ; 0.523      ;
; 0.371 ; clkdiv:inst8|count[10] ; clkdiv:inst8|count[10] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.523      ;
; 0.371 ; clkdiv:inst8|count[19] ; clkdiv:inst8|count[19] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.523      ;
; 0.371 ; clkdiv:inst8|count[24] ; clkdiv:inst8|count[24] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.523      ;
; 0.371 ; clkdiv:inst8|count[26] ; clkdiv:inst8|count[26] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.523      ;
; 0.371 ; clkdiv:inst8|count[35] ; clkdiv:inst8|count[35] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.523      ;
; 0.372 ; clkdiv:inst8|count[5]  ; clkdiv:inst8|count[5]  ; clk          ; clk         ; 0.000        ; 0.000      ; 0.524      ;
; 0.372 ; clkdiv:inst8|count[6]  ; clkdiv:inst8|count[6]  ; clk          ; clk         ; 0.000        ; 0.000      ; 0.524      ;
; 0.372 ; clkdiv:inst8|count[12] ; clkdiv:inst8|count[12] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.524      ;
; 0.372 ; clkdiv:inst8|count[21] ; clkdiv:inst8|count[21] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.524      ;
; 0.372 ; clkdiv:inst8|count[22] ; clkdiv:inst8|count[22] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.524      ;
; 0.372 ; clkdiv:inst8|count[28] ; clkdiv:inst8|count[28] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.524      ;
; 0.372 ; clkdiv:inst8|count[37] ; clkdiv:inst8|count[37] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.524      ;
; 0.372 ; clkdiv:inst8|count[38] ; clkdiv:inst8|count[38] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.524      ;
; 0.448 ; clkdiv:inst8|count[0]  ; clkdiv:inst8|count[1]  ; clk          ; clk         ; 0.000        ; 0.000      ; 0.600      ;
; 0.493 ; clkdiv:inst8|count[16] ; clkdiv:inst8|count[17] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.645      ;
; 0.495 ; clkdiv:inst8|count[32] ; clkdiv:inst8|count[33] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.647      ;
; 0.495 ; clkdiv:inst8|count[33] ; clkdiv:inst8|count[34] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.647      ;
; 0.496 ; clkdiv:inst8|count[34] ; clkdiv:inst8|count[35] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.648      ;
; 0.496 ; clkdiv:inst8|count[36] ; clkdiv:inst8|count[37] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.648      ;
; 0.497 ; clkdiv:inst8|count[1]  ; clkdiv:inst8|count[2]  ; clk          ; clk         ; 0.000        ; 0.000      ; 0.649      ;
; 0.497 ; clkdiv:inst8|count[17] ; clkdiv:inst8|count[18] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.649      ;
; 0.498 ; clkdiv:inst8|count[2]  ; clkdiv:inst8|count[3]  ; clk          ; clk         ; 0.000        ; 0.000      ; 0.650      ;
; 0.498 ; clkdiv:inst8|count[9]  ; clkdiv:inst8|count[10] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.650      ;
; 0.498 ; clkdiv:inst8|count[18] ; clkdiv:inst8|count[19] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.650      ;
; 0.498 ; clkdiv:inst8|count[25] ; clkdiv:inst8|count[26] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.650      ;
; 0.498 ; clkdiv:inst8|count[11] ; clkdiv:inst8|count[12] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.650      ;
; 0.498 ; clkdiv:inst8|count[27] ; clkdiv:inst8|count[28] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.650      ;
; 0.499 ; clkdiv:inst8|count[13] ; clkdiv:inst8|count[14] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.651      ;
; 0.499 ; clkdiv:inst8|count[14] ; clkdiv:inst8|count[15] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.651      ;
; 0.499 ; clkdiv:inst8|count[29] ; clkdiv:inst8|count[30] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.651      ;
; 0.499 ; clkdiv:inst8|count[30] ; clkdiv:inst8|count[31] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.651      ;
; 0.499 ; clkdiv:inst8|count[4]  ; clkdiv:inst8|count[5]  ; clk          ; clk         ; 0.000        ; 0.000      ; 0.651      ;
; 0.499 ; clkdiv:inst8|count[20] ; clkdiv:inst8|count[21] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.651      ;
; 0.511 ; clkdiv:inst8|count[35] ; clkdiv:inst8|count[36] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.663      ;
; 0.511 ; clkdiv:inst8|count[8]  ; clkdiv:inst8|count[9]  ; clk          ; clk         ; 0.000        ; 0.000      ; 0.663      ;
; 0.511 ; clkdiv:inst8|count[10] ; clkdiv:inst8|count[11] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.663      ;
; 0.511 ; clkdiv:inst8|count[24] ; clkdiv:inst8|count[25] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.663      ;
; 0.511 ; clkdiv:inst8|count[26] ; clkdiv:inst8|count[27] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.663      ;
; 0.511 ; clkdiv:inst8|count[3]  ; clkdiv:inst8|count[4]  ; clk          ; clk         ; 0.000        ; 0.000      ; 0.663      ;
; 0.511 ; clkdiv:inst8|count[19] ; clkdiv:inst8|count[20] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.663      ;
; 0.512 ; clkdiv:inst8|count[6]  ; clkdiv:inst8|count[7]  ; clk          ; clk         ; 0.000        ; 0.000      ; 0.664      ;
; 0.512 ; clkdiv:inst8|count[12] ; clkdiv:inst8|count[13] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.664      ;
; 0.512 ; clkdiv:inst8|count[22] ; clkdiv:inst8|count[23] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.664      ;
; 0.512 ; clkdiv:inst8|count[28] ; clkdiv:inst8|count[29] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.664      ;
; 0.512 ; clkdiv:inst8|count[5]  ; clkdiv:inst8|count[6]  ; clk          ; clk         ; 0.000        ; 0.000      ; 0.664      ;
; 0.512 ; clkdiv:inst8|count[21] ; clkdiv:inst8|count[22] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.664      ;
; 0.512 ; clkdiv:inst8|count[37] ; clkdiv:inst8|count[38] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.664      ;
; 0.528 ; clkdiv:inst8|count[16] ; clkdiv:inst8|count[18] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.680      ;
; 0.530 ; clkdiv:inst8|count[32] ; clkdiv:inst8|count[34] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.682      ;
; 0.530 ; clkdiv:inst8|count[33] ; clkdiv:inst8|count[35] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.682      ;
; 0.531 ; clkdiv:inst8|count[34] ; clkdiv:inst8|count[36] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.683      ;
; 0.531 ; clkdiv:inst8|count[36] ; clkdiv:inst8|count[38] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.683      ;
; 0.532 ; clkdiv:inst8|count[1]  ; clkdiv:inst8|count[3]  ; clk          ; clk         ; 0.000        ; 0.000      ; 0.684      ;
; 0.532 ; clkdiv:inst8|count[17] ; clkdiv:inst8|count[19] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.684      ;
; 0.533 ; clkdiv:inst8|count[9]  ; clkdiv:inst8|count[11] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.685      ;
; 0.533 ; clkdiv:inst8|count[25] ; clkdiv:inst8|count[27] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.685      ;
; 0.533 ; clkdiv:inst8|count[2]  ; clkdiv:inst8|count[4]  ; clk          ; clk         ; 0.000        ; 0.000      ; 0.685      ;
; 0.533 ; clkdiv:inst8|count[18] ; clkdiv:inst8|count[20] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.685      ;
; 0.533 ; clkdiv:inst8|count[11] ; clkdiv:inst8|count[13] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.685      ;
; 0.533 ; clkdiv:inst8|count[27] ; clkdiv:inst8|count[29] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.685      ;
; 0.534 ; clkdiv:inst8|count[13] ; clkdiv:inst8|count[15] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.686      ;
; 0.534 ; clkdiv:inst8|count[29] ; clkdiv:inst8|count[31] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.686      ;
; 0.534 ; clkdiv:inst8|count[4]  ; clkdiv:inst8|count[6]  ; clk          ; clk         ; 0.000        ; 0.000      ; 0.686      ;
; 0.534 ; clkdiv:inst8|count[20] ; clkdiv:inst8|count[22] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.686      ;
; 0.540 ; clkdiv:inst8|count[15] ; clkdiv:inst8|count[16] ; clk          ; clk         ; 0.000        ; 0.006      ; 0.698      ;
; 0.541 ; clkdiv:inst8|count[31] ; clkdiv:inst8|count[32] ; clk          ; clk         ; 0.000        ; 0.005      ; 0.698      ;
; 0.546 ; clkdiv:inst8|count[35] ; clkdiv:inst8|count[37] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.698      ;
; 0.546 ; clkdiv:inst8|count[8]  ; clkdiv:inst8|count[10] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.698      ;
; 0.546 ; clkdiv:inst8|count[24] ; clkdiv:inst8|count[26] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.698      ;
; 0.546 ; clkdiv:inst8|count[10] ; clkdiv:inst8|count[12] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.698      ;
; 0.546 ; clkdiv:inst8|count[26] ; clkdiv:inst8|count[28] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.698      ;
; 0.546 ; clkdiv:inst8|count[3]  ; clkdiv:inst8|count[5]  ; clk          ; clk         ; 0.000        ; 0.000      ; 0.698      ;
+-------+------------------------+------------------------+--------------+-------------+--------------+------------+------------+


+---------------------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Hold: 'clkdiv:inst8|out'                                                                                                                     ;
+-------+------------------------------+-----------------------------------+------------------+------------------+--------------+------------+------------+
; Slack ; From Node                    ; To Node                           ; Launch Clock     ; Latch Clock      ; Relationship ; Clock Skew ; Data Delay ;
+-------+------------------------------+-----------------------------------+------------------+------------------+--------------+------------+------------+
; 0.215 ; blockV2:inst3|blocktype[0]   ; blockV2:inst3|blocktype[0]        ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; blockV2:inst7|blocktype[2]   ; blockV2:inst7|blocktype[2]        ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; blockV2:inst7|outSouthVerify ; blockV2:inst7|outSouthVerify      ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; blockV2:inst5|sendingNorth   ; blockV2:inst5|sendingNorth        ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; blockV2:inst5|outNorthVerify ; blockV2:inst5|outNorthVerify      ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; blockV2:inst2|sugar          ; blockV2:inst2|sugar               ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; blockV2:inst3|sendingSouth   ; blockV2:inst3|sendingSouth        ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; blockV2:inst3|outSouthVerify ; blockV2:inst3|outSouthVerify      ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; blockV2:inst2|sendingSouth   ; blockV2:inst2|sendingSouth        ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; blockV2:inst2|outSouthVerify ; blockV2:inst2|outSouthVerify      ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; blockV2:inst5|sendingSouth   ; blockV2:inst5|sendingSouth        ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; blockV2:inst4|NS[5]          ; blockV2:inst4|NS[5]               ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; blockV2:inst4|sendingNorth   ; blockV2:inst4|sendingNorth        ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; blockV2:inst4|outNorthVerify ; blockV2:inst4|outNorthVerify      ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; blockV2:inst4|blocktype[0]   ; blockV2:inst4|blocktype[0]        ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; blockV2:inst5|blocktype[0]   ; blockV2:inst5|blocktype[0]        ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; blockV2:inst2|NS[3]          ; blockV2:inst2|NS[3]               ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; blockV2:inst2|blocktype[0]   ; blockV2:inst2|blocktype[0]        ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; blockV2:inst2|outNorthVerify ; blockV2:inst2|outNorthVerify      ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; blockV2:inst3|outNorthVerify ; blockV2:inst3|outNorthVerify      ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; blockV2:inst7|outWestVerify  ; blockV2:inst7|outWestVerify       ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; blockV2:inst5|outSouthVerify ; blockV2:inst5|outSouthVerify      ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; blockV2:inst7|sendingWest    ; blockV2:inst7|sendingWest         ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; blockV2:inst7|sendingSouth   ; blockV2:inst7|sendingSouth        ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; blockV2:inst6|sendingWest    ; blockV2:inst6|sendingWest         ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; blockV2:inst6|outWestVerify  ; blockV2:inst6|outWestVerify       ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; blockV2:inst3|NS[5]          ; blockV2:inst3|NS[5]               ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; blockV2:inst3|sugar          ; blockV2:inst3|sugar               ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; blockV2:inst3|outEastVerify  ; blockV2:inst3|outEastVerify       ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; blockV2:inst3|sendingEast    ; blockV2:inst3|sendingEast         ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; blockV2:inst6|blocktype[2]   ; blockV2:inst6|blocktype[2]        ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; blockV2:inst6|NS[3]          ; blockV2:inst6|NS[3]               ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; blockV2:inst4|outEastVerify  ; blockV2:inst4|outEastVerify       ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; blockV2:inst6|outNorthVerify ; blockV2:inst6|outNorthVerify      ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; blockV2:inst6|sendingNorth   ; blockV2:inst6|sendingNorth        ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; blockV2:inst7|NS[5]          ; blockV2:inst7|NS[5]               ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; blockV2:inst6|sugar          ; blockV2:inst6|sugar               ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; blockV2:inst2|sendingNorth   ; blockV2:inst2|sendingNorth        ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; blockV2:inst6|blocktype[0]   ; blockV2:inst6|blocktype[0]        ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; blockV2:inst7|ant            ; blockV2:inst7|ant                 ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; blockV2:inst4|sendingEast    ; blockV2:inst4|sendingEast         ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; blockV2:inst7|blocktype[0]   ; blockV2:inst7|blocktype[0]        ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; blockV2:inst3|sendingNorth   ; blockV2:inst3|sendingNorth        ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; blockV2:inst4|sugar          ; blockV2:inst4|sugar               ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; blockV2:inst5|NS[3]          ; blockV2:inst5|NS[3]               ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; blockV2:inst5|sugar          ; blockV2:inst5|sugar               ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; blockV2:inst5|receivingNorth ; blockV2:inst5|receivingNorth      ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; blockV2:inst2|ant            ; blockV2:inst2|ant                 ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; blockV2:inst5|ant            ; blockV2:inst5|ant                 ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; blockV2:inst2|receivingNorth ; blockV2:inst2|receivingNorth      ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; blockV2:inst3|ant            ; blockV2:inst3|ant                 ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; blockV2:inst4|ant            ; blockV2:inst4|ant                 ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; blockV2:inst6|ant            ; blockV2:inst6|ant                 ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.367      ;
; 0.239 ; blockV2:inst5|outSouth[0]    ; blockV2:inst4|Northsending        ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.391      ;
; 0.244 ; blockV2:inst4|blocktype[0]   ; blockV2:inst4|outEast[6]          ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.396      ;
; 0.244 ; blockV2:inst4|sendingSouth   ; blockV2:inst4|outSouth[0]         ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.396      ;
; 0.245 ; blockV2:inst2|sendingSouth   ; blockV2:inst2|outSouth[0]         ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.397      ;
; 0.248 ; blockV2:inst4|receivingEast  ; blockV2:inst4|outEast[1]          ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.400      ;
; 0.248 ; blockV2:inst2|ant            ; blockV2:inst2|outSouth[5]         ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.400      ;
; 0.321 ; blockV2:inst4|outEast[4]     ; blockV2:inst7|sugarWest           ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.473      ;
; 0.329 ; blockV2:inst6|sendingWest    ; blockV2:inst6|outWest[0]          ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.481      ;
; 0.330 ; blockV2:inst3|receivingEast  ; blockV2:inst3|receivingEast       ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.482      ;
; 0.332 ; blockV2:inst7|receivingSouth ; blockV2:inst7|receivingSouth      ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.484      ;
; 0.334 ; blockV2:inst6|receivingNorth ; blockV2:inst6|outNorth[1]         ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.486      ;
; 0.336 ; blockV2:inst6|receivingNorth ; blockV2:inst6|receivingNorth      ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.488      ;
; 0.363 ; blockV2:inst7|NS[5]          ; blockV2:inst7|NS[3]               ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.515      ;
; 0.374 ; blockV2:inst5|NS[3]          ; blockV2:inst5|NS[4]               ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.526      ;
; 0.408 ; blockV2:inst4|sendingSouth   ; blockV2:inst4|sendingSouth        ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.560      ;
; 0.409 ; blockV2:inst4|outEast[5]     ; blockV2:inst7|antWest             ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.561      ;
; 0.410 ; blockV2:inst5|outSouth[4]    ; blockV2:inst4|sugarNorth          ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.562      ;
; 0.413 ; blockV2:inst4|receivingEast  ; blockV2:inst4|receivingEast       ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.565      ;
; 0.413 ; blockV2:inst2|receivingNorth ; blockV2:inst2|outNorth[1]         ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; -0.004     ; 0.561      ;
; 0.424 ; blockV2:inst3|sendingEast    ; blockV2:inst3|outEast[0]          ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; -0.002     ; 0.574      ;
; 0.448 ; blockV2:inst6|blocktype[0]   ; blockV2:inst6|outWest[6]          ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.001      ; 0.601      ;
; 0.452 ; blockV2:inst7|receivingSouth ; blockV2:inst7|outSouth[1]         ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; -0.006     ; 0.598      ;
; 0.456 ; blockV2:inst6|ant            ; blockV2:inst6|outWest[5]          ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.014      ; 0.622      ;
; 0.464 ; blockV2:inst4|NS[3]          ; blockV2:inst4|sendingEast         ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.002      ; 0.618      ;
; 0.470 ; blockV2:inst4|NS[1]          ; blockV2:inst4|outNorthVerify      ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; -0.001     ; 0.621      ;
; 0.474 ; blockV2:inst3|NS[5]          ; blockV2:inst3|sendingSouth        ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.018      ; 0.644      ;
; 0.480 ; blockV2:inst6|blocktype[2]   ; blockV2:inst6|outWest[8]          ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.001      ; 0.633      ;
; 0.492 ; blockV2:inst7|sendingWest    ; blockV2:inst7|outWest[0]          ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; -0.014     ; 0.630      ;
; 0.505 ; blockV2:inst3|NS[5]          ; blockV2:inst3|NS[3]               ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.657      ;
; 0.506 ; blockV2:inst5|outSouth[6]    ; blockV2:inst4|inNorthBlocktype[0] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.658      ;
; 0.523 ; blockV2:inst7|outWest[8]     ; blockV2:inst6|inNorthBlocktype[2] ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.012      ; 0.687      ;
; 0.524 ; blockV2:inst3|outEast[0]     ; blockV2:inst6|Westsending         ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.007      ; 0.683      ;
; 0.525 ; blockV2:inst3|receivingEast  ; blockV2:inst3|outEast[1]          ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.001      ; 0.678      ;
; 0.527 ; blockV2:inst4|sendingEast    ; blockV2:inst4|outEast[0]          ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; -0.002     ; 0.677      ;
; 0.528 ; blockV2:inst7|outWest[5]     ; blockV2:inst6|antNorth            ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.007      ; 0.687      ;
; 0.535 ; blockV2:inst4|outEast[0]     ; blockV2:inst7|Westsending         ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.012      ; 0.699      ;
; 0.535 ; blockV2:inst5|outSouth[5]    ; blockV2:inst4|antNorth            ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.687      ;
; 0.537 ; blockV2:inst4|outNorthVerify ; blockV2:inst4|outNorth[2]         ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.008      ; 0.697      ;
; 0.544 ; blockV2:inst4|NS[0]          ; blockV2:inst4|outState[0]         ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.696      ;
; 0.546 ; blockV2:inst3|NS[2]          ; blockV2:inst3|NS[2]               ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.698      ;
; 0.548 ; blockV2:inst7|NS[3]          ; blockV2:inst7|NS[3]               ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.700      ;
; 0.553 ; blockV2:inst7|NS[3]          ; blockV2:inst7|NS[5]               ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.705      ;
; 0.555 ; blockV2:inst4|outEast[1]     ; blockV2:inst3|Northreceiving      ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.017      ; 0.724      ;
; 0.560 ; blockV2:inst7|ant            ; blockV2:inst7|outWest[5]          ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.005      ; 0.717      ;
; 0.560 ; blockV2:inst2|NS[3]          ; blockV2:inst2|NS[5]               ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.002      ; 0.714      ;
; 0.561 ; blockV2:inst2|NS[3]          ; blockV2:inst2|NS[6]               ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.002      ; 0.715      ;
; 0.563 ; blockV2:inst7|NS[5]          ; blockV2:inst7|NS[2]               ; clkdiv:inst8|out ; clkdiv:inst8|out ; 0.000        ; 0.000      ; 0.715      ;
+-------+------------------------------+-----------------------------------+------------------+------------------+--------------+------------+------------+


+---------------------------------------------------------------------------------------------------------+
; Fast Model Minimum Pulse Width: 'clk'                                                                   ;
+--------+--------------+----------------+------------------+-------+------------+------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock ; Clock Edge ; Target                 ;
+--------+--------------+----------------+------------------+-------+------------+------------------------+
; -1.380 ; 1.000        ; 2.380          ; Port Rate        ; clk   ; Rise       ; clk                    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; clkdiv:inst8|count[0]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; clkdiv:inst8|count[0]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; clkdiv:inst8|count[10] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; clkdiv:inst8|count[10] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; clkdiv:inst8|count[11] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; clkdiv:inst8|count[11] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; clkdiv:inst8|count[12] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; clkdiv:inst8|count[12] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; clkdiv:inst8|count[13] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; clkdiv:inst8|count[13] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; clkdiv:inst8|count[14] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; clkdiv:inst8|count[14] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; clkdiv:inst8|count[15] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; clkdiv:inst8|count[15] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; clkdiv:inst8|count[16] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; clkdiv:inst8|count[16] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; clkdiv:inst8|count[17] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; clkdiv:inst8|count[17] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; clkdiv:inst8|count[18] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; clkdiv:inst8|count[18] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; clkdiv:inst8|count[19] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; clkdiv:inst8|count[19] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; clkdiv:inst8|count[1]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; clkdiv:inst8|count[1]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; clkdiv:inst8|count[20] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; clkdiv:inst8|count[20] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; clkdiv:inst8|count[21] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; clkdiv:inst8|count[21] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; clkdiv:inst8|count[22] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; clkdiv:inst8|count[22] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; clkdiv:inst8|count[23] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; clkdiv:inst8|count[23] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; clkdiv:inst8|count[24] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; clkdiv:inst8|count[24] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; clkdiv:inst8|count[25] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; clkdiv:inst8|count[25] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; clkdiv:inst8|count[26] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; clkdiv:inst8|count[26] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; clkdiv:inst8|count[27] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; clkdiv:inst8|count[27] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; clkdiv:inst8|count[28] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; clkdiv:inst8|count[28] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; clkdiv:inst8|count[29] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; clkdiv:inst8|count[29] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; clkdiv:inst8|count[2]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; clkdiv:inst8|count[2]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; clkdiv:inst8|count[30] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; clkdiv:inst8|count[30] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; clkdiv:inst8|count[31] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; clkdiv:inst8|count[31] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; clkdiv:inst8|count[32] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; clkdiv:inst8|count[32] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; clkdiv:inst8|count[33] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; clkdiv:inst8|count[33] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; clkdiv:inst8|count[34] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; clkdiv:inst8|count[34] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; clkdiv:inst8|count[35] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; clkdiv:inst8|count[35] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; clkdiv:inst8|count[36] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; clkdiv:inst8|count[36] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; clkdiv:inst8|count[37] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; clkdiv:inst8|count[37] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; clkdiv:inst8|count[38] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; clkdiv:inst8|count[38] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; clkdiv:inst8|count[39] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; clkdiv:inst8|count[39] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; clkdiv:inst8|count[3]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; clkdiv:inst8|count[3]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; clkdiv:inst8|count[40] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; clkdiv:inst8|count[40] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; clkdiv:inst8|count[41] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; clkdiv:inst8|count[41] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; clkdiv:inst8|count[42] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; clkdiv:inst8|count[42] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; clkdiv:inst8|count[43] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; clkdiv:inst8|count[43] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; clkdiv:inst8|count[44] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; clkdiv:inst8|count[44] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; clkdiv:inst8|count[45] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; clkdiv:inst8|count[45] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; clkdiv:inst8|count[46] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; clkdiv:inst8|count[46] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; clkdiv:inst8|count[47] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; clkdiv:inst8|count[47] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; clkdiv:inst8|count[48] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; clkdiv:inst8|count[48] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; clkdiv:inst8|count[49] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; clkdiv:inst8|count[49] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; clkdiv:inst8|count[4]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; clkdiv:inst8|count[4]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; clkdiv:inst8|count[50] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; clkdiv:inst8|count[50] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; clkdiv:inst8|count[51] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; clkdiv:inst8|count[51] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; clkdiv:inst8|count[52] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; clkdiv:inst8|count[52] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; clkdiv:inst8|count[53] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; clkdiv:inst8|count[53] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; clkdiv:inst8|count[54] ;
+--------+--------------+----------------+------------------+-------+------------+------------------------+


+----------------------------------------------------------------------------------------------------------------------------+
; Fast Model Minimum Pulse Width: 'VGA_CLK'                                                                                  ;
+--------+--------------+----------------+------------------+---------+------------+-----------------------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock   ; Clock Edge ; Target                                  ;
+--------+--------------+----------------+------------------+---------+------------+-----------------------------------------+
; -1.380 ; 1.000        ; 2.380          ; Port Rate        ; VGA_CLK ; Rise       ; VGA_CLK                                 ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; VGA_CLK ; Rise       ; matrixEncoder:inst9|NS[0]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; VGA_CLK ; Rise       ; matrixEncoder:inst9|NS[0]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; VGA_CLK ; Rise       ; matrixEncoder:inst9|NS[1]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; VGA_CLK ; Rise       ; matrixEncoder:inst9|NS[1]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; VGA_CLK ; Rise       ; matrixEncoder:inst9|NS[2]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; VGA_CLK ; Rise       ; matrixEncoder:inst9|NS[2]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; VGA_CLK ; Rise       ; matrixEncoder:inst9|outCol[0]           ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; VGA_CLK ; Rise       ; matrixEncoder:inst9|outCol[0]           ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; VGA_CLK ; Rise       ; matrixEncoder:inst9|outCol[1]           ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; VGA_CLK ; Rise       ; matrixEncoder:inst9|outCol[1]           ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; VGA_CLK ; Rise       ; matrixEncoder:inst9|outCol[2]           ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; VGA_CLK ; Rise       ; matrixEncoder:inst9|outCol[2]           ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; VGA_CLK ; Rise       ; matrixEncoder:inst9|outSel[0]           ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; VGA_CLK ; Rise       ; matrixEncoder:inst9|outSel[0]           ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; VGA_CLK ; Rise       ; matrixEncoder:inst9|outSel[1]           ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; VGA_CLK ; Rise       ; matrixEncoder:inst9|outSel[1]           ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; VGA_CLK ; Rise       ; matrixEncoder:inst9|outSel[2]           ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; VGA_CLK ; Rise       ; matrixEncoder:inst9|outSel[2]           ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; VGA_CLK ; Rise       ; matrixEncoder:inst9|storeCol[0]         ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; VGA_CLK ; Rise       ; matrixEncoder:inst9|storeCol[0]         ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; VGA_CLK ; Rise       ; matrixEncoder:inst9|storeCol[1]         ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; VGA_CLK ; Rise       ; matrixEncoder:inst9|storeCol[1]         ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; VGA_CLK ; Rise       ; matrixEncoder:inst9|storeCol[2]         ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; VGA_CLK ; Rise       ; matrixEncoder:inst9|storeCol[2]         ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; VGA_CLK ; Rise       ; matrixEncoder:inst9|storeSel[0]         ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; VGA_CLK ; Rise       ; matrixEncoder:inst9|storeSel[0]         ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; VGA_CLK ; Rise       ; matrixEncoder:inst9|storeSel[1]         ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; VGA_CLK ; Rise       ; matrixEncoder:inst9|storeSel[1]         ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; VGA_CLK ; Rise       ; matrixEncoder:inst9|storeSel[2]         ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; VGA_CLK ; Rise       ; matrixEncoder:inst9|storeSel[2]         ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; VGA_CLK ; Rise       ; vga:inst1|VGA_B[1]                      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; VGA_CLK ; Rise       ; vga:inst1|VGA_B[1]                      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; VGA_CLK ; Rise       ; vga:inst1|VGA_B[2]                      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; VGA_CLK ; Rise       ; vga:inst1|VGA_B[2]                      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; VGA_CLK ; Rise       ; vga:inst1|VGA_B[3]                      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; VGA_CLK ; Rise       ; vga:inst1|VGA_B[3]                      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; VGA_CLK ; Rise       ; vga:inst1|VGA_G[2]                      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; VGA_CLK ; Rise       ; vga:inst1|VGA_G[2]                      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; VGA_CLK ; Rise       ; vga:inst1|VGA_G[3]                      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; VGA_CLK ; Rise       ; vga:inst1|VGA_G[3]                      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; VGA_CLK ; Rise       ; vga:inst1|VGA_R[1]                      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; VGA_CLK ; Rise       ; vga:inst1|VGA_R[1]                      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; VGA_CLK ; Rise       ; vga:inst1|VGA_R[3]                      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; VGA_CLK ; Rise       ; vga:inst1|VGA_R[3]                      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; VGA_CLK ; Rise       ; vga:inst1|cnt[15]                       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; VGA_CLK ; Rise       ; vga:inst1|cnt[15]                       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; VGA_CLK ; Rise       ; vga:inst1|vga640x480:display|h_count[0] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; VGA_CLK ; Rise       ; vga:inst1|vga640x480:display|h_count[0] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; VGA_CLK ; Rise       ; vga:inst1|vga640x480:display|h_count[1] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; VGA_CLK ; Rise       ; vga:inst1|vga640x480:display|h_count[1] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; VGA_CLK ; Rise       ; vga:inst1|vga640x480:display|h_count[2] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; VGA_CLK ; Rise       ; vga:inst1|vga640x480:display|h_count[2] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; VGA_CLK ; Rise       ; vga:inst1|vga640x480:display|h_count[3] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; VGA_CLK ; Rise       ; vga:inst1|vga640x480:display|h_count[3] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; VGA_CLK ; Rise       ; vga:inst1|vga640x480:display|h_count[4] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; VGA_CLK ; Rise       ; vga:inst1|vga640x480:display|h_count[4] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; VGA_CLK ; Rise       ; vga:inst1|vga640x480:display|h_count[5] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; VGA_CLK ; Rise       ; vga:inst1|vga640x480:display|h_count[5] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; VGA_CLK ; Rise       ; vga:inst1|vga640x480:display|h_count[6] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; VGA_CLK ; Rise       ; vga:inst1|vga640x480:display|h_count[6] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; VGA_CLK ; Rise       ; vga:inst1|vga640x480:display|h_count[7] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; VGA_CLK ; Rise       ; vga:inst1|vga640x480:display|h_count[7] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; VGA_CLK ; Rise       ; vga:inst1|vga640x480:display|h_count[8] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; VGA_CLK ; Rise       ; vga:inst1|vga640x480:display|h_count[8] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; VGA_CLK ; Rise       ; vga:inst1|vga640x480:display|h_count[9] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; VGA_CLK ; Rise       ; vga:inst1|vga640x480:display|h_count[9] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; VGA_CLK ; Rise       ; vga:inst1|vga640x480:display|v_count[0] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; VGA_CLK ; Rise       ; vga:inst1|vga640x480:display|v_count[0] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; VGA_CLK ; Rise       ; vga:inst1|vga640x480:display|v_count[1] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; VGA_CLK ; Rise       ; vga:inst1|vga640x480:display|v_count[1] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; VGA_CLK ; Rise       ; vga:inst1|vga640x480:display|v_count[2] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; VGA_CLK ; Rise       ; vga:inst1|vga640x480:display|v_count[2] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; VGA_CLK ; Rise       ; vga:inst1|vga640x480:display|v_count[3] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; VGA_CLK ; Rise       ; vga:inst1|vga640x480:display|v_count[3] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; VGA_CLK ; Rise       ; vga:inst1|vga640x480:display|v_count[4] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; VGA_CLK ; Rise       ; vga:inst1|vga640x480:display|v_count[4] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; VGA_CLK ; Rise       ; vga:inst1|vga640x480:display|v_count[5] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; VGA_CLK ; Rise       ; vga:inst1|vga640x480:display|v_count[5] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; VGA_CLK ; Rise       ; vga:inst1|vga640x480:display|v_count[6] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; VGA_CLK ; Rise       ; vga:inst1|vga640x480:display|v_count[6] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; VGA_CLK ; Rise       ; vga:inst1|vga640x480:display|v_count[7] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; VGA_CLK ; Rise       ; vga:inst1|vga640x480:display|v_count[7] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; VGA_CLK ; Rise       ; vga:inst1|vga640x480:display|v_count[8] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; VGA_CLK ; Rise       ; vga:inst1|vga640x480:display|v_count[8] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; VGA_CLK ; Rise       ; vga:inst1|vga640x480:display|v_count[9] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; VGA_CLK ; Rise       ; vga:inst1|vga640x480:display|v_count[9] ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; VGA_CLK ; Rise       ; VGA_CLK|combout                         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; VGA_CLK ; Rise       ; VGA_CLK|combout                         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; VGA_CLK ; Rise       ; VGA_CLK~clkctrl|inclk[0]                ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; VGA_CLK ; Rise       ; VGA_CLK~clkctrl|inclk[0]                ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; VGA_CLK ; Rise       ; VGA_CLK~clkctrl|outclk                  ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; VGA_CLK ; Rise       ; VGA_CLK~clkctrl|outclk                  ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; VGA_CLK ; Rise       ; inst1|VGA_B[1]|clk                      ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; VGA_CLK ; Rise       ; inst1|VGA_B[1]|clk                      ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; VGA_CLK ; Rise       ; inst1|VGA_B[2]|clk                      ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; VGA_CLK ; Rise       ; inst1|VGA_B[2]|clk                      ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; VGA_CLK ; Rise       ; inst1|VGA_B[3]|clk                      ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; VGA_CLK ; Rise       ; inst1|VGA_B[3]|clk                      ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; VGA_CLK ; Rise       ; inst1|VGA_G[2]|clk                      ;
+--------+--------------+----------------+------------------+---------+------------+-----------------------------------------+


+-------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Minimum Pulse Width: 'clkdiv:inst8|out'                                                                            ;
+--------+--------------+----------------+------------------+------------------+------------+-----------------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock            ; Clock Edge ; Target                            ;
+--------+--------------+----------------+------------------+------------------+------------+-----------------------------------+
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|NS[0]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|NS[0]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|NS[1]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|NS[1]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|NS[2]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|NS[2]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|NS[3]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|NS[3]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|NS[4]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|NS[4]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|NS[5]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|NS[5]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|NS[6]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|NS[6]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|NS[7]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|NS[7]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|Northreceiving      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|Northreceiving      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|Northsending        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|Northsending        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|Southreceiving      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|Southreceiving      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|ant                 ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|ant                 ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|antNorth            ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|antNorth            ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|blocktype[0]        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|blocktype[0]        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|inNorthBlocktype[0] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|inNorthBlocktype[0] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|outNorthVerify      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|outNorthVerify      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|outNorth[0]         ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|outNorth[0]         ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|outNorth[1]         ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|outNorth[1]         ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|outNorth[2]         ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|outNorth[2]         ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|outSouthVerify      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|outSouthVerify      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|outSouth[0]         ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|outSouth[0]         ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|outSouth[2]         ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|outSouth[2]         ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|outSouth[4]         ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|outSouth[4]         ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|outSouth[5]         ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|outSouth[5]         ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|outSouth[6]         ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|outSouth[6]         ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|receivingNorth      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|receivingNorth      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|sendingNorth        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|sendingNorth        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|sendingSouth        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|sendingSouth        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|sugar               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|sugar               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|sugarNorth          ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clkdiv:inst8|out ; Rise       ; blockV2:inst2|sugarNorth          ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clkdiv:inst8|out ; Rise       ; blockV2:inst3|Eastreceiving       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clkdiv:inst8|out ; Rise       ; blockV2:inst3|Eastreceiving       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clkdiv:inst8|out ; Rise       ; blockV2:inst3|Eastsending         ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clkdiv:inst8|out ; Rise       ; blockV2:inst3|Eastsending         ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clkdiv:inst8|out ; Rise       ; blockV2:inst3|NS[0]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clkdiv:inst8|out ; Rise       ; blockV2:inst3|NS[0]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clkdiv:inst8|out ; Rise       ; blockV2:inst3|NS[1]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clkdiv:inst8|out ; Rise       ; blockV2:inst3|NS[1]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clkdiv:inst8|out ; Rise       ; blockV2:inst3|NS[2]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clkdiv:inst8|out ; Rise       ; blockV2:inst3|NS[2]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clkdiv:inst8|out ; Rise       ; blockV2:inst3|NS[3]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clkdiv:inst8|out ; Rise       ; blockV2:inst3|NS[3]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clkdiv:inst8|out ; Rise       ; blockV2:inst3|NS[4]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clkdiv:inst8|out ; Rise       ; blockV2:inst3|NS[4]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clkdiv:inst8|out ; Rise       ; blockV2:inst3|NS[5]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clkdiv:inst8|out ; Rise       ; blockV2:inst3|NS[5]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clkdiv:inst8|out ; Rise       ; blockV2:inst3|NS[6]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clkdiv:inst8|out ; Rise       ; blockV2:inst3|NS[6]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clkdiv:inst8|out ; Rise       ; blockV2:inst3|NS[7]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clkdiv:inst8|out ; Rise       ; blockV2:inst3|NS[7]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clkdiv:inst8|out ; Rise       ; blockV2:inst3|Northreceiving      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clkdiv:inst8|out ; Rise       ; blockV2:inst3|Northreceiving      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clkdiv:inst8|out ; Rise       ; blockV2:inst3|Northsending        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clkdiv:inst8|out ; Rise       ; blockV2:inst3|Northsending        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clkdiv:inst8|out ; Rise       ; blockV2:inst3|Southreceiving      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clkdiv:inst8|out ; Rise       ; blockV2:inst3|Southreceiving      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clkdiv:inst8|out ; Rise       ; blockV2:inst3|ant                 ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clkdiv:inst8|out ; Rise       ; blockV2:inst3|ant                 ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clkdiv:inst8|out ; Rise       ; blockV2:inst3|antEast             ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clkdiv:inst8|out ; Rise       ; blockV2:inst3|antEast             ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clkdiv:inst8|out ; Rise       ; blockV2:inst3|blocktype[0]        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clkdiv:inst8|out ; Rise       ; blockV2:inst3|blocktype[0]        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clkdiv:inst8|out ; Rise       ; blockV2:inst3|inEastBlocktype[0]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clkdiv:inst8|out ; Rise       ; blockV2:inst3|inEastBlocktype[0]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clkdiv:inst8|out ; Rise       ; blockV2:inst3|inEastBlocktype[2]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clkdiv:inst8|out ; Rise       ; blockV2:inst3|inEastBlocktype[2]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clkdiv:inst8|out ; Rise       ; blockV2:inst3|outEastVerify       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clkdiv:inst8|out ; Rise       ; blockV2:inst3|outEastVerify       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clkdiv:inst8|out ; Rise       ; blockV2:inst3|outEast[0]          ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clkdiv:inst8|out ; Rise       ; blockV2:inst3|outEast[0]          ;
+--------+--------------+----------------+------------------+------------------+------------+-----------------------------------+


+----------------------------------------------------------------------------------+
; Setup Times                                                                      ;
+---------------+------------------+-------+-------+------------+------------------+
; Data Port     ; Clock Port       ; Rise  ; Fall  ; Clock Edge ; Clock Reference  ;
+---------------+------------------+-------+-------+------------+------------------+
; VGA_RST       ; VGA_CLK          ; 2.976 ; 2.976 ; Rise       ; VGA_CLK          ;
; setinputs[*]  ; clk              ; 1.423 ; 1.423 ; Rise       ; clk              ;
;  setinputs[0] ; clk              ; 1.071 ; 1.071 ; Rise       ; clk              ;
;  setinputs[1] ; clk              ; 1.423 ; 1.423 ; Rise       ; clk              ;
;  setinputs[2] ; clk              ; 1.223 ; 1.223 ; Rise       ; clk              ;
;  setinputs[3] ; clk              ; 1.258 ; 1.258 ; Rise       ; clk              ;
; en            ; clkdiv:inst8|out ; 1.941 ; 1.941 ; Rise       ; clkdiv:inst8|out ;
+---------------+------------------+-------+-------+------------+------------------+


+------------------------------------------------------------------------------------+
; Hold Times                                                                         ;
+---------------+------------------+--------+--------+------------+------------------+
; Data Port     ; Clock Port       ; Rise   ; Fall   ; Clock Edge ; Clock Reference  ;
+---------------+------------------+--------+--------+------------+------------------+
; VGA_RST       ; VGA_CLK          ; -2.644 ; -2.644 ; Rise       ; VGA_CLK          ;
; setinputs[*]  ; clk              ; 0.178  ; 0.178  ; Rise       ; clk              ;
;  setinputs[0] ; clk              ; 0.066  ; 0.066  ; Rise       ; clk              ;
;  setinputs[1] ; clk              ; 0.173  ; 0.173  ; Rise       ; clk              ;
;  setinputs[2] ; clk              ; 0.089  ; 0.089  ; Rise       ; clk              ;
;  setinputs[3] ; clk              ; 0.178  ; 0.178  ; Rise       ; clk              ;
; en            ; clkdiv:inst8|out ; -0.675 ; -0.675 ; Rise       ; clkdiv:inst8|out ;
+---------------+------------------+--------+--------+------------+------------------+


+----------------------------------------------------------------------------------+
; Clock to Output Times                                                            ;
+---------------+------------------+-------+-------+------------+------------------+
; Data Port     ; Clock Port       ; Rise  ; Fall  ; Clock Edge ; Clock Reference  ;
+---------------+------------------+-------+-------+------------+------------------+
; VGA_BLUE[*]   ; VGA_CLK          ; 4.022 ; 4.022 ; Rise       ; VGA_CLK          ;
;  VGA_BLUE[1]  ; VGA_CLK          ; 4.022 ; 4.022 ; Rise       ; VGA_CLK          ;
;  VGA_BLUE[2]  ; VGA_CLK          ; 4.000 ; 4.000 ; Rise       ; VGA_CLK          ;
;  VGA_BLUE[3]  ; VGA_CLK          ; 3.948 ; 3.948 ; Rise       ; VGA_CLK          ;
; VGA_GREEN[*]  ; VGA_CLK          ; 4.035 ; 4.035 ; Rise       ; VGA_CLK          ;
;  VGA_GREEN[1] ; VGA_CLK          ; 4.035 ; 4.035 ; Rise       ; VGA_CLK          ;
;  VGA_GREEN[2] ; VGA_CLK          ; 3.787 ; 3.787 ; Rise       ; VGA_CLK          ;
;  VGA_GREEN[3] ; VGA_CLK          ; 3.887 ; 3.887 ; Rise       ; VGA_CLK          ;
; VGA_Hsync     ; VGA_CLK          ; 5.131 ; 5.131 ; Rise       ; VGA_CLK          ;
; VGA_RED[*]    ; VGA_CLK          ; 3.874 ; 3.874 ; Rise       ; VGA_CLK          ;
;  VGA_RED[1]   ; VGA_CLK          ; 3.874 ; 3.874 ; Rise       ; VGA_CLK          ;
;  VGA_RED[3]   ; VGA_CLK          ; 3.861 ; 3.861 ; Rise       ; VGA_CLK          ;
; VGA_Vsync     ; VGA_CLK          ; 4.694 ; 4.694 ; Rise       ; VGA_CLK          ;
; hexoutA[*]    ; clk              ; 3.893 ; 3.893 ; Rise       ; clk              ;
;  hexoutA[0]   ; clk              ; 3.720 ; 3.720 ; Rise       ; clk              ;
;  hexoutA[1]   ; clk              ; 3.758 ; 3.758 ; Rise       ; clk              ;
;  hexoutA[2]   ; clk              ; 3.759 ; 3.759 ; Rise       ; clk              ;
;  hexoutA[3]   ; clk              ; 3.893 ; 3.893 ; Rise       ; clk              ;
;  hexoutA[4]   ; clk              ; 3.887 ; 3.887 ; Rise       ; clk              ;
;  hexoutA[5]   ; clk              ; 3.882 ; 3.882 ; Rise       ; clk              ;
;  hexoutA[6]   ; clk              ; 3.881 ; 3.881 ; Rise       ; clk              ;
; hexoutB[*]    ; clk              ; 3.974 ; 3.974 ; Rise       ; clk              ;
;  hexoutB[0]   ; clk              ; 3.867 ; 3.867 ; Rise       ; clk              ;
;  hexoutB[1]   ; clk              ; 3.961 ; 3.961 ; Rise       ; clk              ;
;  hexoutB[2]   ; clk              ; 3.871 ; 3.871 ; Rise       ; clk              ;
;  hexoutB[3]   ; clk              ; 3.974 ; 3.974 ; Rise       ; clk              ;
;  hexoutB[4]   ; clk              ; 3.929 ; 3.929 ; Rise       ; clk              ;
;  hexoutB[5]   ; clk              ; 3.912 ; 3.912 ; Rise       ; clk              ;
;  hexoutB[6]   ; clk              ; 3.921 ; 3.921 ; Rise       ; clk              ;
; hexoutC[*]    ; clk              ; 4.121 ; 4.121 ; Rise       ; clk              ;
;  hexoutC[0]   ; clk              ; 4.013 ; 4.013 ; Rise       ; clk              ;
;  hexoutC[1]   ; clk              ; 3.981 ; 3.981 ; Rise       ; clk              ;
;  hexoutC[2]   ; clk              ; 4.043 ; 4.043 ; Rise       ; clk              ;
;  hexoutC[3]   ; clk              ; 4.094 ; 4.094 ; Rise       ; clk              ;
;  hexoutC[4]   ; clk              ; 4.015 ; 4.015 ; Rise       ; clk              ;
;  hexoutC[5]   ; clk              ; 4.000 ; 4.000 ; Rise       ; clk              ;
;  hexoutC[6]   ; clk              ; 4.121 ; 4.121 ; Rise       ; clk              ;
; hexoutD[*]    ; clk              ; 4.147 ; 4.147 ; Rise       ; clk              ;
;  hexoutD[0]   ; clk              ; 3.887 ; 3.887 ; Rise       ; clk              ;
;  hexoutD[1]   ; clk              ; 4.147 ; 4.147 ; Rise       ; clk              ;
;  hexoutD[2]   ; clk              ; 4.043 ; 4.043 ; Rise       ; clk              ;
;  hexoutD[3]   ; clk              ; 3.853 ; 3.853 ; Rise       ; clk              ;
;  hexoutD[4]   ; clk              ; 3.842 ; 3.842 ; Rise       ; clk              ;
;  hexoutD[5]   ; clk              ; 3.892 ; 3.892 ; Rise       ; clk              ;
;  hexoutD[6]   ; clk              ; 3.917 ; 3.917 ; Rise       ; clk              ;
; GLED[*]       ; clkdiv:inst8|out ; 4.353 ; 4.353 ; Rise       ; clkdiv:inst8|out ;
;  GLED[0]      ; clkdiv:inst8|out ; 3.800 ; 3.800 ; Rise       ; clkdiv:inst8|out ;
;  GLED[1]      ; clkdiv:inst8|out ; 3.805 ; 3.805 ; Rise       ; clkdiv:inst8|out ;
;  GLED[2]      ; clkdiv:inst8|out ; 4.353 ; 4.353 ; Rise       ; clkdiv:inst8|out ;
;  GLED[4]      ; clkdiv:inst8|out ; 3.882 ; 3.882 ; Rise       ; clkdiv:inst8|out ;
;  GLED[5]      ; clkdiv:inst8|out ; 3.924 ; 3.924 ; Rise       ; clkdiv:inst8|out ;
;  GLED[6]      ; clkdiv:inst8|out ; 3.883 ; 3.883 ; Rise       ; clkdiv:inst8|out ;
; RLED[*]       ; clkdiv:inst8|out ; 4.369 ; 4.369 ; Rise       ; clkdiv:inst8|out ;
;  RLED[0]      ; clkdiv:inst8|out ; 3.886 ; 3.886 ; Rise       ; clkdiv:inst8|out ;
;  RLED[1]      ; clkdiv:inst8|out ; 3.825 ; 3.825 ; Rise       ; clkdiv:inst8|out ;
;  RLED[2]      ; clkdiv:inst8|out ; 4.012 ; 4.012 ; Rise       ; clkdiv:inst8|out ;
;  RLED[4]      ; clkdiv:inst8|out ; 4.336 ; 4.336 ; Rise       ; clkdiv:inst8|out ;
;  RLED[5]      ; clkdiv:inst8|out ; 4.369 ; 4.369 ; Rise       ; clkdiv:inst8|out ;
;  RLED[6]      ; clkdiv:inst8|out ; 4.297 ; 4.297 ; Rise       ; clkdiv:inst8|out ;
+---------------+------------------+-------+-------+------------+------------------+


+----------------------------------------------------------------------------------+
; Minimum Clock to Output Times                                                    ;
+---------------+------------------+-------+-------+------------+------------------+
; Data Port     ; Clock Port       ; Rise  ; Fall  ; Clock Edge ; Clock Reference  ;
+---------------+------------------+-------+-------+------------+------------------+
; VGA_BLUE[*]   ; VGA_CLK          ; 3.948 ; 3.948 ; Rise       ; VGA_CLK          ;
;  VGA_BLUE[1]  ; VGA_CLK          ; 4.022 ; 4.022 ; Rise       ; VGA_CLK          ;
;  VGA_BLUE[2]  ; VGA_CLK          ; 4.000 ; 4.000 ; Rise       ; VGA_CLK          ;
;  VGA_BLUE[3]  ; VGA_CLK          ; 3.948 ; 3.948 ; Rise       ; VGA_CLK          ;
; VGA_GREEN[*]  ; VGA_CLK          ; 3.787 ; 3.787 ; Rise       ; VGA_CLK          ;
;  VGA_GREEN[1] ; VGA_CLK          ; 4.035 ; 4.035 ; Rise       ; VGA_CLK          ;
;  VGA_GREEN[2] ; VGA_CLK          ; 3.787 ; 3.787 ; Rise       ; VGA_CLK          ;
;  VGA_GREEN[3] ; VGA_CLK          ; 3.887 ; 3.887 ; Rise       ; VGA_CLK          ;
; VGA_Hsync     ; VGA_CLK          ; 4.420 ; 4.420 ; Rise       ; VGA_CLK          ;
; VGA_RED[*]    ; VGA_CLK          ; 3.861 ; 3.861 ; Rise       ; VGA_CLK          ;
;  VGA_RED[1]   ; VGA_CLK          ; 3.874 ; 3.874 ; Rise       ; VGA_CLK          ;
;  VGA_RED[3]   ; VGA_CLK          ; 3.861 ; 3.861 ; Rise       ; VGA_CLK          ;
; VGA_Vsync     ; VGA_CLK          ; 4.143 ; 4.143 ; Rise       ; VGA_CLK          ;
; hexoutA[*]    ; clk              ; 3.720 ; 3.720 ; Rise       ; clk              ;
;  hexoutA[0]   ; clk              ; 3.720 ; 3.720 ; Rise       ; clk              ;
;  hexoutA[1]   ; clk              ; 3.758 ; 3.758 ; Rise       ; clk              ;
;  hexoutA[2]   ; clk              ; 3.759 ; 3.759 ; Rise       ; clk              ;
;  hexoutA[3]   ; clk              ; 3.893 ; 3.893 ; Rise       ; clk              ;
;  hexoutA[4]   ; clk              ; 3.887 ; 3.887 ; Rise       ; clk              ;
;  hexoutA[5]   ; clk              ; 3.882 ; 3.882 ; Rise       ; clk              ;
;  hexoutA[6]   ; clk              ; 3.881 ; 3.881 ; Rise       ; clk              ;
; hexoutB[*]    ; clk              ; 3.867 ; 3.867 ; Rise       ; clk              ;
;  hexoutB[0]   ; clk              ; 3.867 ; 3.867 ; Rise       ; clk              ;
;  hexoutB[1]   ; clk              ; 3.961 ; 3.961 ; Rise       ; clk              ;
;  hexoutB[2]   ; clk              ; 3.871 ; 3.871 ; Rise       ; clk              ;
;  hexoutB[3]   ; clk              ; 3.974 ; 3.974 ; Rise       ; clk              ;
;  hexoutB[4]   ; clk              ; 3.929 ; 3.929 ; Rise       ; clk              ;
;  hexoutB[5]   ; clk              ; 3.912 ; 3.912 ; Rise       ; clk              ;
;  hexoutB[6]   ; clk              ; 3.921 ; 3.921 ; Rise       ; clk              ;
; hexoutC[*]    ; clk              ; 3.981 ; 3.981 ; Rise       ; clk              ;
;  hexoutC[0]   ; clk              ; 4.013 ; 4.013 ; Rise       ; clk              ;
;  hexoutC[1]   ; clk              ; 3.981 ; 3.981 ; Rise       ; clk              ;
;  hexoutC[2]   ; clk              ; 4.043 ; 4.043 ; Rise       ; clk              ;
;  hexoutC[3]   ; clk              ; 4.094 ; 4.094 ; Rise       ; clk              ;
;  hexoutC[4]   ; clk              ; 4.015 ; 4.015 ; Rise       ; clk              ;
;  hexoutC[5]   ; clk              ; 4.000 ; 4.000 ; Rise       ; clk              ;
;  hexoutC[6]   ; clk              ; 4.121 ; 4.121 ; Rise       ; clk              ;
; hexoutD[*]    ; clk              ; 3.842 ; 3.842 ; Rise       ; clk              ;
;  hexoutD[0]   ; clk              ; 3.887 ; 3.887 ; Rise       ; clk              ;
;  hexoutD[1]   ; clk              ; 4.147 ; 4.147 ; Rise       ; clk              ;
;  hexoutD[2]   ; clk              ; 4.043 ; 4.043 ; Rise       ; clk              ;
;  hexoutD[3]   ; clk              ; 3.853 ; 3.853 ; Rise       ; clk              ;
;  hexoutD[4]   ; clk              ; 3.842 ; 3.842 ; Rise       ; clk              ;
;  hexoutD[5]   ; clk              ; 3.892 ; 3.892 ; Rise       ; clk              ;
;  hexoutD[6]   ; clk              ; 3.917 ; 3.917 ; Rise       ; clk              ;
; GLED[*]       ; clkdiv:inst8|out ; 3.800 ; 3.800 ; Rise       ; clkdiv:inst8|out ;
;  GLED[0]      ; clkdiv:inst8|out ; 3.800 ; 3.800 ; Rise       ; clkdiv:inst8|out ;
;  GLED[1]      ; clkdiv:inst8|out ; 3.805 ; 3.805 ; Rise       ; clkdiv:inst8|out ;
;  GLED[2]      ; clkdiv:inst8|out ; 4.353 ; 4.353 ; Rise       ; clkdiv:inst8|out ;
;  GLED[4]      ; clkdiv:inst8|out ; 3.882 ; 3.882 ; Rise       ; clkdiv:inst8|out ;
;  GLED[5]      ; clkdiv:inst8|out ; 3.924 ; 3.924 ; Rise       ; clkdiv:inst8|out ;
;  GLED[6]      ; clkdiv:inst8|out ; 3.883 ; 3.883 ; Rise       ; clkdiv:inst8|out ;
; RLED[*]       ; clkdiv:inst8|out ; 3.825 ; 3.825 ; Rise       ; clkdiv:inst8|out ;
;  RLED[0]      ; clkdiv:inst8|out ; 3.886 ; 3.886 ; Rise       ; clkdiv:inst8|out ;
;  RLED[1]      ; clkdiv:inst8|out ; 3.825 ; 3.825 ; Rise       ; clkdiv:inst8|out ;
;  RLED[2]      ; clkdiv:inst8|out ; 4.012 ; 4.012 ; Rise       ; clkdiv:inst8|out ;
;  RLED[4]      ; clkdiv:inst8|out ; 4.336 ; 4.336 ; Rise       ; clkdiv:inst8|out ;
;  RLED[5]      ; clkdiv:inst8|out ; 4.369 ; 4.369 ; Rise       ; clkdiv:inst8|out ;
;  RLED[6]      ; clkdiv:inst8|out ; 4.297 ; 4.297 ; Rise       ; clkdiv:inst8|out ;
+---------------+------------------+-------+-------+------------+------------------+


+----------------------------------------------------------------------------------+
; Multicorner Timing Analysis Summary                                              ;
+-------------------+-----------+-------+----------+---------+---------------------+
; Clock             ; Setup     ; Hold  ; Recovery ; Removal ; Minimum Pulse Width ;
+-------------------+-----------+-------+----------+---------+---------------------+
; Worst-case Slack  ; -235.377  ; 0.215 ; N/A      ; N/A     ; -1.631              ;
;  VGA_CLK          ; -4.404    ; 0.215 ; N/A      ; N/A     ; -1.631              ;
;  clk              ; -235.377  ; 0.215 ; N/A      ; N/A     ; -1.631              ;
;  clkdiv:inst8|out ; -5.356    ; 0.215 ; N/A      ; N/A     ; -0.611              ;
; Design-wide TNS   ; -1452.534 ; 0.0   ; 0.0      ; 0.0     ; -423.63             ;
;  VGA_CLK          ; -118.369  ; 0.000 ; N/A      ; N/A     ; -54.177             ;
;  clk              ; -796.275  ; 0.000 ; N/A      ; N/A     ; -116.499            ;
;  clkdiv:inst8|out ; -537.890  ; 0.000 ; N/A      ; N/A     ; -252.954            ;
+-------------------+-----------+-------+----------+---------+---------------------+


+----------------------------------------------------------------------------------+
; Setup Times                                                                      ;
+---------------+------------------+-------+-------+------------+------------------+
; Data Port     ; Clock Port       ; Rise  ; Fall  ; Clock Edge ; Clock Reference  ;
+---------------+------------------+-------+-------+------------+------------------+
; VGA_RST       ; VGA_CLK          ; 6.808 ; 6.808 ; Rise       ; VGA_CLK          ;
; setinputs[*]  ; clk              ; 5.089 ; 5.089 ; Rise       ; clk              ;
;  setinputs[0] ; clk              ; 4.098 ; 4.098 ; Rise       ; clk              ;
;  setinputs[1] ; clk              ; 5.089 ; 5.089 ; Rise       ; clk              ;
;  setinputs[2] ; clk              ; 4.288 ; 4.288 ; Rise       ; clk              ;
;  setinputs[3] ; clk              ; 4.378 ; 4.378 ; Rise       ; clk              ;
; en            ; clkdiv:inst8|out ; 6.080 ; 6.080 ; Rise       ; clkdiv:inst8|out ;
+---------------+------------------+-------+-------+------------+------------------+


+------------------------------------------------------------------------------------+
; Hold Times                                                                         ;
+---------------+------------------+--------+--------+------------+------------------+
; Data Port     ; Clock Port       ; Rise   ; Fall   ; Clock Edge ; Clock Reference  ;
+---------------+------------------+--------+--------+------------+------------------+
; VGA_RST       ; VGA_CLK          ; -2.644 ; -2.644 ; Rise       ; VGA_CLK          ;
; setinputs[*]  ; clk              ; 0.178  ; 0.178  ; Rise       ; clk              ;
;  setinputs[0] ; clk              ; 0.066  ; 0.066  ; Rise       ; clk              ;
;  setinputs[1] ; clk              ; 0.173  ; 0.173  ; Rise       ; clk              ;
;  setinputs[2] ; clk              ; 0.089  ; 0.089  ; Rise       ; clk              ;
;  setinputs[3] ; clk              ; 0.178  ; 0.178  ; Rise       ; clk              ;
; en            ; clkdiv:inst8|out ; -0.675 ; -0.675 ; Rise       ; clkdiv:inst8|out ;
+---------------+------------------+--------+--------+------------+------------------+


+------------------------------------------------------------------------------------+
; Clock to Output Times                                                              ;
+---------------+------------------+--------+--------+------------+------------------+
; Data Port     ; Clock Port       ; Rise   ; Fall   ; Clock Edge ; Clock Reference  ;
+---------------+------------------+--------+--------+------------+------------------+
; VGA_BLUE[*]   ; VGA_CLK          ; 7.533  ; 7.533  ; Rise       ; VGA_CLK          ;
;  VGA_BLUE[1]  ; VGA_CLK          ; 7.533  ; 7.533  ; Rise       ; VGA_CLK          ;
;  VGA_BLUE[2]  ; VGA_CLK          ; 7.484  ; 7.484  ; Rise       ; VGA_CLK          ;
;  VGA_BLUE[3]  ; VGA_CLK          ; 7.421  ; 7.421  ; Rise       ; VGA_CLK          ;
; VGA_GREEN[*]  ; VGA_CLK          ; 7.554  ; 7.554  ; Rise       ; VGA_CLK          ;
;  VGA_GREEN[1] ; VGA_CLK          ; 7.554  ; 7.554  ; Rise       ; VGA_CLK          ;
;  VGA_GREEN[2] ; VGA_CLK          ; 6.920  ; 6.920  ; Rise       ; VGA_CLK          ;
;  VGA_GREEN[3] ; VGA_CLK          ; 7.192  ; 7.192  ; Rise       ; VGA_CLK          ;
; VGA_Hsync     ; VGA_CLK          ; 10.595 ; 10.595 ; Rise       ; VGA_CLK          ;
; VGA_RED[*]    ; VGA_CLK          ; 7.183  ; 7.183  ; Rise       ; VGA_CLK          ;
;  VGA_RED[1]   ; VGA_CLK          ; 7.183  ; 7.183  ; Rise       ; VGA_CLK          ;
;  VGA_RED[3]   ; VGA_CLK          ; 7.166  ; 7.166  ; Rise       ; VGA_CLK          ;
; VGA_Vsync     ; VGA_CLK          ; 9.567  ; 9.567  ; Rise       ; VGA_CLK          ;
; hexoutA[*]    ; clk              ; 7.391  ; 7.391  ; Rise       ; clk              ;
;  hexoutA[0]   ; clk              ; 6.999  ; 6.999  ; Rise       ; clk              ;
;  hexoutA[1]   ; clk              ; 7.043  ; 7.043  ; Rise       ; clk              ;
;  hexoutA[2]   ; clk              ; 7.047  ; 7.047  ; Rise       ; clk              ;
;  hexoutA[3]   ; clk              ; 7.391  ; 7.391  ; Rise       ; clk              ;
;  hexoutA[4]   ; clk              ; 7.380  ; 7.380  ; Rise       ; clk              ;
;  hexoutA[5]   ; clk              ; 7.371  ; 7.371  ; Rise       ; clk              ;
;  hexoutA[6]   ; clk              ; 7.369  ; 7.369  ; Rise       ; clk              ;
; hexoutB[*]    ; clk              ; 7.648  ; 7.648  ; Rise       ; clk              ;
;  hexoutB[0]   ; clk              ; 7.323  ; 7.323  ; Rise       ; clk              ;
;  hexoutB[1]   ; clk              ; 7.633  ; 7.633  ; Rise       ; clk              ;
;  hexoutB[2]   ; clk              ; 7.382  ; 7.382  ; Rise       ; clk              ;
;  hexoutB[3]   ; clk              ; 7.648  ; 7.648  ; Rise       ; clk              ;
;  hexoutB[4]   ; clk              ; 7.464  ; 7.464  ; Rise       ; clk              ;
;  hexoutB[5]   ; clk              ; 7.415  ; 7.415  ; Rise       ; clk              ;
;  hexoutB[6]   ; clk              ; 7.429  ; 7.429  ; Rise       ; clk              ;
; hexoutC[*]    ; clk              ; 7.987  ; 7.987  ; Rise       ; clk              ;
;  hexoutC[0]   ; clk              ; 7.716  ; 7.716  ; Rise       ; clk              ;
;  hexoutC[1]   ; clk              ; 7.656  ; 7.656  ; Rise       ; clk              ;
;  hexoutC[2]   ; clk              ; 7.728  ; 7.728  ; Rise       ; clk              ;
;  hexoutC[3]   ; clk              ; 7.816  ; 7.816  ; Rise       ; clk              ;
;  hexoutC[4]   ; clk              ; 7.698  ; 7.698  ; Rise       ; clk              ;
;  hexoutC[5]   ; clk              ; 7.680  ; 7.680  ; Rise       ; clk              ;
;  hexoutC[6]   ; clk              ; 7.987  ; 7.987  ; Rise       ; clk              ;
; hexoutD[*]    ; clk              ; 7.875  ; 7.875  ; Rise       ; clk              ;
;  hexoutD[0]   ; clk              ; 7.386  ; 7.386  ; Rise       ; clk              ;
;  hexoutD[1]   ; clk              ; 7.875  ; 7.875  ; Rise       ; clk              ;
;  hexoutD[2]   ; clk              ; 7.597  ; 7.597  ; Rise       ; clk              ;
;  hexoutD[3]   ; clk              ; 7.316  ; 7.316  ; Rise       ; clk              ;
;  hexoutD[4]   ; clk              ; 7.303  ; 7.303  ; Rise       ; clk              ;
;  hexoutD[5]   ; clk              ; 7.403  ; 7.403  ; Rise       ; clk              ;
;  hexoutD[6]   ; clk              ; 7.430  ; 7.430  ; Rise       ; clk              ;
; GLED[*]       ; clkdiv:inst8|out ; 8.842  ; 8.842  ; Rise       ; clkdiv:inst8|out ;
;  GLED[0]      ; clkdiv:inst8|out ; 7.391  ; 7.391  ; Rise       ; clkdiv:inst8|out ;
;  GLED[1]      ; clkdiv:inst8|out ; 7.404  ; 7.404  ; Rise       ; clkdiv:inst8|out ;
;  GLED[2]      ; clkdiv:inst8|out ; 8.842  ; 8.842  ; Rise       ; clkdiv:inst8|out ;
;  GLED[4]      ; clkdiv:inst8|out ; 7.601  ; 7.601  ; Rise       ; clkdiv:inst8|out ;
;  GLED[5]      ; clkdiv:inst8|out ; 7.620  ; 7.620  ; Rise       ; clkdiv:inst8|out ;
;  GLED[6]      ; clkdiv:inst8|out ; 7.424  ; 7.424  ; Rise       ; clkdiv:inst8|out ;
; RLED[*]       ; clkdiv:inst8|out ; 8.873  ; 8.873  ; Rise       ; clkdiv:inst8|out ;
;  RLED[0]      ; clkdiv:inst8|out ; 7.640  ; 7.640  ; Rise       ; clkdiv:inst8|out ;
;  RLED[1]      ; clkdiv:inst8|out ; 7.336  ; 7.336  ; Rise       ; clkdiv:inst8|out ;
;  RLED[2]      ; clkdiv:inst8|out ; 7.962  ; 7.962  ; Rise       ; clkdiv:inst8|out ;
;  RLED[4]      ; clkdiv:inst8|out ; 8.589  ; 8.589  ; Rise       ; clkdiv:inst8|out ;
;  RLED[5]      ; clkdiv:inst8|out ; 8.873  ; 8.873  ; Rise       ; clkdiv:inst8|out ;
;  RLED[6]      ; clkdiv:inst8|out ; 8.644  ; 8.644  ; Rise       ; clkdiv:inst8|out ;
+---------------+------------------+--------+--------+------------+------------------+


+----------------------------------------------------------------------------------+
; Minimum Clock to Output Times                                                    ;
+---------------+------------------+-------+-------+------------+------------------+
; Data Port     ; Clock Port       ; Rise  ; Fall  ; Clock Edge ; Clock Reference  ;
+---------------+------------------+-------+-------+------------+------------------+
; VGA_BLUE[*]   ; VGA_CLK          ; 3.948 ; 3.948 ; Rise       ; VGA_CLK          ;
;  VGA_BLUE[1]  ; VGA_CLK          ; 4.022 ; 4.022 ; Rise       ; VGA_CLK          ;
;  VGA_BLUE[2]  ; VGA_CLK          ; 4.000 ; 4.000 ; Rise       ; VGA_CLK          ;
;  VGA_BLUE[3]  ; VGA_CLK          ; 3.948 ; 3.948 ; Rise       ; VGA_CLK          ;
; VGA_GREEN[*]  ; VGA_CLK          ; 3.787 ; 3.787 ; Rise       ; VGA_CLK          ;
;  VGA_GREEN[1] ; VGA_CLK          ; 4.035 ; 4.035 ; Rise       ; VGA_CLK          ;
;  VGA_GREEN[2] ; VGA_CLK          ; 3.787 ; 3.787 ; Rise       ; VGA_CLK          ;
;  VGA_GREEN[3] ; VGA_CLK          ; 3.887 ; 3.887 ; Rise       ; VGA_CLK          ;
; VGA_Hsync     ; VGA_CLK          ; 4.420 ; 4.420 ; Rise       ; VGA_CLK          ;
; VGA_RED[*]    ; VGA_CLK          ; 3.861 ; 3.861 ; Rise       ; VGA_CLK          ;
;  VGA_RED[1]   ; VGA_CLK          ; 3.874 ; 3.874 ; Rise       ; VGA_CLK          ;
;  VGA_RED[3]   ; VGA_CLK          ; 3.861 ; 3.861 ; Rise       ; VGA_CLK          ;
; VGA_Vsync     ; VGA_CLK          ; 4.143 ; 4.143 ; Rise       ; VGA_CLK          ;
; hexoutA[*]    ; clk              ; 3.720 ; 3.720 ; Rise       ; clk              ;
;  hexoutA[0]   ; clk              ; 3.720 ; 3.720 ; Rise       ; clk              ;
;  hexoutA[1]   ; clk              ; 3.758 ; 3.758 ; Rise       ; clk              ;
;  hexoutA[2]   ; clk              ; 3.759 ; 3.759 ; Rise       ; clk              ;
;  hexoutA[3]   ; clk              ; 3.893 ; 3.893 ; Rise       ; clk              ;
;  hexoutA[4]   ; clk              ; 3.887 ; 3.887 ; Rise       ; clk              ;
;  hexoutA[5]   ; clk              ; 3.882 ; 3.882 ; Rise       ; clk              ;
;  hexoutA[6]   ; clk              ; 3.881 ; 3.881 ; Rise       ; clk              ;
; hexoutB[*]    ; clk              ; 3.867 ; 3.867 ; Rise       ; clk              ;
;  hexoutB[0]   ; clk              ; 3.867 ; 3.867 ; Rise       ; clk              ;
;  hexoutB[1]   ; clk              ; 3.961 ; 3.961 ; Rise       ; clk              ;
;  hexoutB[2]   ; clk              ; 3.871 ; 3.871 ; Rise       ; clk              ;
;  hexoutB[3]   ; clk              ; 3.974 ; 3.974 ; Rise       ; clk              ;
;  hexoutB[4]   ; clk              ; 3.929 ; 3.929 ; Rise       ; clk              ;
;  hexoutB[5]   ; clk              ; 3.912 ; 3.912 ; Rise       ; clk              ;
;  hexoutB[6]   ; clk              ; 3.921 ; 3.921 ; Rise       ; clk              ;
; hexoutC[*]    ; clk              ; 3.981 ; 3.981 ; Rise       ; clk              ;
;  hexoutC[0]   ; clk              ; 4.013 ; 4.013 ; Rise       ; clk              ;
;  hexoutC[1]   ; clk              ; 3.981 ; 3.981 ; Rise       ; clk              ;
;  hexoutC[2]   ; clk              ; 4.043 ; 4.043 ; Rise       ; clk              ;
;  hexoutC[3]   ; clk              ; 4.094 ; 4.094 ; Rise       ; clk              ;
;  hexoutC[4]   ; clk              ; 4.015 ; 4.015 ; Rise       ; clk              ;
;  hexoutC[5]   ; clk              ; 4.000 ; 4.000 ; Rise       ; clk              ;
;  hexoutC[6]   ; clk              ; 4.121 ; 4.121 ; Rise       ; clk              ;
; hexoutD[*]    ; clk              ; 3.842 ; 3.842 ; Rise       ; clk              ;
;  hexoutD[0]   ; clk              ; 3.887 ; 3.887 ; Rise       ; clk              ;
;  hexoutD[1]   ; clk              ; 4.147 ; 4.147 ; Rise       ; clk              ;
;  hexoutD[2]   ; clk              ; 4.043 ; 4.043 ; Rise       ; clk              ;
;  hexoutD[3]   ; clk              ; 3.853 ; 3.853 ; Rise       ; clk              ;
;  hexoutD[4]   ; clk              ; 3.842 ; 3.842 ; Rise       ; clk              ;
;  hexoutD[5]   ; clk              ; 3.892 ; 3.892 ; Rise       ; clk              ;
;  hexoutD[6]   ; clk              ; 3.917 ; 3.917 ; Rise       ; clk              ;
; GLED[*]       ; clkdiv:inst8|out ; 3.800 ; 3.800 ; Rise       ; clkdiv:inst8|out ;
;  GLED[0]      ; clkdiv:inst8|out ; 3.800 ; 3.800 ; Rise       ; clkdiv:inst8|out ;
;  GLED[1]      ; clkdiv:inst8|out ; 3.805 ; 3.805 ; Rise       ; clkdiv:inst8|out ;
;  GLED[2]      ; clkdiv:inst8|out ; 4.353 ; 4.353 ; Rise       ; clkdiv:inst8|out ;
;  GLED[4]      ; clkdiv:inst8|out ; 3.882 ; 3.882 ; Rise       ; clkdiv:inst8|out ;
;  GLED[5]      ; clkdiv:inst8|out ; 3.924 ; 3.924 ; Rise       ; clkdiv:inst8|out ;
;  GLED[6]      ; clkdiv:inst8|out ; 3.883 ; 3.883 ; Rise       ; clkdiv:inst8|out ;
; RLED[*]       ; clkdiv:inst8|out ; 3.825 ; 3.825 ; Rise       ; clkdiv:inst8|out ;
;  RLED[0]      ; clkdiv:inst8|out ; 3.886 ; 3.886 ; Rise       ; clkdiv:inst8|out ;
;  RLED[1]      ; clkdiv:inst8|out ; 3.825 ; 3.825 ; Rise       ; clkdiv:inst8|out ;
;  RLED[2]      ; clkdiv:inst8|out ; 4.012 ; 4.012 ; Rise       ; clkdiv:inst8|out ;
;  RLED[4]      ; clkdiv:inst8|out ; 4.336 ; 4.336 ; Rise       ; clkdiv:inst8|out ;
;  RLED[5]      ; clkdiv:inst8|out ; 4.369 ; 4.369 ; Rise       ; clkdiv:inst8|out ;
;  RLED[6]      ; clkdiv:inst8|out ; 4.297 ; 4.297 ; Rise       ; clkdiv:inst8|out ;
+---------------+------------------+-------+-------+------------+------------------+


+-------------------------------------------------------------------------------------+
; Setup Transfers                                                                     ;
+------------------+------------------+--------------+----------+----------+----------+
; From Clock       ; To Clock         ; RR Paths     ; FR Paths ; RF Paths ; FF Paths ;
+------------------+------------------+--------------+----------+----------+----------+
; clk              ; clk              ; > 2147483647 ; 0        ; 0        ; 0        ;
; clkdiv:inst8|out ; clk              ; 3282436      ; 0        ; 0        ; 0        ;
; clkdiv:inst8|out ; clkdiv:inst8|out ; 7150         ; 0        ; 0        ; 0        ;
; clkdiv:inst8|out ; VGA_CLK          ; 36           ; 0        ; 0        ; 0        ;
; VGA_CLK          ; VGA_CLK          ; 1837         ; 0        ; 0        ; 0        ;
+------------------+------------------+--------------+----------+----------+----------+
Entries labeled "false path" only account for clock-to-clock false paths and not path-based false paths. As a result, actual path counts may be lower than reported.


+-------------------------------------------------------------------------------------+
; Hold Transfers                                                                      ;
+------------------+------------------+--------------+----------+----------+----------+
; From Clock       ; To Clock         ; RR Paths     ; FR Paths ; RF Paths ; FF Paths ;
+------------------+------------------+--------------+----------+----------+----------+
; clk              ; clk              ; > 2147483647 ; 0        ; 0        ; 0        ;
; clkdiv:inst8|out ; clk              ; 3282436      ; 0        ; 0        ; 0        ;
; clkdiv:inst8|out ; clkdiv:inst8|out ; 7150         ; 0        ; 0        ; 0        ;
; clkdiv:inst8|out ; VGA_CLK          ; 36           ; 0        ; 0        ; 0        ;
; VGA_CLK          ; VGA_CLK          ; 1837         ; 0        ; 0        ; 0        ;
+------------------+------------------+--------------+----------+----------+----------+
Entries labeled "false path" only account for clock-to-clock false paths and not path-based false paths. As a result, actual path counts may be lower than reported.


---------------
; Report TCCS ;
---------------
No dedicated SERDES Transmitter circuitry present in device or used in design


---------------
; Report RSKM ;
---------------
No dedicated SERDES Receiver circuitry present in device or used in design


+------------------------------------------------+
; Unconstrained Paths                            ;
+---------------------------------+-------+------+
; Property                        ; Setup ; Hold ;
+---------------------------------+-------+------+
; Illegal Clocks                  ; 0     ; 0    ;
; Unconstrained Clocks            ; 0     ; 0    ;
; Unconstrained Input Ports       ; 6     ; 6    ;
; Unconstrained Input Port Paths  ; 154   ; 154  ;
; Unconstrained Output Ports      ; 50    ; 50   ;
; Unconstrained Output Port Paths ; 63    ; 63   ;
+---------------------------------+-------+------+


+------------------------------------+
; TimeQuest Timing Analyzer Messages ;
+------------------------------------+
Info: *******************************************************************
Info: Running Quartus II 64-Bit TimeQuest Timing Analyzer
    Info: Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition
    Info: Processing started: Wed Dec 04 08:58:47 2019
Info: Command: quartus_sta antfarm -c antfarm
Info: qsta_default_script.tcl version: #1
Warning (20013): Ignored assignments for entity "Lab7" -- entity does not exist in design
    Warning (20014): Assignment for entity set_instance_assignment -name PARTITION_HIERARCHY root_partition -to | -entity Lab7 -section_id Top was ignored
    Warning (20014): Assignment for entity set_global_assignment -name PARTITION_NETLIST_TYPE SOURCE -entity Lab7 -section_id Top was ignored
    Warning (20014): Assignment for entity set_global_assignment -name PARTITION_FITTER_PRESERVATION_LEVEL PLACEMENT_AND_ROUTING -entity Lab7 -section_id Top was ignored
    Warning (20014): Assignment for entity set_global_assignment -name PARTITION_PRESERVE_HIGH_SPEED_TILES ON -entity Lab7 -section_id Top was ignored
    Warning (20014): Assignment for entity set_global_assignment -name PARTITION_IGNORE_SOURCE_FILE_CHANGES OFF -entity Lab7 -section_id Top was ignored
    Warning (20014): Assignment for entity set_global_assignment -name PARTITION_ALWAYS_USE_QXP_NETLIST OFF -entity Lab7 -section_id Top was ignored
    Warning (20014): Assignment for entity set_global_assignment -name PARTITION_COLOR 16764057 -entity Lab7 -section_id Top was ignored
    Warning (20014): Assignment for entity set_global_assignment -name PARTITION_IMPORT_ASSIGNMENTS ON -entity Lab7 -section_id Top was ignored
    Warning (20014): Assignment for entity set_global_assignment -name PARTITION_IMPORT_EXISTING_ASSIGNMENTS REPLACE_CONFLICTING -entity Lab7 -section_id Top was ignored
    Warning (20014): Assignment for entity set_global_assignment -name PARTITION_IMPORT_EXISTING_LOGICLOCK_REGIONS UPDATE_CONFLICTING -entity Lab7 -section_id Top was ignored
    Warning (20014): Assignment for entity set_global_assignment -name PARTITION_IMPORT_PIN_ASSIGNMENTS ON -entity Lab7 -section_id Top was ignored
    Warning (20014): Assignment for entity set_global_assignment -name PARTITION_IMPORT_PROMOTE_ASSIGNMENTS ON -entity Lab7 -section_id Top was ignored
    Warning (20014): Assignment for entity set_global_assignment -name PARTITION_TYPE STANDARD_PARTITION -entity Lab7 -section_id Top was ignored
    Warning (20014): Assignment for entity set_global_assignment -name ALLOW_MULTIPLE_PERSONAS OFF -entity Lab7 -section_id Top was ignored
    Warning (20014): Assignment for entity set_global_assignment -name PARTITION_ASD_REGION_ID 1 -entity Lab7 -section_id Top was ignored
    Warning (20014): Assignment for entity set_global_assignment -name CROSS_BOUNDARY_OPTIMIZATIONS OFF -entity Lab7 -section_id Top was ignored
    Warning (20014): Assignment for entity set_global_assignment -name PROPAGATE_CONSTANTS_ON_INPUTS ON -entity Lab7 -section_id Top was ignored
    Warning (20014): Assignment for entity set_global_assignment -name PROPAGATE_INVERSIONS_ON_INPUTS ON -entity Lab7 -section_id Top was ignored
    Warning (20014): Assignment for entity set_global_assignment -name REMOVE_LOGIC_ON_UNCONNECTED_OUTPUTS ON -entity Lab7 -section_id Top was ignored
    Warning (20014): Assignment for entity set_global_assignment -name MERGE_EQUIVALENT_INPUTS ON -entity Lab7 -section_id Top was ignored
    Warning (20014): Assignment for entity set_global_assignment -name MERGE_EQUIVALENT_BIDIRS ON -entity Lab7 -section_id Top was ignored
    Warning (20014): Assignment for entity set_global_assignment -name ABSORB_PATHS_FROM_OUTPUTS_TO_INPUTS ON -entity Lab7 -section_id Top was ignored
    Warning (20014): Assignment for entity set_global_assignment -name PARTITION_EXTRACT_HARD_BLOCK_NODES ON -entity Lab7 -section_id Top was ignored
Warning (20028): Parallel compilation is not licensed and has been disabled
Info (21077): Low junction temperature is 0 degrees C
Info (21077): High junction temperature is 85 degrees C
Critical Warning (332012): Synopsys Design Constraints File file not found: 'antfarm.sdc'. A Synopsys Design Constraints File is required by the TimeQuest Timing Analyzer to get proper timing constraints. Without it, the Compiler will not properly optimize the design.
Info (332142): No user constrained base clocks found in the design. Calling "derive_clocks -period 1.0"
Info (332105): Deriving Clocks
    Info (332105): create_clock -period 1.000 -name VGA_CLK VGA_CLK
    Info (332105): create_clock -period 1.000 -name clkdiv:inst8|out clkdiv:inst8|out
    Info (332105): create_clock -period 1.000 -name clk clk
Info: Found TIMEQUEST_REPORT_SCRIPT_INCLUDE_DEFAULT_ANALYSIS = ON
Info: Analyzing Slow Model
Critical Warning (332148): Timing requirements not met
Info (332146): Worst-case setup slack is -235.377
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):  -235.377      -796.275 clk 
    Info (332119):    -5.356      -537.890 clkdiv:inst8|out 
    Info (332119):    -4.404      -118.369 VGA_CLK 
Info (332146): Worst-case hold slack is 0.445
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):     0.445         0.000 VGA_CLK 
    Info (332119):     0.445         0.000 clk 
    Info (332119):     0.445         0.000 clkdiv:inst8|out 
Info (332140): No Recovery paths to report
Info (332140): No Removal paths to report
Info (332146): Worst-case minimum pulse width slack is -1.631
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.631      -116.499 clk 
    Info (332119):    -1.631       -54.177 VGA_CLK 
    Info (332119):    -0.611      -252.954 clkdiv:inst8|out 
Info (332001): The selected device family is not supported by the report_metastability command.
Info: Analyzing Fast Model
Critical Warning (332148): Timing requirements not met
Info (332146): Worst-case setup slack is -90.782
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):   -90.782      -254.627 clk 
    Info (332119):    -1.481      -102.887 clkdiv:inst8|out 
    Info (332119):    -1.055       -23.563 VGA_CLK 
Info (332146): Worst-case hold slack is 0.215
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):     0.215         0.000 VGA_CLK 
    Info (332119):     0.215         0.000 clk 
    Info (332119):     0.215         0.000 clkdiv:inst8|out 
Info (332140): No Recovery paths to report
Info (332140): No Removal paths to report
Info (332146): Worst-case minimum pulse width slack is -1.380
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.380       -95.380 clk 
    Info (332119):    -1.380       -44.380 VGA_CLK 
    Info (332119):    -0.500      -207.000 clkdiv:inst8|out 
Info (332001): The selected device family is not supported by the report_metastability command.
Info (332102): Design is not fully constrained for setup requirements
Info (332102): Design is not fully constrained for hold requirements
Info: Quartus II 64-Bit TimeQuest Timing Analyzer was successful. 0 errors, 28 warnings
    Info: Peak virtual memory: 4635 megabytes
    Info: Processing ended: Wed Dec 04 08:58:50 2019
    Info: Elapsed time: 00:00:03
    Info: Total CPU time (on all processors): 00:00:03


